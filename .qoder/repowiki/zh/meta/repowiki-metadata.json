{"knowledge_relations":[{"id":67,"source_id":"4ed8be6d-9613-451d-809d-7f30529223fc","target_id":"16911f7b-ab46-48d0-b9b1-bba72596c717","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4ed8be6d-9613-451d-809d-7f30529223fc -\u003e 16911f7b-ab46-48d0-b9b1-bba72596c717","gmt_create":"2025-09-19T20:40:41.514011+08:00","gmt_modified":"2025-09-19T20:40:41.514012+08:00"},{"id":68,"source_id":"4ed8be6d-9613-451d-809d-7f30529223fc","target_id":"f03fbb51-ef23-4ff4-bfdc-f90c7af3fb61","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4ed8be6d-9613-451d-809d-7f30529223fc -\u003e f03fbb51-ef23-4ff4-bfdc-f90c7af3fb61","gmt_create":"2025-09-19T20:40:41.517147+08:00","gmt_modified":"2025-09-19T20:40:41.517147+08:00"},{"id":69,"source_id":"4ed8be6d-9613-451d-809d-7f30529223fc","target_id":"568543f7-f48c-4fb5-b1f6-6ce7015602b5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4ed8be6d-9613-451d-809d-7f30529223fc -\u003e 568543f7-f48c-4fb5-b1f6-6ce7015602b5","gmt_create":"2025-09-19T20:40:41.519079+08:00","gmt_modified":"2025-09-19T20:40:41.519079+08:00"},{"id":70,"source_id":"80888455-6b46-4649-b5d8-8b0feca613d7","target_id":"f8011640-e6a2-4b2e-982a-9378904028ea","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 80888455-6b46-4649-b5d8-8b0feca613d7 -\u003e f8011640-e6a2-4b2e-982a-9378904028ea","gmt_create":"2025-09-19T20:40:41.522545+08:00","gmt_modified":"2025-09-19T20:40:41.522545+08:00"},{"id":71,"source_id":"80888455-6b46-4649-b5d8-8b0feca613d7","target_id":"f5ddeda7-d4a1-43ad-826c-72df51a34c71","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 80888455-6b46-4649-b5d8-8b0feca613d7 -\u003e f5ddeda7-d4a1-43ad-826c-72df51a34c71","gmt_create":"2025-09-19T20:40:41.52346+08:00","gmt_modified":"2025-09-19T20:40:41.52346+08:00"},{"id":72,"source_id":"796b7bc3-66c0-428a-9087-7b6b8f97f4b8","target_id":"cd6a80e6-9e8d-4735-973d-e021816d7591","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 796b7bc3-66c0-428a-9087-7b6b8f97f4b8 -\u003e cd6a80e6-9e8d-4735-973d-e021816d7591","gmt_create":"2025-09-19T20:40:41.527175+08:00","gmt_modified":"2025-09-19T20:40:41.527175+08:00"},{"id":73,"source_id":"796b7bc3-66c0-428a-9087-7b6b8f97f4b8","target_id":"c993d699-096a-4293-96d0-90d9d62a3ff5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 796b7bc3-66c0-428a-9087-7b6b8f97f4b8 -\u003e c993d699-096a-4293-96d0-90d9d62a3ff5","gmt_create":"2025-09-19T20:40:41.527654+08:00","gmt_modified":"2025-09-19T20:40:41.527654+08:00"},{"id":74,"source_id":"796b7bc3-66c0-428a-9087-7b6b8f97f4b8","target_id":"47de96db-bae8-4766-8919-ea7174d02cae","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 796b7bc3-66c0-428a-9087-7b6b8f97f4b8 -\u003e 47de96db-bae8-4766-8919-ea7174d02cae","gmt_create":"2025-09-19T20:40:41.529306+08:00","gmt_modified":"2025-09-19T20:40:41.529306+08:00"},{"id":75,"source_id":"796b7bc3-66c0-428a-9087-7b6b8f97f4b8","target_id":"6bd6c7f5-4e40-4fdb-926d-d2c88a911f3a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 796b7bc3-66c0-428a-9087-7b6b8f97f4b8 -\u003e 6bd6c7f5-4e40-4fdb-926d-d2c88a911f3a","gmt_create":"2025-09-19T20:40:41.532427+08:00","gmt_modified":"2025-09-19T20:40:41.532427+08:00"},{"id":76,"source_id":"796b7bc3-66c0-428a-9087-7b6b8f97f4b8","target_id":"a416f08d-c6f3-4bd2-a313-0c84d3ff5178","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 796b7bc3-66c0-428a-9087-7b6b8f97f4b8 -\u003e a416f08d-c6f3-4bd2-a313-0c84d3ff5178","gmt_create":"2025-09-19T20:40:41.535472+08:00","gmt_modified":"2025-09-19T20:40:41.535472+08:00"},{"id":77,"source_id":"6496ddcb-e54b-44b2-9ec3-d28f5568834c","target_id":"f5ee828d-8fae-4dbc-9bbe-d5cc5c5e6f7f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6496ddcb-e54b-44b2-9ec3-d28f5568834c -\u003e f5ee828d-8fae-4dbc-9bbe-d5cc5c5e6f7f","gmt_create":"2025-09-19T20:40:41.539283+08:00","gmt_modified":"2025-09-19T20:40:41.539283+08:00"},{"id":78,"source_id":"6496ddcb-e54b-44b2-9ec3-d28f5568834c","target_id":"6114e677-eff5-493f-8131-f8a18dfabb39","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6496ddcb-e54b-44b2-9ec3-d28f5568834c -\u003e 6114e677-eff5-493f-8131-f8a18dfabb39","gmt_create":"2025-09-19T20:40:41.539782+08:00","gmt_modified":"2025-09-19T20:40:41.539782+08:00"},{"id":79,"source_id":"6496ddcb-e54b-44b2-9ec3-d28f5568834c","target_id":"6ae1ecdb-4062-4e08-85fa-88476bfa7ec0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6496ddcb-e54b-44b2-9ec3-d28f5568834c -\u003e 6ae1ecdb-4062-4e08-85fa-88476bfa7ec0","gmt_create":"2025-09-19T20:40:41.541763+08:00","gmt_modified":"2025-09-19T20:40:41.541763+08:00"},{"id":80,"source_id":"6496ddcb-e54b-44b2-9ec3-d28f5568834c","target_id":"c27a6178-8fc5-4cc4-8f51-7215cc541176","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6496ddcb-e54b-44b2-9ec3-d28f5568834c -\u003e c27a6178-8fc5-4cc4-8f51-7215cc541176","gmt_create":"2025-09-19T20:40:41.542171+08:00","gmt_modified":"2025-09-19T20:40:41.542171+08:00"},{"id":81,"source_id":"6496ddcb-e54b-44b2-9ec3-d28f5568834c","target_id":"aa2a6ed5-03f7-417d-9604-11e16c38ff6f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6496ddcb-e54b-44b2-9ec3-d28f5568834c -\u003e aa2a6ed5-03f7-417d-9604-11e16c38ff6f","gmt_create":"2025-09-19T20:40:41.544971+08:00","gmt_modified":"2025-09-19T20:40:41.544971+08:00"},{"id":82,"source_id":"6496ddcb-e54b-44b2-9ec3-d28f5568834c","target_id":"423d3aab-e042-442e-b06c-538873fdfd73","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6496ddcb-e54b-44b2-9ec3-d28f5568834c -\u003e 423d3aab-e042-442e-b06c-538873fdfd73","gmt_create":"2025-09-19T20:40:41.545375+08:00","gmt_modified":"2025-09-19T20:40:41.545375+08:00"},{"id":83,"source_id":"ba4cfa52-74cb-4a77-91d9-c00fe206dc39","target_id":"3299fbb9-bb5c-4dc4-be7b-62b861e13aec","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ba4cfa52-74cb-4a77-91d9-c00fe206dc39 -\u003e 3299fbb9-bb5c-4dc4-be7b-62b861e13aec","gmt_create":"2025-09-19T20:40:41.545788+08:00","gmt_modified":"2025-09-19T20:40:41.545788+08:00"},{"id":84,"source_id":"ba4cfa52-74cb-4a77-91d9-c00fe206dc39","target_id":"9dc6051f-6dea-4b78-af8d-9bfe0b9ae27f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ba4cfa52-74cb-4a77-91d9-c00fe206dc39 -\u003e 9dc6051f-6dea-4b78-af8d-9bfe0b9ae27f","gmt_create":"2025-09-19T20:40:41.546138+08:00","gmt_modified":"2025-09-19T20:40:41.546138+08:00"},{"id":85,"source_id":"ba4cfa52-74cb-4a77-91d9-c00fe206dc39","target_id":"6aaa346e-9438-41eb-a1f3-6cff61f2942d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ba4cfa52-74cb-4a77-91d9-c00fe206dc39 -\u003e 6aaa346e-9438-41eb-a1f3-6cff61f2942d","gmt_create":"2025-09-19T20:40:41.546465+08:00","gmt_modified":"2025-09-19T20:40:41.546465+08:00"},{"id":86,"source_id":"ba4cfa52-74cb-4a77-91d9-c00fe206dc39","target_id":"8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ba4cfa52-74cb-4a77-91d9-c00fe206dc39 -\u003e 8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7","gmt_create":"2025-09-19T20:40:41.5468+08:00","gmt_modified":"2025-09-19T20:40:41.5468+08:00"},{"id":87,"source_id":"1f887abc-33da-4733-8bc1-cfd1de15cc5d","target_id":"3b45686d-3c38-4bc8-9a14-89b4e185c195","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1f887abc-33da-4733-8bc1-cfd1de15cc5d -\u003e 3b45686d-3c38-4bc8-9a14-89b4e185c195","gmt_create":"2025-09-19T20:40:41.547132+08:00","gmt_modified":"2025-09-19T20:40:41.547132+08:00"},{"id":88,"source_id":"1f887abc-33da-4733-8bc1-cfd1de15cc5d","target_id":"b375d242-b5ec-4f71-8e5f-a9b424db6e77","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1f887abc-33da-4733-8bc1-cfd1de15cc5d -\u003e b375d242-b5ec-4f71-8e5f-a9b424db6e77","gmt_create":"2025-09-19T20:40:41.547451+08:00","gmt_modified":"2025-09-19T20:40:41.547451+08:00"},{"id":89,"source_id":"1f887abc-33da-4733-8bc1-cfd1de15cc5d","target_id":"5b45c55a-a925-4065-8173-d6f98ca0c9ff","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1f887abc-33da-4733-8bc1-cfd1de15cc5d -\u003e 5b45c55a-a925-4065-8173-d6f98ca0c9ff","gmt_create":"2025-09-19T20:40:41.54776+08:00","gmt_modified":"2025-09-19T20:40:41.54776+08:00"},{"id":90,"source_id":"6ea90305-8e09-497c-aa2a-d49f1e45e195","target_id":"bb970af4-0717-419a-8876-9feae2d3dfe2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6ea90305-8e09-497c-aa2a-d49f1e45e195 -\u003e bb970af4-0717-419a-8876-9feae2d3dfe2","gmt_create":"2025-09-19T20:40:41.548093+08:00","gmt_modified":"2025-09-19T20:40:41.548093+08:00"},{"id":91,"source_id":"6ea90305-8e09-497c-aa2a-d49f1e45e195","target_id":"6f8d38e9-6faa-4189-ac0a-0093c3659369","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6ea90305-8e09-497c-aa2a-d49f1e45e195 -\u003e 6f8d38e9-6faa-4189-ac0a-0093c3659369","gmt_create":"2025-09-19T20:40:41.548404+08:00","gmt_modified":"2025-09-19T20:40:41.548404+08:00"},{"id":92,"source_id":"6ea90305-8e09-497c-aa2a-d49f1e45e195","target_id":"058536fe-1459-45ef-966f-0b4c2581c181","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6ea90305-8e09-497c-aa2a-d49f1e45e195 -\u003e 058536fe-1459-45ef-966f-0b4c2581c181","gmt_create":"2025-09-19T20:40:41.548729+08:00","gmt_modified":"2025-09-19T20:40:41.548729+08:00"},{"id":93,"source_id":"858cd818-3e7c-47ca-9b79-7a97a5996b3a","target_id":"841b74aa-1686-4568-b42b-c178d63cd103","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 858cd818-3e7c-47ca-9b79-7a97a5996b3a -\u003e 841b74aa-1686-4568-b42b-c178d63cd103","gmt_create":"2025-09-19T20:40:41.549036+08:00","gmt_modified":"2025-09-19T20:40:41.549036+08:00"},{"id":94,"source_id":"858cd818-3e7c-47ca-9b79-7a97a5996b3a","target_id":"b23c9005-85a1-42ee-a75f-01d8a1459314","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 858cd818-3e7c-47ca-9b79-7a97a5996b3a -\u003e b23c9005-85a1-42ee-a75f-01d8a1459314","gmt_create":"2025-09-19T20:40:41.549345+08:00","gmt_modified":"2025-09-19T20:40:41.549345+08:00"},{"id":95,"source_id":"858cd818-3e7c-47ca-9b79-7a97a5996b3a","target_id":"0d51fcde-4f1f-429c-aebb-576a95072496","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 858cd818-3e7c-47ca-9b79-7a97a5996b3a -\u003e 0d51fcde-4f1f-429c-aebb-576a95072496","gmt_create":"2025-09-19T20:40:41.549686+08:00","gmt_modified":"2025-09-19T20:40:41.549686+08:00"},{"id":96,"source_id":"44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e","target_id":"a2a527a7-a87e-4020-a361-6fc32b17544f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e -\u003e a2a527a7-a87e-4020-a361-6fc32b17544f","gmt_create":"2025-09-19T20:40:41.550033+08:00","gmt_modified":"2025-09-19T20:40:41.550033+08:00"},{"id":97,"source_id":"44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e","target_id":"beca57a2-68e5-47e0-b3a4-6fe6d4cbe456","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e -\u003e beca57a2-68e5-47e0-b3a4-6fe6d4cbe456","gmt_create":"2025-09-19T20:40:41.550357+08:00","gmt_modified":"2025-09-19T20:40:41.550357+08:00"},{"id":98,"source_id":"44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e","target_id":"4dac7280-36fc-44cd-880d-14410dd0c486","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e -\u003e 4dac7280-36fc-44cd-880d-14410dd0c486","gmt_create":"2025-09-19T20:40:41.550683+08:00","gmt_modified":"2025-09-19T20:40:41.550683+08:00"},{"id":99,"source_id":"44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e","target_id":"8f4d9049-1d9b-4418-87b8-4e8c3a859414","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e -\u003e 8f4d9049-1d9b-4418-87b8-4e8c3a859414","gmt_create":"2025-09-19T20:40:41.551009+08:00","gmt_modified":"2025-09-19T20:40:41.551009+08:00"},{"id":100,"source_id":"854fca38-e044-4cc7-92a9-56f5b12d998d","target_id":"1bc1f663-8c85-4616-bab3-f2ef52c06a4c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 854fca38-e044-4cc7-92a9-56f5b12d998d -\u003e 1bc1f663-8c85-4616-bab3-f2ef52c06a4c","gmt_create":"2025-09-19T20:40:41.551332+08:00","gmt_modified":"2025-09-19T20:40:41.551332+08:00"},{"id":101,"source_id":"854fca38-e044-4cc7-92a9-56f5b12d998d","target_id":"120f3557-f866-4c46-9485-a050a678f279","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 854fca38-e044-4cc7-92a9-56f5b12d998d -\u003e 120f3557-f866-4c46-9485-a050a678f279","gmt_create":"2025-09-19T20:40:41.551636+08:00","gmt_modified":"2025-09-19T20:40:41.551636+08:00"},{"id":102,"source_id":"854fca38-e044-4cc7-92a9-56f5b12d998d","target_id":"aed80be0-faa6-4ebe-b9e1-73f5d8a71ea1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 854fca38-e044-4cc7-92a9-56f5b12d998d -\u003e aed80be0-faa6-4ebe-b9e1-73f5d8a71ea1","gmt_create":"2025-09-19T20:40:41.551947+08:00","gmt_modified":"2025-09-19T20:40:41.551947+08:00"},{"id":103,"source_id":"3ef03f1d-423a-4b5a-b508-bb6993a28a22","target_id":"5e6b2283-d032-4f60-b8e0-78491c9b2348","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ef03f1d-423a-4b5a-b508-bb6993a28a22 -\u003e 5e6b2283-d032-4f60-b8e0-78491c9b2348","gmt_create":"2025-09-19T20:40:41.552258+08:00","gmt_modified":"2025-09-19T20:40:41.552258+08:00"},{"id":104,"source_id":"3ef03f1d-423a-4b5a-b508-bb6993a28a22","target_id":"08ae8d3b-a308-4db5-8aa8-ee058d5a147d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ef03f1d-423a-4b5a-b508-bb6993a28a22 -\u003e 08ae8d3b-a308-4db5-8aa8-ee058d5a147d","gmt_create":"2025-09-19T20:40:41.552595+08:00","gmt_modified":"2025-09-19T20:40:41.552595+08:00"},{"id":105,"source_id":"3ef03f1d-423a-4b5a-b508-bb6993a28a22","target_id":"35e79f00-97b3-4294-8986-b98e4688c450","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ef03f1d-423a-4b5a-b508-bb6993a28a22 -\u003e 35e79f00-97b3-4294-8986-b98e4688c450","gmt_create":"2025-09-19T20:40:41.552906+08:00","gmt_modified":"2025-09-19T20:40:41.552907+08:00"},{"id":106,"source_id":"3ef03f1d-423a-4b5a-b508-bb6993a28a22","target_id":"c1830f76-7df2-4da8-aa2d-944a86c8c8c1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ef03f1d-423a-4b5a-b508-bb6993a28a22 -\u003e c1830f76-7df2-4da8-aa2d-944a86c8c8c1","gmt_create":"2025-09-19T20:40:41.553211+08:00","gmt_modified":"2025-09-19T20:40:41.553211+08:00"},{"id":107,"source_id":"3ef03f1d-423a-4b5a-b508-bb6993a28a22","target_id":"a725291b-aa76-4eb5-be1d-a5c38058ef1b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ef03f1d-423a-4b5a-b508-bb6993a28a22 -\u003e a725291b-aa76-4eb5-be1d-a5c38058ef1b","gmt_create":"2025-09-19T20:40:41.553522+08:00","gmt_modified":"2025-09-19T20:40:41.553522+08:00"},{"id":108,"source_id":"3ef03f1d-423a-4b5a-b508-bb6993a28a22","target_id":"92ee072e-c841-475f-a4a2-86a50c91392d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ef03f1d-423a-4b5a-b508-bb6993a28a22 -\u003e 92ee072e-c841-475f-a4a2-86a50c91392d","gmt_create":"2025-09-19T20:40:41.553845+08:00","gmt_modified":"2025-09-19T20:40:41.553845+08:00"},{"id":109,"source_id":"3ef03f1d-423a-4b5a-b508-bb6993a28a22","target_id":"31ee1fab-e394-4993-b24a-e4fcfe2dd873","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ef03f1d-423a-4b5a-b508-bb6993a28a22 -\u003e 31ee1fab-e394-4993-b24a-e4fcfe2dd873","gmt_create":"2025-09-19T20:40:41.554179+08:00","gmt_modified":"2025-09-19T20:40:41.554179+08:00"},{"id":110,"source_id":"3da2bcbe-9ae2-4105-bd8f-37ccfb089916","target_id":"99a321dd-b561-461c-9675-803acaae8e3a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3da2bcbe-9ae2-4105-bd8f-37ccfb089916 -\u003e 99a321dd-b561-461c-9675-803acaae8e3a","gmt_create":"2025-09-19T20:40:41.554527+08:00","gmt_modified":"2025-09-19T20:40:41.554527+08:00"},{"id":111,"source_id":"3da2bcbe-9ae2-4105-bd8f-37ccfb089916","target_id":"e8878ffc-3c78-4885-907a-6408bf1196d4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3da2bcbe-9ae2-4105-bd8f-37ccfb089916 -\u003e e8878ffc-3c78-4885-907a-6408bf1196d4","gmt_create":"2025-09-19T20:40:41.554853+08:00","gmt_modified":"2025-09-19T20:40:41.554853+08:00"},{"id":112,"source_id":"3da2bcbe-9ae2-4105-bd8f-37ccfb089916","target_id":"3be2763a-9f45-43df-af11-dcffc75314a3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3da2bcbe-9ae2-4105-bd8f-37ccfb089916 -\u003e 3be2763a-9f45-43df-af11-dcffc75314a3","gmt_create":"2025-09-19T20:40:41.55515+08:00","gmt_modified":"2025-09-19T20:40:41.55515+08:00"},{"id":113,"source_id":"6114e677-eff5-493f-8131-f8a18dfabb39","target_id":"437c27b9-db1c-42a8-8880-64f268185b9f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6114e677-eff5-493f-8131-f8a18dfabb39 -\u003e 437c27b9-db1c-42a8-8880-64f268185b9f","gmt_create":"2025-09-19T20:40:41.555905+08:00","gmt_modified":"2025-09-19T20:40:41.555905+08:00"},{"id":114,"source_id":"6114e677-eff5-493f-8131-f8a18dfabb39","target_id":"e8a7d261-97c7-444b-82cd-e76f457750db","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6114e677-eff5-493f-8131-f8a18dfabb39 -\u003e e8a7d261-97c7-444b-82cd-e76f457750db","gmt_create":"2025-09-19T20:40:41.556211+08:00","gmt_modified":"2025-09-19T20:40:41.556211+08:00"},{"id":115,"source_id":"6114e677-eff5-493f-8131-f8a18dfabb39","target_id":"673f18ee-cb69-44d6-8f36-b8c549875e73","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6114e677-eff5-493f-8131-f8a18dfabb39 -\u003e 673f18ee-cb69-44d6-8f36-b8c549875e73","gmt_create":"2025-09-19T20:40:41.556514+08:00","gmt_modified":"2025-09-19T20:40:41.556514+08:00"},{"id":116,"source_id":"6aaa346e-9438-41eb-a1f3-6cff61f2942d","target_id":"b14dd261-7d05-4208-bc86-99e91ff5a8c5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6aaa346e-9438-41eb-a1f3-6cff61f2942d -\u003e b14dd261-7d05-4208-bc86-99e91ff5a8c5","gmt_create":"2025-09-19T20:40:41.557124+08:00","gmt_modified":"2025-09-19T20:40:41.557124+08:00"},{"id":117,"source_id":"6aaa346e-9438-41eb-a1f3-6cff61f2942d","target_id":"58d4476f-2106-42ce-a068-cda3b5718e17","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6aaa346e-9438-41eb-a1f3-6cff61f2942d -\u003e 58d4476f-2106-42ce-a068-cda3b5718e17","gmt_create":"2025-09-19T20:40:41.557419+08:00","gmt_modified":"2025-09-19T20:40:41.557419+08:00"},{"id":118,"source_id":"6aaa346e-9438-41eb-a1f3-6cff61f2942d","target_id":"310a44ba-3a6c-4954-b2a7-c6cd6c5b6908","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6aaa346e-9438-41eb-a1f3-6cff61f2942d -\u003e 310a44ba-3a6c-4954-b2a7-c6cd6c5b6908","gmt_create":"2025-09-19T20:40:41.557713+08:00","gmt_modified":"2025-09-19T20:40:41.557713+08:00"},{"id":119,"source_id":"6aaa346e-9438-41eb-a1f3-6cff61f2942d","target_id":"cf458c08-d08b-406e-9758-0612c68a2139","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6aaa346e-9438-41eb-a1f3-6cff61f2942d -\u003e cf458c08-d08b-406e-9758-0612c68a2139","gmt_create":"2025-09-19T20:40:41.558023+08:00","gmt_modified":"2025-09-19T20:40:41.558023+08:00"},{"id":120,"source_id":"6aaa346e-9438-41eb-a1f3-6cff61f2942d","target_id":"2b7a9341-a9b7-4705-8211-2c2d886d7d8d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6aaa346e-9438-41eb-a1f3-6cff61f2942d -\u003e 2b7a9341-a9b7-4705-8211-2c2d886d7d8d","gmt_create":"2025-09-19T20:40:41.558312+08:00","gmt_modified":"2025-09-19T20:40:41.558312+08:00"},{"id":121,"source_id":"c27a6178-8fc5-4cc4-8f51-7215cc541176","target_id":"ad762cc5-61eb-49bb-8e0a-e5a6ba06308c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c27a6178-8fc5-4cc4-8f51-7215cc541176 -\u003e ad762cc5-61eb-49bb-8e0a-e5a6ba06308c","gmt_create":"2025-09-19T20:40:41.55882+08:00","gmt_modified":"2025-09-19T20:40:41.55882+08:00"},{"id":122,"source_id":"c27a6178-8fc5-4cc4-8f51-7215cc541176","target_id":"cbd19d44-3418-4db3-85d9-86deff4f7fa2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c27a6178-8fc5-4cc4-8f51-7215cc541176 -\u003e cbd19d44-3418-4db3-85d9-86deff4f7fa2","gmt_create":"2025-09-19T20:40:41.559103+08:00","gmt_modified":"2025-09-19T20:40:41.559103+08:00"},{"id":123,"source_id":"c27a6178-8fc5-4cc4-8f51-7215cc541176","target_id":"d1d241f0-f658-4d3c-973a-aa189869e814","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c27a6178-8fc5-4cc4-8f51-7215cc541176 -\u003e d1d241f0-f658-4d3c-973a-aa189869e814","gmt_create":"2025-09-19T20:40:41.559383+08:00","gmt_modified":"2025-09-19T20:40:41.559384+08:00"},{"id":124,"source_id":"8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7","target_id":"f1bd370a-be18-4cb5-b475-1677ad45b14e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7 -\u003e f1bd370a-be18-4cb5-b475-1677ad45b14e","gmt_create":"2025-09-19T20:40:41.559705+08:00","gmt_modified":"2025-09-19T20:40:41.559705+08:00"},{"id":125,"source_id":"8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7","target_id":"296210ee-810e-4300-8f0c-167beb0d1aaf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7 -\u003e 296210ee-810e-4300-8f0c-167beb0d1aaf","gmt_create":"2025-09-19T20:40:41.559984+08:00","gmt_modified":"2025-09-19T20:40:41.559984+08:00"},{"id":126,"source_id":"8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7","target_id":"f9167802-98a9-4467-b3b4-6ac008fda9c5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7 -\u003e f9167802-98a9-4467-b3b4-6ac008fda9c5","gmt_create":"2025-09-19T20:40:41.560269+08:00","gmt_modified":"2025-09-19T20:40:41.560269+08:00"},{"id":127,"source_id":"8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7","target_id":"5c4baf27-4507-4b23-b8a6-27fd24fd7b67","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7 -\u003e 5c4baf27-4507-4b23-b8a6-27fd24fd7b67","gmt_create":"2025-09-19T20:40:41.560549+08:00","gmt_modified":"2025-09-19T20:40:41.560549+08:00"},{"id":128,"source_id":"8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7","target_id":"81909eb2-6b4f-48cd-ba7d-24adb88513a3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7 -\u003e 81909eb2-6b4f-48cd-ba7d-24adb88513a3","gmt_create":"2025-09-19T20:40:41.560847+08:00","gmt_modified":"2025-09-19T20:40:41.560847+08:00"},{"id":129,"source_id":"f1bd370a-be18-4cb5-b475-1677ad45b14e","target_id":"898a9bab-629f-4fc8-9f79-f250980bece4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f1bd370a-be18-4cb5-b475-1677ad45b14e -\u003e 898a9bab-629f-4fc8-9f79-f250980bece4","gmt_create":"2025-09-19T20:40:41.561448+08:00","gmt_modified":"2025-09-19T20:40:41.561448+08:00"},{"id":130,"source_id":"f1bd370a-be18-4cb5-b475-1677ad45b14e","target_id":"60ed9bd4-bb5a-48de-beb8-5cb0c35beae3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f1bd370a-be18-4cb5-b475-1677ad45b14e -\u003e 60ed9bd4-bb5a-48de-beb8-5cb0c35beae3","gmt_create":"2025-09-19T20:40:41.561752+08:00","gmt_modified":"2025-09-19T20:40:41.561752+08:00"},{"id":131,"source_id":"f1bd370a-be18-4cb5-b475-1677ad45b14e","target_id":"dcd9fe3e-40a0-4e42-8e0d-64776b75efb9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f1bd370a-be18-4cb5-b475-1677ad45b14e -\u003e dcd9fe3e-40a0-4e42-8e0d-64776b75efb9","gmt_create":"2025-09-19T20:40:41.562033+08:00","gmt_modified":"2025-09-19T20:40:41.562033+08:00"},{"id":132,"source_id":"f1bd370a-be18-4cb5-b475-1677ad45b14e","target_id":"6dd5780b-4809-4980-939d-130696f1bc05","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f1bd370a-be18-4cb5-b475-1677ad45b14e -\u003e 6dd5780b-4809-4980-939d-130696f1bc05","gmt_create":"2025-09-19T20:40:41.562315+08:00","gmt_modified":"2025-09-19T20:40:41.562315+08:00"},{"id":133,"source_id":"296210ee-810e-4300-8f0c-167beb0d1aaf","target_id":"3e0c79a2-7b32-49bf-9ebb-86d87e440eaf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 296210ee-810e-4300-8f0c-167beb0d1aaf -\u003e 3e0c79a2-7b32-49bf-9ebb-86d87e440eaf","gmt_create":"2025-09-19T20:40:41.562722+08:00","gmt_modified":"2025-09-19T20:40:41.562722+08:00"},{"id":134,"source_id":"296210ee-810e-4300-8f0c-167beb0d1aaf","target_id":"f98d0581-0a22-4ff3-9ed4-5a16d02afcdc","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 296210ee-810e-4300-8f0c-167beb0d1aaf -\u003e f98d0581-0a22-4ff3-9ed4-5a16d02afcdc","gmt_create":"2025-09-19T20:40:41.563005+08:00","gmt_modified":"2025-09-19T20:40:41.563005+08:00"},{"id":135,"source_id":"296210ee-810e-4300-8f0c-167beb0d1aaf","target_id":"7c588b9f-558d-4413-9ad9-e98da2652a3c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 296210ee-810e-4300-8f0c-167beb0d1aaf -\u003e 7c588b9f-558d-4413-9ad9-e98da2652a3c","gmt_create":"2025-09-19T20:40:41.563302+08:00","gmt_modified":"2025-09-19T20:40:41.563302+08:00"},{"id":136,"source_id":"296210ee-810e-4300-8f0c-167beb0d1aaf","target_id":"f2f4e258-4b77-446e-a69a-92041e3e7a18","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 296210ee-810e-4300-8f0c-167beb0d1aaf -\u003e f2f4e258-4b77-446e-a69a-92041e3e7a18","gmt_create":"2025-09-19T20:40:41.563583+08:00","gmt_modified":"2025-09-19T20:40:41.563583+08:00"},{"id":137,"source_id":"310a44ba-3a6c-4954-b2a7-c6cd6c5b6908","target_id":"5ee5effc-40a5-4c4c-8cab-f5f764b24d77","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 310a44ba-3a6c-4954-b2a7-c6cd6c5b6908 -\u003e 5ee5effc-40a5-4c4c-8cab-f5f764b24d77","gmt_create":"2025-09-19T20:40:41.563917+08:00","gmt_modified":"2025-09-19T20:40:41.563917+08:00"},{"id":138,"source_id":"310a44ba-3a6c-4954-b2a7-c6cd6c5b6908","target_id":"f1ec574d-b0de-44a9-9598-64b75ee2a56f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 310a44ba-3a6c-4954-b2a7-c6cd6c5b6908 -\u003e f1ec574d-b0de-44a9-9598-64b75ee2a56f","gmt_create":"2025-09-19T20:40:41.564221+08:00","gmt_modified":"2025-09-19T20:40:41.564221+08:00"},{"id":139,"source_id":"310a44ba-3a6c-4954-b2a7-c6cd6c5b6908","target_id":"763079cc-eb51-459f-89ea-4f1c5bf4fa60","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 310a44ba-3a6c-4954-b2a7-c6cd6c5b6908 -\u003e 763079cc-eb51-459f-89ea-4f1c5bf4fa60","gmt_create":"2025-09-19T20:40:41.564496+08:00","gmt_modified":"2025-09-19T20:40:41.564496+08:00"},{"id":140,"source_id":"f9167802-98a9-4467-b3b4-6ac008fda9c5","target_id":"1308ac70-1e3c-4af4-8acc-b5c4e025fbf4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f9167802-98a9-4467-b3b4-6ac008fda9c5 -\u003e 1308ac70-1e3c-4af4-8acc-b5c4e025fbf4","gmt_create":"2025-09-19T20:40:41.564859+08:00","gmt_modified":"2025-09-19T20:40:41.56486+08:00"},{"id":141,"source_id":"f9167802-98a9-4467-b3b4-6ac008fda9c5","target_id":"4edfcdc6-9630-4b15-a773-9dc9b6111034","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f9167802-98a9-4467-b3b4-6ac008fda9c5 -\u003e 4edfcdc6-9630-4b15-a773-9dc9b6111034","gmt_create":"2025-09-19T20:40:41.565182+08:00","gmt_modified":"2025-09-19T20:40:41.565182+08:00"},{"id":142,"source_id":"f9167802-98a9-4467-b3b4-6ac008fda9c5","target_id":"a6adbbb2-9564-4708-a89b-7c287bb6aafd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f9167802-98a9-4467-b3b4-6ac008fda9c5 -\u003e a6adbbb2-9564-4708-a89b-7c287bb6aafd","gmt_create":"2025-09-19T20:40:41.565464+08:00","gmt_modified":"2025-09-19T20:40:41.565464+08:00"},{"id":143,"source_id":"5c4baf27-4507-4b23-b8a6-27fd24fd7b67","target_id":"45dbea21-436b-47c2-ab8b-e269ae7ee809","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5c4baf27-4507-4b23-b8a6-27fd24fd7b67 -\u003e 45dbea21-436b-47c2-ab8b-e269ae7ee809","gmt_create":"2025-09-19T20:40:41.565791+08:00","gmt_modified":"2025-09-19T20:40:41.565791+08:00"},{"id":144,"source_id":"5c4baf27-4507-4b23-b8a6-27fd24fd7b67","target_id":"50f0acaf-dedb-4130-af50-1ab5fe1030a6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5c4baf27-4507-4b23-b8a6-27fd24fd7b67 -\u003e 50f0acaf-dedb-4130-af50-1ab5fe1030a6","gmt_create":"2025-09-19T20:40:41.566076+08:00","gmt_modified":"2025-09-19T20:40:41.566076+08:00"},{"id":145,"source_id":"5c4baf27-4507-4b23-b8a6-27fd24fd7b67","target_id":"ed5fd62d-2800-4e4a-bc0e-5d3167dd2749","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5c4baf27-4507-4b23-b8a6-27fd24fd7b67 -\u003e ed5fd62d-2800-4e4a-bc0e-5d3167dd2749","gmt_create":"2025-09-19T20:40:41.566359+08:00","gmt_modified":"2025-09-19T20:40:41.566359+08:00"},{"id":146,"source_id":"81909eb2-6b4f-48cd-ba7d-24adb88513a3","target_id":"f42bbe3b-211f-4287-94c8-1a5994dea490","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 81909eb2-6b4f-48cd-ba7d-24adb88513a3 -\u003e f42bbe3b-211f-4287-94c8-1a5994dea490","gmt_create":"2025-09-19T20:40:41.566653+08:00","gmt_modified":"2025-09-19T20:40:41.566653+08:00"},{"id":147,"source_id":"81909eb2-6b4f-48cd-ba7d-24adb88513a3","target_id":"c064035d-8cee-4c3d-80d5-d24353427805","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 81909eb2-6b4f-48cd-ba7d-24adb88513a3 -\u003e c064035d-8cee-4c3d-80d5-d24353427805","gmt_create":"2025-09-19T20:40:41.566965+08:00","gmt_modified":"2025-09-19T20:40:41.566965+08:00"},{"id":148,"source_id":"81909eb2-6b4f-48cd-ba7d-24adb88513a3","target_id":"e626fd0c-18ad-4b6a-be60-a4a856a8747b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 81909eb2-6b4f-48cd-ba7d-24adb88513a3 -\u003e e626fd0c-18ad-4b6a-be60-a4a856a8747b","gmt_create":"2025-09-19T20:40:41.567346+08:00","gmt_modified":"2025-09-19T20:40:41.567346+08:00"},{"id":149,"source_id":"c064035d-8cee-4c3d-80d5-d24353427805","target_id":"087f6e82-3e32-4ad2-b5c9-77e4aea0b03a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c064035d-8cee-4c3d-80d5-d24353427805 -\u003e 087f6e82-3e32-4ad2-b5c9-77e4aea0b03a","gmt_create":"2025-09-19T20:40:41.568191+08:00","gmt_modified":"2025-09-19T20:40:41.568191+08:00"},{"id":150,"source_id":"c064035d-8cee-4c3d-80d5-d24353427805","target_id":"9c3da1c0-c3c9-465e-92cc-066b593d37e7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c064035d-8cee-4c3d-80d5-d24353427805 -\u003e 9c3da1c0-c3c9-465e-92cc-066b593d37e7","gmt_create":"2025-09-19T20:40:41.568567+08:00","gmt_modified":"2025-09-19T20:40:41.568567+08:00"}],"wiki_catalogs":[{"id":"6ac3cf05-f19a-4a4a-af20-bd319489cd08","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"项目概述","description":"project-overview","prompt":"创建关于dongting项目的全面概述内容。解释该项目作为高性能分布式系统引擎的定位与核心目标，重点介绍其集成RAFT一致性算法、分布式KV存储（DtKV）、Fiber协程系统和高性能网络通信的核心能力。阐述项目的设计理念，如零外部依赖、线性一致性保障、基于Fiber的轻量级并发模型。说明其适用场景，如分布式配置中心、服务发现、分布式锁等。结合README.md中的描述和devlogs中的设计思考，详细说明项目的技术优势和与同类系统的差异。为初学者提供高层次理解，同时为高级用户提供架构决策背景。","parent_id":"","order":0,"progress_status":"completed","dependent_files":"README.md,devlogs/2024_07_26_raft算法的工程实现秘笈.md,devlogs/2023_07_27_dongting的定位和原则.txt","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.58227+08:00","gmt_modified":"2025-09-19T19:35:34.972704+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02elJtBUgH0Ns0veIx1WPtM9wwkxI+/XAqHLxJLlHB8wV7ojrH0+b4JMz5OewwhBN1F5hlG2gDuVfW0jtFxUiQo7hUUWONysYy0O4ZR+WKIENektW59VuzV5D+ndyJ8Zii9WbgOIirqqKh+lZQLZ3vkfBLtEdhiT2uruYoZ5zukLGZLltrqMcOp3GJhT9ZNRwVvRkxXGFZpP8IQvIAzYjB/NfF9BatP2xVERDVgixSzeYuAMp0odtVSVwwDCt/wIXEAick2RD0lUGwLJaSeHjoHvbe4E5Wn/f5Ebe+wTguKaBruIYL8TLZmKl0lFkkc9jUaMsBvcAgqMOeHHJ0qeheQxWjo8ysWg+YnD9VqyivXBP3itN63qIolYIjdJutZ7nW2eMy3akEtGk0/9EBGuByWSZeoa5HUGbEGxXEcmNLVHgDTG6HshCpfVOWkxWqJJ6rxooRflD/62Ab3DVV0oCsGpt7s/7QY75Xb+vw5uUPpVTzmW982vc78lfjXiatFq3pkMZDG8KZ6uuSzJTI4Mm/BtfEYf/hxC1RTIFNhY8tl++rvN/3fViq5hkvOonuX7o8rKxkqIY3SlSblhxGbag70Sg/wWaVb3jtGWf/ErVZ5t8S9oEFvEOsRZ/QlXRK+ixkJ5Hr+vaXadby/pM5K0YMT3Ad/U+IK9sx603IKX1p9Msf1isIxhVFNtsBK63Z0rjBeS6MyEa7wO82WzdA8uGUl3JdYT6ioJaqSsYDLkIOGhzNqjZJ8VlrU8ZL5fK2v/uNh0U5Tivefh1nvSxNfDNwOPis8i6lFG1kjySXxEBEX0sY7jE5D8468ZzMr9YOw0/6uKL8rZjcMN1iz9n3HwspK4ASVB1pnfbcofZS7dcqhGo+4NeAA/zdMyHocxLNM64eob/9hoYeAEQZF1UIipP7p3s6hPDWv+nhciNmTVmrvKXHoBaehpb77Yfhkj4CH1M39EYbhYBsHFa7tpuJRuX2OLwyWnLXpM0hZQOJKSRdpbjCV7cOp23S/ZiIKF/Sn1b2dxTEIGfPJIE6DFfPo8KqW1+Ywiq0/0nIn671Jhf8tB94nbkIQxqEqlYoBu3PIGMt0y3S9uvxEm0sn+R8WRvChsuw1xhr4JLXEfCy+5lkcVDU0WmAZhCw6Wb1+M7tWg+fu8MPTVM5/mdg16+4uJFCYzIDVsSN8R4SnhL6RUnzjYNGRr3hclvff+rw3BQGW7jVOdMiZsGx/0AlDd1VZ4G4HFlvby5atHlIsqjDZlCvFbEe+C5ZNVF/cqaoxGctQYEpyZPi/HHyBQ22Gxpk+SEaGg","layer_level":0},{"id":"6220b9e9-a38b-4fa7-aafd-9fe9f059bdcd","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"服务器配置","description":"server-configuration","prompt":"创建关于RaftServerConfig的详细配置文档。重点介绍RaftServerConfig类中定义的各项服务器端配置参数，包括servers、replicatePort、servicePort、nodeId、electTimeout、rpcTimeout、connectTimeout、heartbeatInterval、checkSelf和blockIoThreads。对每个参数，明确其作用、默认值、合理取值范围及在不同场景下的调优建议。例如，解释heartbeatInterval与electTimeout的推荐比例关系，blockIoThreads在高IO负载下的设置策略。提供一个生产环境的典型配置示例，并说明其设计考量。结合RAFT算法原理，阐述这些参数如何影响集群的稳定性、选举效率和故障恢复能力。","parent_id":"1156c858-9266-41c7-bd13-442758f625d4","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServerConfig.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:22.678013+08:00","gmt_modified":"2025-09-19T19:46:48.603243+08:00","raw_data":"WikiEncrypted:DfAL4INOq29Pd0V8no8kjDVdqiAmsd9wMMZq8rmSjh8FLYWG7Zize54U3wNePVMaL31W9Jopj16LxWxpeOPxVKuxa8j0ggXB3z1VRk20kzJrh4sCbP8S7FnoaY729YqFZCEcDXDSPxWsBInMx9pEyRDLVxhaHHfRxs2BB88p8LXUalqcqXIvPzsNyBFjWccdPLjE8/zNpr3hp7wGxQBqIr919lZYH0bL9PGjcPN8tkDNzqeXauHPMroj55ulqQQizBW84XL9GCqAewVigG1CPvQCzxdTc2aGvk5+2xPnDOjBqpf1NNScHwLSAb5sxw79ZPFLcp/oap399KNE/8Wasp//avDXhmdUEqLbqwt9HWRXQB1coIn1/EGqU4q8+/NLDIyI9rNHkMjWmsNGw6AUdx+xOJrBzYMdB6RzE24tQs2+0chomuVBQcp5p/Zklp/eWa6YLv3mVcmUBzrqXvJAIq0Z2nmsOodDOYJhQiOKytFAu7iD0OKDQ5+F5cE0L36YVcRt12Tzyq7K2R8hfAhY9TaC2truW/v7ttCztYShioSERhOxax92ChdkgfnpAi46hxazhJ/QohCrB4kPUtD7as7C2H/aya0SABD8WlTf8iVsoPgr1TWSQaqyJKJeTDL8+jJvm4rhJECeONTyfVqFO4FuTCCqeNpWbKApB+E8Y/SKca7RG2BUieMko2qXwOf46ceJfhdQnKR6GiVjwsNgEBvQdJdGzJ0UC6o6N3JJTBwTjyucleZBsky62s0GAegWvyZGqI85vVZ7gvObMh/x+0Su1HNkhFgLovdu/kqqpbV5OvPH6/IKYO/tcaCzKzW6qCIIZQk/LD+SXF0c+12wKGCZwYG2aWT9RI+RYz5A70NlR18ejN7YOK5rj3EE9F+sl5iqSEV5K+2N/SWEpr9xVnEFDqk3aLPaE2BI0MPSWq7xbMHua55wL5Pvkpj+Gz4v6f56yu/lmv3SKmBXF6RMSOuKzMLT6KyPDIe2zgCgIKHPnXhwOIpmcy963FFy5Mf/UtTcvqIG5AdFp2xRbkupxZ92+UCHZlljB19ZfHFTiL9RfLwziyUaPItJ+LMQ/NyJFfa24VeHMDxLEKybRE43QniggDfeEM2ejB6kQAUfYmGnjXIzfrsnv6BW44yN31OvK9NetMjkpICG9BMNGEvL+elSy9Dpo0tOQ/c1HnwYtE8tVkY6Zs9avv66wnqBDmbL2zf0NTlv21EU8QRLN3hDabzjVKfu8HBvpYzlvTkIiA3qqhIUojGputGUe1PVIQPTRrt27nUHETjUaz0OZyShCOg2Np2nChcct4OJ63PB4zM1pxv9PYMYTOzwHVBu6tUmTzKKj5GHerti3EJsxZVWceB5D6PjYQQF/adIOySrGSM=","layer_level":1},{"id":"01eb873a-2aea-4183-ada1-8eaccd7c3224","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"Fiber协程模型","description":"fiber-coroutine","prompt":"深入讲解Fiber无栈协程系统的设计与实现。解释Fiber与Java线程的本质区别，阐述其基于事件循环的调度机制和极低的内存开销优势。详细说明Fiber的创建、启动、挂起、恢复等生命周期管理机制，结合Fiber.java中的核心字段和方法（如call、sleep、yield、join）进行代码级解析。介绍FiberGroup作为协程调度单元的作用，以及Dispatcher如何实现单线程内的协程调度。通过实际代码示例展示如何编写Fiber协程任务，对比传统线程编程的复杂性，突出Fiber在简化异步编程模型上的优势。同时说明异常处理、超时控制、信号量机制等高级特性，并指出使用中的常见陷阱和性能调优建议。","parent_id":"05c7a5ec-036b-4e80-af0c-93e07d64e27b","order":0,"progress_status":"completed","dependent_files":"devlogs/2024_07_16_3000行代码实现fiber.md,server/src/main/java/com/github/dtprj/dongting/fiber/Fiber.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberGroup.java,server/src/main/java/com/github/dtprj/dongting/fiber/Dispatcher.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:29.348799+08:00","gmt_modified":"2025-09-19T19:47:41.501004+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIo3qhkwSjR3E9mz2/iMe4S+mE3HYOwcnKert+6hWZ8cZWRoEr/YsQw5HeOApHn3OycW/8dOHV084fXNI7VZ/YT/bsQymqC3bnIpQNhLqK/jgI49AdPfj1fnBE9al0IIkV06LAqqahCu7zHo7O68Wo2+32VbURP6PgUJnaz6+siwPP7FRWWPHmaMpc9MsMapZwzM0LIAIAuRi5oSBeTGJ4qphSv6+xWYOyjmVdxoH8fUlIof+Y/f4h9Va7n5srtW/yPWtoPrkBRUJn7sfkcewMzsk6W1Ve/tWVhb0Im4XPjfSeP8dDowY10QsvlIw6hZZKd9uA/YINZ9r8tNToA13aRb/sg9eCBZhZKuayHdZ8VZXMQp6/h1Jt59mekUKMCFu4XVX6l5s+WS8Qv6SPx+CsG3mS6VSxt6HljnBoI64pwheldP+nXOVh3jnbNkCrQpGZxAf1FGJHL4InsrLEZtDkWjmoNsIo3EaHW+o9eagtbLorvUaCZKNVgRPdUKJRNL0aow2234ni+tYS0GSjiSgLp5IugdLxPaDtgTnjSGmaebbEblRlwZGsk66cDQoLBkfqYVW6JKxY8hAbNjqV430hTQjLzi2n4JNGOgZMkBHilhohf4O5YvgmBjCmWnbqAgySPvqmxT7UIxy+YhnkOyTnnMtjgSHXwJvW5KJvAqF4l/sOR/U4plPQQd4m2TB83oN0Jb3BN/OPhddNbdFLulLTH25cD7G3IK7jRw0UuPJeyWmWORLhuFWqcln9PlcOlZVWyt7n+VXh23MwnK23xNH5/lRSmVqfZjG3tWb0rZY5YacVR2qzPNF9D2G4oc3ygfiu/W9tLFq1dULQe3dBNPpTOphnSnOPyFBhisG7A9QDgQx+oZyWXp0BEVB17RdA5idwiwj9ghJxozNbKiZFzwSpy754xlwjWcAshUo8rqMr60CAj/Lm9MwFfsNEqVSLDGdZxE67KfRZvp3Ib+v9m/MBA+tyF7XH7HZNdO8r2jPqyx6GAWUNWcXNsOk2xGd2n5XMof89jnqHAiYnBqsGtY5vLUNgXR8MgRlq1XRv4XAKt1Srx5Yx/YSgiFdKqsTyLDkGRjIiWUQClzXyK3CJ/9GkpFNPqRPmuaWd7kW73J36BlOwVQbREe9Yz6ws3pb7rt7Ihu0yV1ih3acuMuRVKuJ411DMSA3XRZzo8iSAqJSOqdIQdvyGzFdA90NeIx26UF3QKPeHEACFRNuUeudBVvuuzNQ39Cc0QXgRM3K0fQWvFcD7sEnXGd8L6LMhTYJ2eW0KQ0/VvVwGyGmJC3DXgxKvt2jFV1g4vzlqzjZoiQJ6TsE8B2Uy1flWNCJCCbx4uGMAV9X4O+sT0deqB43/ChwVLM4F/PGTWpmg5TDkB/mfzM7rO1Ys3La6PBcHXN7UKetkBS68Tsd4jVbbeRQuRrszUWskiIjvACK3+cPCpsb+R+Cu0t1liOsD2Noccyz5EgbRWa0WjXwVmcwsAqqIULBi5N2BUlyTQdAriSVWs7GLfJAd2wb8CGss1Y3of0K4+n51xK6PkFOVdLxWxLxx5sUN0nUE/vG8TPN3UJ8KrcY855EMWnIr/keKjczEK5cGi1J0jdbzOtkkY7skJ8xAaswcAu0yfheWE4wyFx2x12aiA0FDfwDYSOS+r58Inoh9bHZAw==","layer_level":1},{"id":"6beaf0e6-4236-4638-96c1-b593ba30e4b5","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"角色管理","description":"raft-roles","prompt":"创建详细的RAFT角色管理文档。重点解释Leader、Follower和Candidate三种角色的状态定义、转换条件和触发机制。结合RaftRole枚举和NodeManager类的实现，说明角色切换时的内部状态更新、定时器管理以及对其他模块（如日志复制、选举）的影响。提供状态转换图示例，并通过RaftGroupImpl中的实际代码逻辑展示角色变更的处理流程。为开发者提供角色状态监控和调试建议，以及在定制化场景中安全操作角色的注意事项。","parent_id":"29a33e01-a4d7-4a7b-ae5b-9e7d7bf2b913","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/impl/RaftRole.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/NodeManager.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/RaftGroupImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:46.567639+08:00","gmt_modified":"2025-09-19T19:48:10.236121+08:00","raw_data":"WikiEncrypted:EdcX56vlL+o/HfeOn3xIdSE3VS9iayBP+x7xeQwDz2yecqUhz9F2HnqFaE+DEBocTJ5mU771VRDkLtfSzVkYKNM0Q4dQy8w4o4ZSv+5BJvUQFKIC7IpsfV996B2Ab807NagJwnemZwqoIE8+X5TSJJZufScBBxH86GWx0cQS2DXsePcyUK7ZtyQnvz1VYv4RbaH2DfG8Dlof97fDeqHVeckZdUTNfLJtwqLT1/5yyWmqr+W9nWqDG1ADWWZWRdGO7/MT8RqMGpa3GMFUJiwg4HZJSNOBlpW5Qhd1Gb8LtjRyPU2qRHAjLlcDJ/LyPz9xxzEN83q4XwlfJEpL+lRyUnnyFlXslKcsSHFP7o9BMFBexZWnYakD5mEt9fCaNii43b/hnSuPIDm32OszdahZTo1oLjYae9Qf9ol0zBmo/B8Wr2dRQFAKqzEsMOqxXNG4a5UIEzLT63J1c7nExBp0oA58na/sUj8tjRz0yS1zuKAWF2WDwlsOU/137mO7vh6QD9WcqhB6d+X0ktn0mZQEAkvra+KriPxFAZaL+O7hCKA1607kKnKqYby/AY0beHD+QurIYEt2bkiGe1NjKk5rJp42jD1/S7XEhEWostOg354ricxc1F/AL4w+2ehTe8VO65OxZHcsuaQhQqZmwQqegMatL/jpn1M+8KUMo5fDh+8kOTYKw+981cKzbShMwdppGTsFmqEl6fp5cHbFzMxpGKA2WT8j2qnRzeaMfWSbBUf6Lmj6eGqu/2OJ8nYF19ck3Y71VMLavEXu/sy6QYiRoZtgxsJimK3cwcGNpDwIi4X9Qq990+/jJxreFKGHNe4GxnMu9o90kAxiYEVlVahM0Yj5KVhDqQsj67OorE9aykC02TxbErIrxKZuOmR23fk3VW7aODF3REof+BVt63parp0+aW9vd+lRKrie7yUP1wtKrii1f0h4kDqus0TKGRF6ANVcQqTHd5gGp6Y4VEWozH/Opn+CBFQAZd9goxet0sUQoTO9V4OT5zQNSnTTGT6SNPzKyAdGUbK/YTjB8AMByArZGDpYY2sjiAdA2f/wJyYjnm9/v+UBhI90TD+i5YwszaeM0i2mKrJGBzOYH8xYZ397sW8gNsts0zlLQuM6bkfaTfMzf03GpwRImJa6pUrr60JwkgCF3QaFZV6tDNO67k2OnxTvoBes9RzdfpAXUWZk1AJBCmMfC5m2VV2BfjeBC54NNO8Z7uYu7Xr7nywA+AFKNr5M8Ihfq6iXLN0HT1kLZRiDDRfYPgPeTqG9xI+PHEjJ7Hz2k/iSuSIPDIjI1kaeXgdPnp16qYIVEpr9jK4=","layer_level":1},{"id":"5cc082e9-14fe-46d2-b670-1b94e33c3c6f","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"Fiber创建与启动","description":"fiber-creation","prompt":"开发Fiber创建与启动机制的详细文档。解释如何通过Fiber构造函数创建协程实例，包括name、FiberGroup、entryFrame等参数的含义。说明daemon属性和signalCountInEachRound调度参数的作用。详细描述FiberGroup的fireFiber和start方法在协程启动过程中的角色。提供创建和启动Fiber的标准代码示例，展示同步和异步启动的区别。解释Fiber生命周期状态（started、ready、finished）的转换机制。为开发者提供协程创建的最佳实践和常见错误排查指南。","parent_id":"1b37474b-db6e-453e-9726-e643ca44639c","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/Fiber.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberGroup.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:03.87787+08:00","gmt_modified":"2025-09-19T19:49:00.095909+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIvCQ3a6woSOfv/ogruAZUomZIcHSm/2lcH3/xQNaZ1yEmzWm5HjX9ev8LtY0KmI3HTItbAdyJWrMgPn0ht7ZyrOLEelk++FOgNbRL0xHGYacGEuVWzJgOsj7IKXUXsu/QbuJWPdeEj0Mp1DtiEKEDyeADljkqTT9dEmgGIDwYAkA0y2P7bga4zdcbGIgZjO+hyFq73TYaV8SDw16MvN1lSeSzI8r2UKPdXEsUccP6BL6ane8ggpCGFX3WUNc+BPB1E+BoJxYSGRt5ngGTfHTX5mT3U9466IuX8uIWOll4NRvtzGyYiMjdMweqCtgcwH9cqupUcxcuLICGHkON7DJMj334THLt/lhArbo4NcVTfJi61c2sfN2HFAO19xrvyEoYVVbC7VcU9vwSz4jXQw5ElnjBb2ZgR0AMMC6Ozg3xWOY+1fLnFwIBwN6WVNs/vpqtDHjNEtUDZAm6UbPOcV16iBz3GXGTO0UW7KprWc2dLViV6k+Siuy1CFRYwuWkOxlb1WbyhFS54IhTKf2m7L2LK7oM2N8NLPCG1VTjV/t/qw4M1v/o55Qc5bkmV7Es/9JpY31DMC+PY6A4UeepVXW2LyWJzdqz/OnLn27tMm9kribyANCsvoAhnq5SEeVoCDyYf3RWSI/qnxy7WhUkYR6zv6Rrx3vBZ6JvPdteubk9ADZ1vyNN2SEkQXG7qqDO2N9/Kr8CUaek31EsTo6q0hyKgQW+IBG2kihvp8+UAI0PxWcawVSksJScEiWd1Chsjv6jtziRQOujpc2FlKlY2nm2I6yJsrFZpSDTjNsLbzWhVK4/KFHHsVFKmulZZgpiHIIky3RN1W0/aBH7umktBbz4836/5AdSwe8kldacmASXyBKw2t7jvylaMLB6qTrP6Uc1aO9Q3G3fVO2sBlL+za7ShQcLG8Koleo5oRjujiWiHVSWoPsZj+sjWqb/8Iwn/gfNdzV4YXaLsfgDv1B4PzKNjd1kNxS+6cFPKvAqzhrHZbJsxcWBcuVjKGlNboLx7tUEgsQewxNw3FUxG46o2nqAisUfWMPv1btnVsS6+4lv17UjTynpcrSQNOBUFdNCxSB8VAhtE3DBsG5qlM5rHKi5XtWy8Az5ZqI4ql5TMPVwMSNfoGvVDfo/hU8bWE5t2HQNEMcE93b3x/pn2MYkYFZrY4pB+2Nanui6OdlgOqpc0C3gJvAFd/T3FR7UjDhCNXhCA==","layer_level":1},{"id":"97584256-193b-498c-b007-e85ea9efc554","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"基础操作","description":"basic-operations","prompt":"创建分布式KV存储基础操作的详细文档。全面介绍DtKV提供的PUT、GET、REMOVE、批量操作和目录管理等核心API。解释每个操作的使用场景、参数含义、返回值以及线程安全特性。通过代码示例展示如何在客户端执行这些操作，包括键的层级结构管理和空值处理。重点说明KvImpl类中get、put、remove、batchPut、batchRemove和list方法的实现机制和性能特征，以及StampedLock在读写操作中的应用。","parent_id":"dd3205e3-74da-4d38-a52d-e177f4ce68b6","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:08.765619+08:00","gmt_modified":"2025-09-19T19:49:33.409995+08:00","raw_data":"WikiEncrypted:OVW48CGFh2rQaIE/lBBJpOyYqw7SgjhTpkqT58ia5dK8TRsW3ViEQHoBajdwTCwSXHojb+3ZewxY6jzRt366Usys6ONrSX9c7u/28B4O43PrK7EO76dhd0jMrH+kgA08Ujlze/axjVnYyTk+P/iA5BAJBBsQsVkTmNu63HsJPlkhbPreTNt38bTGFCSoqaSCWatCCdElqSQJs+8KCbbUbf5LOUM/wRVX+kBLBjxXG7u9GS3iwuDepNV6USK/029160eoHgJkJ+eG86CVImtVNopcDhwxUJ38Ekl+n1R/MEe5+mWYQFzpyVSFOnaUjfnntSFEUCp+c6B39e+4/o8k+QapTxzcLsm2yfwJktXG8dleaKE4H/r6BQ/PhZpp1AvpI/6cxPNM6BcF3lJPe60VEbR92INu8d2uLybjI58jazGX4Q23KSNeu/0jYG+oSRLDNQZSkUAMRDwE6+ImkpHBvQzUZbEkZ+dFAm4RkCPiwzk6YW8s5cyj2ZCQEkPU9ERV4WTEDP0QSPUphuuoD9J5ZtgTKxXFvGVDihrtZdNv1C0buXp1HPDzVchf5pp1MSd5b3NrG1azBXHea5mFtHvVxywS0gJXLnJImkuQ8E75sg3gxPDkvVe23aDx/NDhEYP4CM60Nc9CvB2WETpFaQazrg/XTLWkJBQClgBy/mLXarRBI1Ygm2v7IFNqH8xHqQIrRDanEzKY5GXVVZIujTetSTzOAFUlAGbWz5k1fU3hkT8mllrHRkTdkK/dxetEcsPf/LxF2DiltFXixaCwhLsF4UaRHdgigJpShdfq9ySYhvtB1+5bsmQ9X8+xXxAA2ImA/TfGg+sQzpN41q0mnJs9g0eoh3SnaZY9uKqSBZKbH7SONAwksyRGGUQZbSSJZGXUpntilcZ0gQbyU1MU6Chzx+9WbQsEanxlLMZufPFqspEVCJhMpmFSpULefTuCKNJZhkUahGJd+1l7VNa/ampUeo9Nf7KTqmJF2V/4e2uy9WpZ/kfX+y+ysXDUQM6xrC2V7ZVtIcX2J//mD05QBkGlGq0m4mPKtjOAPI8sqdvvBoE=","layer_level":1},{"id":"0868e734-f35a-42dd-baa3-e435281ec52e","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"客户端实现","description":"network-client","prompt":"创建NioClient的详细技术文档。深入解释客户端连接管理机制，包括连接建立、断线重连、心跳维持和超时处理。描述NioClientConfig配置项的作用及其对性能的影响。说明DtChannel如何封装网络通信通道，支持请求-响应模式和异步回调（RpcCallback）。结合代码示例展示如何发起RPC调用、处理响应和异常。解释客户端如何与Fiber协程系统集成以实现非阻塞调用。涵盖常见问题如连接泄漏、背压控制和流控异常（FlowControlException）的解决方案。","parent_id":"9a176743-6e3c-46d0-a3df-d292836b2d5f","order":0,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/net/NioClient.java,client/src/main/java/com/github/dtprj/dongting/net/NioClientConfig.java,client/src/main/java/com/github/dtprj/dongting/net/DtChannel.java,client/src/main/java/com/github/dtprj/dongting/net/Peer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:23.413848+08:00","gmt_modified":"2025-09-19T19:50:19.686163+08:00","raw_data":"WikiEncrypted:y/pCTkp4paaDLjkncdknThoVBBViXQBio+TWjMpYbfmCIyAc4GZHGNZATqNp8QM5/DcdTS9jTKLRvfbyxeJMBPza7LxTwpMM6Ls+ZTYJVqFLiAhIs36idm33zAa/9m7gg7ccwYPGRAC2mP4iIpWetbBDkPHpjgCGd7763L8SA4wmfbws99fcr3YeXX0PWFYa1GZu10Qp74FTkoidaxUaFwyFMd/YTHFiQgt2unA7Yo9Sf5g+cSuuOJLKtKufIiN+bo0t4EYM7tiRaLh5pSCvJ+inD+XJ1qZX8hsT7+2rR5ssyZ/KsQbae0+pWRSJv/Ab3RN9axtNV1Ek2YkvqaXDiJXPu6BZLrL7lPtKmYVqNYG1NQBos5Mm3k+J+KYqnk7I+t646ZJz4CwyP6mM0A7oMBMG3Ba2U3C6nJa9KIsZV030SaCpcnXP5POvT+s+uf3X3rKJT9DvWQdis6v8ym9FF37mwA7dmvdbL76oFDAVCuik8hWzR3bSwALTBu4qWL7c14juMZ+F/7DHQuwFBzABnolTNKGUnUlWxYSzBW2Ur9Z+K6fhCr3zcCB4eHyzsUo6MioJVEFtv/PTYQUHekEes5PSxVnz4nsJ0Ktt7BXigepc4QXib2w0xWVZY3W4679VtG4Jsha5Xh6S6PthXIC69zWshD5RsdM3RVzH6ZfmTEMM5EOffmotzBPq/lvOFUUD/7BB6xazGGWPIwqeuGdlJuk8s0wlIUQH0oBf/mfDQYkXFy2Ogim8IkMN/sPuqJ6bswEdEi3yymLiXQZGJZt+iTlal9APyx7hFrQoq2hNeUc4bOBiA3Y6ZdeR1DK4f01Vhx0MJ5v6GStabYERaNqq5Y8NeEglEC/4pupHDvYINO7cGTgoY1wFPxk09LB7bJUB94fMsFXROCOHCT+gOa7jsQULAvqszZOca3QDlX+CVDUnISAo5GNJjtBJi+gCTKOfFLKNBQGonx32m+hrseLr8BDxTOwhTkogWlG+kBXo0rbndltaFtVVjjK7Vq78/OB7yxA3iCuaR2ZynGZ2MEWN5mio5T5bvVBDp+3iGtnmxeQ5zF7Fp8Cw1HY3kP9oOap2RhX1hVZPDUXVazSCCnf8FyBjglP4mIEQxTw8JrTasqvEebqXNlr76aoyVuD5YRB+TUzhG6vQi33ohecWBeazG4reEte8gMoKPw1gGeB/IB3FW89KPAwEp00WyCooJ+wtZ793Gu96jeWwVsPXDed93Y5gyDbn+4XgxRw5zKeTsoTWJ03pOfrNGbgshDoYrt0CKb+XutIVyk53AiYfx7mc1itMtnFhZ/dqU0H6zyn/Jfxjwfjpj5+H+SFtJYVs5UihTI6Ve5tw4C3OZycaRGZXc7bJ2M7LePJE3xHRu1wnwUsy2OZZ9w8B/MXKoiUNGvxXDEakqPVx5x4BK+vdp3qkjQ==","layer_level":1},{"id":"05b22e16-2092-470a-90e7-3c6e833b7cf4","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"内存管理与对象池","description":"memory-management","prompt":"创建关于内存管理与对象池的详细文档。重点阐述ByteBufferPool接口的设计理念及其在减少GC压力和提升系统性能中的作用。介绍SimpleByteBufferPool、FixSizeBufferPool和TwoLevelPool三种实现机制，解释其适用场景与性能差异。说明RefBuffer如何通过引用计数实现安全的缓冲区共享。结合devlogs中的设计思考，分析对象池在高并发场景下的调优策略，包括初始容量、最大容量、线程局部缓存等配置建议。提供实际代码示例展示如何正确获取、使用和释放缓冲区，避免内存泄漏。","parent_id":"c3a3445b-9a96-4deb-b04d-e6dfc0c51c86","order":0,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/buf/ByteBufferPool.java,client/src/main/java/com/github/dtprj/dongting/buf/SimpleByteBufferPool.java,client/src/main/java/com/github/dtprj/dongting/buf/FixSizeBufferPool.java,client/src/main/java/com/github/dtprj/dongting/buf/TwoLevelPool.java,client/src/main/java/com/github/dtprj/dongting/buf/RefBuffer.java,devlogs/2023_07_28_dongting的对象池.txt","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:26.420575+08:00","gmt_modified":"2025-09-19T19:50:57.089268+08:00","raw_data":"WikiEncrypted:cK4SBLsR9PqiZ6AM5RV/RFrBjWAaIO1JrTNW+XvV6/+chZECYxLXwwkI1zEqzZP4eFS5Etg86Y5OwEzAB4Np7isO3k+rFG3ErU+OZW+Qn0ZUJrwZu19KVKOsM/EsHMmqDjGdHYmAYm1kBpQJZ8+WY5T+NecD/RCUPWwGIYeLLAuwZd5/1qDWmJQyN6iEISKFIQwBljYEpJjmWb+jL7QJWYgkguEW0EhLEWKIda/jiMLOyuZeSXL05oan3OnJoSYWz/9TwTzHa3Hcq8fi7S02Iz0mrkkvHk5g2XFNffCuBZGT6hRo9iwBYjXK+hIr+6oDD+gkuBqCkfBjXA2D2l/4LSa+oY+6GMmp6dZnKRGCLj3DJO3McjRn2j8p/EPApN2rTXnbBhzlepqvXXhVkFrD1XQ015XvV+rJMLVgXnne50GEKNQ791J9lIR4bJ6mkuaMaDy7rVhedxMbZy8k6W9UFU7v1ET1hLsiIRKmsH7iAk2xslLcfRiOo7OtXlEzM9B2/No54rC9QS77nGHGHDPTSop+/6xegjFy+6C5T/zOqjd3NhN+KskahzX9vTe3TzbwFnPmxiRbWiYwU59Q+yTsUkrZ9VtnYuVd3OMXeDEjD9DDr+/9AYO03ahhRAPvHWS2vw7vc1wzMnWIiW7GaSNKCpN5zenJ3Ol6f2ldfeomWghPf/sTma02jp95VIZLhnPJZol/0qh6GCvvPfkkfzlegJc7dUOSeXbZ67jPlQd6xlqkpbmD34PpqBxKnNO802+MswWaGzZk91Hvt0e96E3Jc358s2ANXSZrJT8uqCdN6iLKntYUNCL9ZrHzxAA+Ic7U1nvqIhdkFT5HPaIOA1EHOUZKe4Eir/fLq/eEVcMWCLjxFQQpXdoBiaCXMonkOoQ02blxckqiequuCXpT3ZAolj/na+LdaDzfSjmBO3rMUtbYiZ4/RdJgOOsAw10BGW6Nq0Kw7kJdrniaWpjfMpt+wpcgQPl4Zl6CZpDJkBJOFSS+mnvv8wLq2oFTZBIXDfEkR9AILqmig9006AZNybzsGTbyYKYQg2ScQ2+aimU5O4aol3SQwQ/+IT95Xc1vJYue3u9pSEnEJrHBZ0yliuvYUgGeKSCO+YGxd2aIw836QkHcyuvjRUR5Z7vVwditvk6Zc0kOLM2pPIn4pnxRyWwAMfgWOMo5lJRMtEcX1k1VovBZ1ucInpeKnBAe9E/KbaNnguaJFGsoAnHOUIuE+R7sGSGav7MJLBYqpkA78Vui0lOW68vhMycB8Mh97SEGV/N7n/+tUiT1hWAwTUSkFdiyLjfytdYO1yymmP4Sb8rikqM4eaij7ADK34h1CdY1NMnLc8zcIL/hrFb1Aw+IH2XTrlb/pSA6A51Y9UZkEIezSQDbFvhkhXueQOl/Z6PoU0GDaVQQeDogKYCA8ix4H/q+Tc8ro6F6ylMZc0WksnSYN0n+P8TurOLD9mu5PSqlgkqj8wum2UZJ1JTadPRUtNhkWsWhIBjBJbuc7qwbckxzWz8vGkFk+Ci2bOqzxnwR1aRaEoORUXlXfecK/KYo+UIj2G6Cdzol7keCN/uf0YS0JNdkKcDIk35/y3l8ySw+6+gJyjorOufhwxe43EwxEixr/mkg1lDMevUV6s7peocGzojNL+ju+8UWfa82pjZSZWISwiKygx3dNxH5jEJoBgvW9yO7ihzCqYHfQ+dWW1RTPCw=","layer_level":1},{"id":"d6f9234e-73ec-426c-b35c-a7ece0e483d6","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"自定义状态机","description":"custom-state-machine","prompt":"编写详细的自定义状态机实现指南。解释StateMachine接口中exec、installSnapshot、takeSnapshot三个核心方法的作用与调用时机，说明其在RAFT一致性协议中的角色。提供一个完整的自定义状态机实现示例，展示如何处理业务逻辑输入、持久化状态变更以及生成快照。说明setRaftGroup方法的用途及如何获取RaftGroup上下文信息。结合Fiber协程模型，阐述exec方法中异步操作的正确处理方式。指出常见实现错误，如阻塞操作、状态不一致等问题，并提供性能优化建议。文档需包含接口契约、线程模型约束、异常处理机制等内容。","parent_id":"1c49d439-8342-4415-b0f0-a6fd50fd63d6","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/sm/StateMachine.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:43.877975+08:00","gmt_modified":"2025-09-19T19:51:53.145947+08:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokV2ou/MdJL2HX6X2IW1otVJMaHSpWsWtJPoFjhV6blG9LV652fgX93+T0L3KLZcZNrp0ofk0GD7TMh4y62CHx9zFkAQw578rdiGyXYgzFWgPN/j4PCoETy5DFmnW4LboaoMt7NxcH232ldhUJihpEl4zBprhpl/DCB4Tr51+7pGiP0161XsQoQPy2ZAbGqSw4YQoDkmh3IHUWOOQH2fGrQVf5pcUvqmRhgmlGz5qt93h0t9L67Ng1D3K1GqrsfTFEiWnapRkYanDAJj18Pc/E72p9F7MNZviYZ/pCeEYVEvVNHZrEUSU2wJzQTw8x+Pe1Y939b4pCGPWhR+wpf9SRf72MSDxjTeqIYfeFVJPS1C53B3RzL2dXER6161oebjB+QmSAgCZt6eybvP+wrsxCTbqny4L8j4aRAkkCF0aKkCEkWFaI+2X7ZZ5pmYjpp83jsDDyzDWTkGyrfUoEFsga5SoXXk596X/ElVuIdS0V05o7mhilHNZch63ATuIwuG1dJkM440bjvluXwGqLfISMsJVPTNcbF1441XNLFZhhkMXd0fpzufW0LAB2Nx16F4f/U38bXsXL2h4NYI/IYX9h0xpvLTKbsNMEkJzX3wC+MTTIXSbQ8DxFxf4WUVZtuSXyzKuOif4wrc3LGSR4rDabZhe6YmMkR/EDPHP6TgOd4eltefhxSfvXyg5w6AOtT7M4Gi5TN+tYimzb+So2ToyRZybg8NwinmCvCBkAfZi1II8Zhs0jCX5kXQdjQYr+ySK8G8GCNeAfDM9fqjhBBeEVHA494/G47pp8sNoKxb9SvlGigu7Hm5veYmEfFIgboHE1TqOss4a+vfyDEakfHHHXgt8xGIENNIjIvXKqkdUyrOC50nDZAVZ+jvX950FQ+jGH0Nk9Vg7012fzMDmowq1l+4BtMBfpECNYcxzV2C4yfIWV9EXjQqRSjZcmKRMYAVbaShxT9UiHvG15VcGbKqZueviUxq6GOAFKn8mN9lbaQ505hBNpQZdHSzuZvYHpPHq/BaPHC5sPEgaMrfikrX0pY27GmAmtySF/8w3hBozQs8zttU+CdaML/ZwqyVB2VwE5N/GLOP2OCTdltlPH9gtZOyPiYDiZSHvRCm4ieGs7U5lqdZPzO2aa32ubis2cCA6XGatYqU+hSC3hYNYnJAiRJtKBhWb+s0ju6DRUME/SRsbcSW5HQ27hH9Y1EqI4jm4eOXOrMBMAn50Tob5CQWPuj1OFDp76PS5sXCHzvKIdxKA","layer_level":1},{"id":"88c6bb3a-ce58-4d23-a509-4d66fc9d3867","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"快照机制","description":"snapshot-mechanism","prompt":"详细解释dongting中快照（Snapshot）机制的工作原理。说明SnapshotManager接口的init、recover、saveSnapshot等核心方法的作用与调用时机。描述快照的触发条件（如日志数量或时间阈值）、快照的生成流程（状态机协同）、以及快照安装过程（beginInstall/finishInstall）对日志存储的影响。结合RaftLog接口的truncateTail、markTruncateByIndex等方法，阐述快照如何实现日志压缩，减少回放时间。提供实际代码示例，展示如何通过FiberFuture异步保存快照，并说明其在系统重启恢复中的关键作用。解释快照与状态机（StateMachine）的交互关系，以及如何保证快照数据的一致性。","parent_id":"06ceb7fe-4daa-40df-bcdd-c4895064c77e","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/sm/SnapshotManager.java,server/src/main/java/com/github/dtprj/dongting/raft/store/RaftLog.java,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:44.631121+08:00","gmt_modified":"2025-09-19T19:52:16.94037+08:00","raw_data":"WikiEncrypted:AgpGzlyV0Enu9Elswtwm4CY88L0TMOZalp9cnRAGcuQRApeIxTg62AelL4Pqt5ulk9dWvEbcYux8i/RocyxJTpy5ydg2ETqtsqx5lmb/SuJM6cL1LGccDCXGLcdl08H30P0eceT7N2GewWHAXUPaXf1S+Wzc77tcrOGEiTsEOrEc3xbZ/DtDgkTZ5QdvBZK0RrPi6/j4pp7WJT4+LNT3avcuMoPaf69L16lu6KWly4/zibspK6YXvyGRxTT06KHatgm5N0p+WU4sc61hVvhONXWwEpHM/EjflwxTqoROZl083P3/gTwWKi5ZX5iWIV/ipZiiGs76W4Pns7/og4MHqzgVNBhy4fOj0wTyuZW9k24va/qRjFOidS9U8hCuOxhImu0Izzmwkj2Xj17CRlJkKAvRZF6qjoSD9LXfbOTL6sI0G+HuCv9xzA08XSHjMmtQuBJlrYGMuHO9zhkpQcnmjVYhUnhoD2784M9ak86Xhf2BAUhWslbWx5cngxXxdMAoIa4MIykiCK0PbDapba/Aqx6HQlNKK2hszdYfU8GunLCu3FjFykuRM0ZvQE3sCV3Dx+4nauRMoK/jM+Pp1Ut+FNeTC9lz2ggNJZTM9Gd3BJxojfXMRq3FMgtDclEp4KnBKBHCS38pjFUYq5ELRRFSm5TGovDhxJN7SiY3Ov5XXXll+4xNBIfizMzt3HEoHXFlejoxQakewqp+uIXVHNByL22LbF5Gzg2Wrtul5D76Oiag9TKC9s4jNj+kWOcknNX0bbRG0btdkv2YeArkO/qexJCHux/1gsxQgXqYC0uz1MGYJPd82XG6O8MHzKSF/0xFHfj4DVMpK7kmhy+LajQey2v4bWBe81Gu1d+qGOOi5SuyLN2+cBt1bfM+Vt/LFJCQvU+iD1eK+iqpZv3KysNxdHuVeZb9VnXDvye3/w82v16/K5VheBNq+tUImhmg0wt17imbRQZ2kann2jyFKggVE8Dam/usDV4Mjjl1RuCS2PUbNvsREaRSrYA/G79gUzjlrTideWhtRnNUKgY7i7OE4YlrHQ8DADJUcGegMjpxkG7Lj5zT2X8RUvdPhO5tv6S6O1WbbB1vHZQbbh4n3/KZhY4r8gbnm0uZUmyVdYQgbf5T5omMPXiNV1z+ojfk5RN/FWwB9zSbxEj8VpI6dW9MUw4rrvzzIRoOGBYbrPN4oKKpjRF/5DwYLO6yHVxN9JHkCb+CKOA/zDV/VnjQ5Gxy8jCe2I8pnlcG2BgNBblcSSFU47yj2cRKEFMz1G85K2HCby3xoyJ+7bh5KujjAOo3puC7HNSM/anICFnP+KPaXFscKjA7LsgzAAfeJvLiFei9x1mzKkVhliThs0ULrDLhZ4tB3A7NiTtn/ZprKNrHpGR3hM3GM9ZVtu/R7+5NY4rR9XXw4DoYAyNOlrgTTTxIj197lLJTFDgPmxGPRWi1M+ZKtd/2SPjgw0d6DYGBqM7p6QiygJLQlheNqA+c4FDMAxXI06Md72MU2IXgXffXyb/RnrkgZaAT4mVOdvU87cfnI+wfDuOQHxDczV8QGBa1Fknod69ib2bcSnBEkq3rKqAqasXZXiDbRec8RX1bsUK4+W/G/e8nRxcLm4z/EpnA0OnUhw0ouVaGQtpAvNUHX5GqI0zQI5By0PyK1usJ+7NpklPRNRSCzBwQOXfI7R8J2Hef3Ss/JtNfkfqAV2+fQpA=","layer_level":1},{"id":"baec0304-40bd-4d37-9940-07b015bbd204","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"部署指南","description":"deployment-guidelines","prompt":"创建详细的部署指南文档。基于devlogs中关于项目定位和设计原则的讨论，提供生产环境下的集群部署建议，包括推荐的节点数量（如3、5、7节点）、网络拓扑结构（如跨机房部署）、硬件资源配置（CPU、内存、磁盘类型）。说明单机多RAFT组与多机单组的适用场景。结合DemoServer1的配置示例，展示典型部署模式。涵盖高可用性设计、故障域隔离策略以及启动顺序和健康检查机制。","parent_id":"91d17db4-e20d-4dc5-b6de-47fc7ef0e1fe","order":0,"progress_status":"completed","dependent_files":"devlogs/2023_07_27_dongting的定位和原则.txt,demos/cluster/DemoServer1.java,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServerConfig.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:02.033073+08:00","gmt_modified":"2025-09-19T19:52:59.7682+08:00","raw_data":"WikiEncrypted:0IKfLNOWe9mZfG1jVts3w9EtUzg+Wh+vjZalwXpm0LvACBzTbX9SIWupG7U+YD0AA8J9IuCGI3r/Vqi6iHNVpeZjCn0Vm8fF9skljNDlxO4JCIP/+lXXx31wpA2uqTbEReekwlgYwH2ZkSjZBDl4DJ+6AE3wrcDsrkMe0ePgYblRH/eFTe97xFm9/eldy4SllJbOYuygsErW7NWixr7gxiez0pKCE+rSW0VYQERsgqUIr/Bq3i+ldMOTGlQf/4xeivNFn9w7vOFEhonqUqgJsIG27/O00QEwx1ei+nWI4089Xnjg5eJcFt5b25a75SmKr0sryLx0Qd9OztLXRU7/aj7/PMWed6kIRBnpkB0qJd/2UfyNRyybNsvWLCHUCfo8y5vsdRNcn27QEfiD+Xj/wkg+vizS3mO2JiwfwaLbwa4KFWBdppHlD123cdqMuIqVXJnfF4BnW5UqP5yV5EEGslO6peAhn4MdJVjpVuM7iEwTpsw7/TnaZHwF27UA+CqrSEqiHo+5ZqjuqFG9KKu3/OOlJUQFhb9jRN50h4yv0RDknW0+ZvOSviTcEqZD6lzyecEctKVjWyrfhBG9jaDhgCY+9QJ+jw5rum1A945P8wponLWz7tmFUQuDmDpD8JRtshdFkG/MvyWSXx2XOZMZ8FiLL2bYrUonO7z7mNkOYxMWsjSUnskejRgsFpgHpct/7VzTmXDq5AP2OSqx37PqVQp597jkHlNX/nHKLzQUpA+UARRZTvup0z89T5qo+iYd0jGNcV1K2dlXwZHOiNTVS2SM7cDYnF8rJmjrcVTcfugUR/55Vw3e0ztBZYPAypqODJN2dCqYl5aEIBWBHlptEUTQWLJCpfD7bFsKL3r4IEDrszhXpFLJUfH2jiQ/updX2IDjOj7cNqQ8flwKMlJMD8I9G+OMg3IIYc+9/tlejZB0NPuKMcaykbFs6/BSmfT5c61TRZPRiRxr+YOEq13CaoP33Pvg4601UbHQ5Teo5QoH5U6Ce7KYz0ClqyPy0iG53NJkVUvMUqvLrS7Jyscv80LVYzyoguGyxIaV/CkJrswR/XskVXM/ylb3yDc/r45PFnanB0fMZcf34R5eaqXcQCzA8zY4QBwiqhNzZpmpC04CSQa7QjL18tP+z4cEbyuHkLV1zbsWgk74zQVTsyEFBRAW9bjQqekcW8OKoBv5cmdbOGNG32jQS6lIuAK/Lzk+","layer_level":1},{"id":"831c1f00-59a8-45a7-aa56-cd3542c72bec","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"RaftServer API","description":"api-reference-raft-server","prompt":"创建RaftServer类的详细API文档。重点描述其作为RAFT集群核心管理组件的角色，包括构造函数参数（RaftServerConfig、RaftGroupConfig、RaftFactory）的含义与配置方式。详细说明doStart()和doStop()生命周期方法的执行流程与线程安全性。解释addGroup、removeGroup、addNode、removeNode等管理接口的幂等性特征及异步CompletableFuture返回值的处理方式。提供getAllMemberReadyFuture和getAllGroupReadyFuture等状态同步机制的使用示例。结合源码说明内部NioServer/NioClient的双重网络通道设计（replicate与service端口）及其在集群通信中的作用。","parent_id":"344457c9-a5dc-4d36-a481-caff6dbe3ee5","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:09.57047+08:00","gmt_modified":"2025-09-19T19:53:22.761712+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg8v6ra+L1O8IZRHN1BNmK+vROttB07+W7bsPP/mowknE0fsK12HgXGRYgJ0s8Xql5WSrrMSm1QjhdGqWYeoRuGqmP5KXxnLmXO9kUhyzfpyunD3jxQ62pRR3L7MjLTrPf9VqOgecF6gB3LDINiRY/Q1bfVGLcs2eanMS8Y9a9VX7Fq8A9DiB+AyqXldElZwiEJft318sYgE1z3Ps1bH5HAoPS8/bytGHC5/q8XLqkWyvK1h9i1P4MFZ29m9/QmYn1CXuzK02ylrFoyhUEX0eKw6cDuCOXYvRtvsgtH3hhSU4iSzVsUa5rOM5NQdOexkQJC4Yei4jaDhY4S58r+htGkH86xOiQJqaWuc80wwflRT/iOKwzPxmS1X7VSj6rX6xQUJdYgltKaOBe4/5NONw/30wM33ZHcHzT0cwG2HQgx8g3vGPz7kW1wx3NcbwOIl6DCzu9NQN+EZ2hZol2BYqVP3KDq/tf3YF27UiIwODFGsz1WLAokQoz8ftzvur3RlL3g1TJV2iQ6u1H0CZjBrAeLwO6BwTrVDFvD/gXYZe67rIpy0xJRYTEKch78sjxnpMhouu6X+QmkXQNCvSZEr9tJPThMufVKvdgaOmcfsYVTL4BF98ei8HUUhJnGjTp2wG+Ysbe2mGavdwDjvmYn0TPVElBCeCSzjV+qEAkr3NjvDs8W7UWc9bwLK4e3YBnSqWnjl+Yn4t+DAikf9z20pcYqs9zw5h/g7srS+ta10cbnda6YUNOvE9xhhXSK+YZVt35Nj+9c1H3WyUnFuoKTcj6LaXuztafm5/FhSaIBROfHzz8iIJuFkXlAYS5tvnYSXfosHAhhhM3hZP0D8lZjdIgjjb2FspK7t5a5GPY7wV5ZELHOTVMVxYgSAwC/gDSAa9qYX10awz95xTeiAA5uzgXp0lktfz8VnyoGsMBjHzhXX6g8nkfQTlrNXufLRg0NpUutwzse6TVZEAHitUNldqYgHKn6oVz0xVsdK7svOZiEz6GMqae+u6Qu7HeFoGQtIuW8a2wEBASxxOGyAJQPAe0ZNh6KRakwN/sFtSeqCCvbE8lbMHLiUIDsmcypeDcOUGuPYh6O1roDID3GfO3j3bYocdapGqWq92J3eNtDzdK26cPkeOvn+pcuUn9qFwCs+9ZjtK3gQyb7nBtNQjRLIqZzrGN5b9CJSWUzwthqSWilBZYJY25rURnpo9h0VTAqruP8guW6BVlBgRH5sjY4SpVEaexRSUOY87nJWnZu4HrKC9","layer_level":1},{"id":"9cd14e28-86e1-4d62-a281-9fe698c9624d","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"核心调度器","description":"dispatcher-core","prompt":"创建Dispatcher核心调度器的详细文档。深入解析Dispatcher类作为Fiber协程系统核心调度组件的设计与实现，重点阐述其单线程事件循环模型的工作机制。详细说明Dispatcher的初始化过程，包括线程创建、内存池配置和性能回调机制。文档化readyGroups队列如何管理就绪的FiberGroup，以及shareQueue如何实现跨线程任务提交。解释调度周期（round）的概念及其在信号计数（signalCountInEachRound）中的协同作用。提供perfCallback性能监控接口的使用方法和最佳实践，包括FIBER_D_WORK和FIBER_D_POLL等性能指标的含义。","parent_id":"26e5eba7-e2ae-48e6-9a21-9fc2c11eab37","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/Dispatcher.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:28.549654+08:00","gmt_modified":"2025-09-19T20:19:13.485008+08:00","raw_data":"WikiEncrypted:XbYpN6Bz1a9bxAUgfaWb+nC+AYilBwAohcuNaj0YUtmigWnqKm0uJqz30oSK54UlUV4sksmfoYl8UmXoMzVKnsHqMDIWNkx5E8GggJT13JC2p17XzolSL8A7UNI8u0pFNiGEZYzOArT6fQ+HE7nDqFHb1OauYj2u3MD4NrDLDMHq91U2YEq+X5pYuDKGMH2olrtS+oqZFuZtsO9bo6i5E/H+KYmnoJ+hJvvKmmlphMeQHAMH3pxjXiV5VDGZkGzP9nNaiQCEN5v6o4OzeVnj/ahVMIYbZPbS1D9WbBfzRC/xzoOUoZk87zUUVS5T3nT3CZ202GfLFupKW/nCrE7CgZtGfvytKnfCnTKn6t9FdR21pJa2zsWVDYomaIn7QpK8MdlFWLmv3GGO22Y+nUXSu80+H+8sj3IJeSkG3mlzvCZeKfRcgMU6L08/Mlxk7tsXl7c/fDx4Zd1Q68ofxNEAGOCZP09lnjUgrxM7wQcv2Hwi2UPHRHcOGlM5JwcyOzzRQLbhidAnpEdKcd9oxKI60HZyKr7VOmMhkOwF5hfOBZriNJKl5o1HObAMRJdf6m907tTJEQcVEBnzMiUUY+ZF7i35ffQmP4MSHGv3QVUPXQwP2w9Kk6jBDv/2hjL7mr9SAX9+GKt/xYxooI/SA+b4pGBJB58sw1KXsXts6YYqGzf1UOit3v/UThg9/41d66lD0/8pwYUQSUA+VHWdAihCvH8xs14w4CtbhtYuv8PY81ZJr3CiLmJuApWR7suKfN/y9qj3j2DIIY4yMkOBycsHOW7c4TomYF5ui3+8t0xgMGvUDwRgfp8ITlMSxZ1AST1bq3sadkqPWaXPlh0SWQPBFegLnKefaJw5Vuo7qjBdgIwcKj9x+msU7NfnERfuuwjCeFW6WRlusXuND62p4JF7CJclfPGXchTThd0w/K+DuQp7d+Wj+vP4b2fcNsPSA7b3LtNsuKI2czyN/mh6BwiadT2MEkvESSXeLrcTolOJfr15lB2eH9YkeBd9h/tkMJjZgWPt/rMuaudiCQABA/hUVm5/jGZZhPVtLZUrjSuWsoxYqx0kVVJFIWPntyMBVXAjdQAP0LtlWHcISQFIm5hvy/3I33QPykB5jyyphxGvJx/f6+yIUlwjHf44JBKZTJDdoz8Vhp4wkMF0n7U3KaxrG6PNxzLEopIItmTP9kYsJOoQSnaS8EHCNwB8gHM4ZUazSr2xicg5oICmQrq5jg5bcIOkU6EaeXyqVIFtxz6wWiU=","layer_level":2},{"id":"320d2300-e2b8-4716-ac22-c0eac56f9064","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"单机模式示例","description":"examples-standalone","prompt":"创建关于单机模式演示的详细文档。解释该示例的用途：展示如何在单节点环境下启动Raft服务器并执行基本的KV操作。说明StandaloneDemoServer和StandaloneDemoClient的代码结构，包括服务器初始化、客户端连接、PUT/GET请求发送等关键步骤。提供运行该示例的具体命令和预期输出日志。通过此示例帮助初学者理解系统的基本工作流程和API调用方式。","parent_id":"7a2e7732-d457-4418-a948-36e0a2983324","order":0,"progress_status":"completed","dependent_files":"demos/standalone/StandaloneDemoServer.java,demos/standalone/StandaloneDemoClient.java,demos/standalone/GroupId.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:31.031921+08:00","gmt_modified":"2025-09-19T19:54:01.943057+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbdORPvVs6nctK/XwEzKK0vCV2iHXS1CM9DedbZBWQOm8KOoLYqF1mACTsfyePttGjAnQFd86rqdBK7MrJ+DKdFM48ItnF8KzE3x1juxs2vFZkaAxXh4Jn2E99tb0rYpzTpvmsdw979zCZbvMqH0263b3poyFkIQGhujT9Lfi5Z5JmU2tALeDBXgJdD9a1NyxL5hhzQZziIl6FsFJQ82HIx62tZApP6hOY4iz9s//Az1O7IJo1uwg/CnR3S3KmKNPgBrLsIMdvM8talG4/FNA+ZAAnfl7TXy9LIHqlRPW/teibmCQPJTv1nf9nBjjl+OB7wfDL1Wvl/P/h/vC/EV81QqHioOIiEBQBqEpBAHDb4+oZxi3MoPmzskHxWZUaxqbp4in3JmmsunxSODJ+r9LiBm05wYvSz0n4B5/RT9u0zqxCgjXCPXyC+AhNbixUBypsq9ICR7FIIrmtXke+pYsCNitnRmGYk08iY5u4nWEyZgg2POIJGOknVf4Wt0oItKij0XKEFUNvfBiF4cOI2+biv9RmTYbXAjWcksa+WHBTWpU1EpKEYwcjyHdCVATBE6+pokFTLLSNA0Y0HxIMJWxQTARLEe+O30YA3udtLyWpr3lgRww+3Y0DnxZzHjIVwX780bObobbEXIhb74p8aFnNT0XBX4m9VucK4q4FK29iGAgweNTSuAhWVNlX5SP0sw/YUSLWdVMn+SCH3RwqfxsyrVZaLBb5v0LZb8nR9VC8rFGMGKUx3mbsn4DjlrFQX1FyOYfgq0h7kL4YNgCUvrmJdDsK/f2AZNEhrdYSewFd19SGijTnrCgfd+JrQmMHDeHizALcpvNPz/eHVChVBw5RYDnwnN2NCw6DU+KcJZemNP8x/q7NJTRVUyNX1dUs7fC9pQXcb+ZEwO/PMrUEU150vkh+dyajjM6QBvhAyJXNEnVzseaClo6fvGcOXFnuPEeK/yENz0aSB7NrdAqSeKNSMzUO7ppItvXxi7hKnymkZNDHH/8pqN74TO6uTUZFBKt2YKEVusPt4lG/0q/ataPELpY1zObdp3RypE2ObP8mfQIJwCvIofbDuuTx4AdmGft3Q==","layer_level":1},{"id":"54c2c9f8-ad46-4e17-8987-2de4699e2f62","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"Fiber锁","description":"fiber-lock","prompt":"创建FiberLock的详细技术文档。深入解析FiberLock作为可重入互斥锁的实现机制，包括其与FiberGroup的关联、持有者管理（owner）、重入计数（heldCount）等核心字段的设计原理。详细说明lock()、tryLock()、unlock()等关键方法的协程安全实现，特别是与Dispatcher调度器的交互过程。解释锁竞争时的等待队列管理机制，以及超时处理逻辑。提供在Fiber协程环境下正确使用锁的最佳实践，包括避免死锁的编程模式、锁粒度控制建议和性能优化技巧。结合代码示例展示如何在实际业务逻辑中安全地进行临界区保护。","parent_id":"71615119-fda6-4b59-a7e0-ebd58e14bef0","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/FiberLock.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:45.346384+08:00","gmt_modified":"2025-09-19T20:20:27.972197+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIlJCmZAN9NkV+yeNLimJATTuhv+Z3W0QlXeB48Qw+Qh1IMrbqLBso2TEuBllhiMqtvmjMyYR1gusT/5CMgC6EGZsOWtYTrQxQlt/vHg/KrNxVpYCP02jOPSTDD3vy5mRuFGTMfKMxcW4uWEo0vmHuDFZzwL/R+cX4/DlOT4T/4n0Ld/dd722WyqUm03i7CK281YnlP6cZqvqAaBwJfkLdQ7bUrzi6XEiTTrhGQ2bjnYIvwS+nkGEXRqRZzbJGPRqpIv2BFm34gibIGNIk1Zt2HQ9ihFAnEek8LeIWwXf64rTDSvHQUt3tfKcwAR9AMkxzfln3YpQF0KyLbfs29U4Qz+kW/JcBNj1qMbPufZskBiWCxtML+JAekjGe5oxPOM5oQE7DYyqV/qjN2zHmq19rP83nCpHlimbSjfXXd0qy8OgAo1WAe4efFsZAEXvErOP3G1pEtsD2QwMgqd7/K/w/T0ZV2eS6CyFnjpexaT9VIIH109INTpU3JUGorP8RGWfI/myjuATYzj7AXZWGedi+WD0ei3px/tNHrWMHcvSf9MQm9Ddfi9lSTHdRPKEWKxnkPSkiZRyya03zVJsHB9J6E7DQzS3EiYoq6BBrnhP4PQ8Wsxa1K4SQEZ0zDlEinP4N/w7yldQBaWBA6xQqfgFCimL9GlFaEpCMquDHOzvIyGCKvcxXiaGUy6v+v9Ep3yEBdA0xYgG40V/rXVXBvIWqNMA1kZIvYfzkxacOiTF1ipw8WjpdVDakE5iKlkj4InpPD48rSDkcVhekJ03mvttR1LGCeAE81E6dI0E+Af9PFWn7R32upf/STVKAaxOOiE5jbcTFTUwYliIhYIAMhsF+xqrdTlHuvkpbEEWG/UK4IXGOVVFPVqRxSU/3dw/Ec/SU3enmBWn4/In4SsnjqziLZW3fq8mXTI9KnJcUkdyY6Ea5IHHOtv/Tm+oXsw7kH/MKMHkdTxwSTOxQmhwZ0CrEMltH68dzWHDjL5MCRVNw93mj+ET91j3o+jK/uvBNi2OrwY5LA0TfSuGjwNcUotrBUyFUuGZ7aWn1WldHKonqGQuspvfd6+YUMptjFbKoJVLpxJ8MQXspFfgc7YRQwZAGfaK9f0WSCcp3lqdDgZqr4h6HL3oAlr2ByJ4nSU3vTqkXDL08N9u/Nzk+EadgRZ7TfdxwHtMNKHNugn9Br2Ml2Nn6vo9R7CKwJBi9+yZly8/tbSgQkapeWb6nBCJdu0k2o733Jr+yK/BdwveOda5GBjg","layer_level":2},{"id":"c385caac-8b5c-485f-98ea-02607e6fcc97","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"TTL初始化","description":"ttl-initialization","prompt":"详细说明TTL初始化机制的实现，重点描述initTtl方法在节点创建时如何为KV条目设置过期时间。解释TtlInfo对象的构建过程，包括raftIndex、key、操作者信息、创建时间和过期时间戳的设置逻辑。阐述addNodeTtlAndAddToQueue方法如何将新条目安全地添加到时间轮队列中，并处理索引冲突。通过代码示例展示在KvImpl执行PUT操作时触发TTL初始化的完整调用链。","parent_id":"8053381a-eb74-45a9-9c28-32af4c030767","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:52.985281+08:00","gmt_modified":"2025-09-19T20:20:13.339026+08:00","raw_data":"WikiEncrypted:kiCXhj2n3fvhMu8qSpdVJhNKmOZ03leo80yv+MNzirzSaQnDiCwU1vWmbFrkzEFSBwJZumLbPqnB/01wlrus8lk3NRN6DWNpuS8xHi/4hjKtTPCCzEMTS32qbjHE/vzXrQQVgvkaTmfhWsxzGjOOrJKU48CIgE2rk9xCvPyXrhV5vquYnZnd3TPqK/47T3RNhdrl+4bHobMPaceqjYjYziOGGoqDf2jl/L4JOZZsV6ZCxgvoKmWeHuNw54uHlHcJyHvAfk8gJsSLJ6hl3pQOuJ5EQUxsGDNU8goJQeuatxZpMULkMNGdGjRnf2doDjW85bT9mScAbPMLe5dszqL2pMhbE/mjPxyOf6TC2o+A4Wz62L+F7YUZQE3pM9zysrQzlBLqc4w/0IOH8xTL+dQWXTAJoC9fvpgpddIHT6Y3s0p1qSKlO2fcblWLnqKgY28lKYz26QVAYX701y1hlYc3D8JBaALCy3JtVANURjccsWVu/8VPiiED45pNrT3qLhJwP6rUqz6+/BDiuwfYsxKXw2LcDJ0YQF21qW4xaXL+v/vpw4+Jku4BXD2ATN8X4VnUTPYAJ2dUq8f1oJJ1+eBGUXuvBLb+CQ1cwpmxEmVSBYW+oQHyPUBu7RrbMHvzF6C65ACXQ5L2r+gP+6D0BphfIU8fDFUk4rPBwbOJKFtJo+TD+lzJpVgaUBX6L3OxGc5ZLpgLexjjHVcaTFWZU7t5Z16AfCfI2CKjpU2ZBalnrsIeAXUbLONlX6PchIPZ4ZdA8TRqW29+JBlgj5bKltKbpGeEpe5tTigojz9G35OROioMYkrJGJfQqQd4+qYKu9NIw48ElLQBkXqYuwiWjvn8GSQlZdb9IDqSm4cP01iPqnwmGlU2Hms20v4M3o0rpfXk4XT8gdvlCMYFNxHB73aKWdZcNdYbeDCTn0mzOcv+4l3LC6gYBSYG6aDk2sbGcqRpNyHBlDt0XwW6OEEocywDJB8gvIfYaUc0PNf/ry0qhGlXQbwEWc1fKHegS46JImyHUFqHHifOfOH7l6SU5vb55YnoycRUAGMX1X5PbBErpWAbWFEsw32Tm3kuKaSnIviOklUYPI3zAxzP7k/Nniz3/g==","layer_level":2},{"id":"443afa27-5687-47c8-8539-16a2ee750730","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"过期检测机制","description":"ttl-expiration-detection","prompt":"详细解析TtlManager中基于TreeSet的双队列过期检测机制，重点说明ttlQueue如何按expireNanos排序实现时间轮算法的变体。阐述execute方法中通过nanoTime比较判断键是否过期的核心逻辑，以及MAX_EXPIRE_BATCH批处理限制对系统性能的影响。结合代码示例说明新插入或更新的TTL条目如何触发任务调度(signal)。解释TtlInfo的compareTo方法如何通过expireNanos和ttlInfoIndex保证严格的排序一致性，防止因时间精度问题导致的排序错误。","parent_id":"4f24c983-2fbc-420b-a4c1-ee366efd7916","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:11.806206+08:00","gmt_modified":"2025-09-19T20:28:56.017809+08:00","raw_data":"WikiEncrypted:OhxIaTgOxq4pnMd67gKjbMcuzsziJezCg13nAWeq0rzaawGIOgkzdK+fMxGbwi3SQpaXQwVc/YWEfbrnyvy+FP5WG35neH+a5WTlaFjdbZBQ9misoIty+XSTqO1cdWA2FQ8SfXioFQoJaZGNn7UFN5AiiKPmEtx41gUvkOGW9Ql6eyX+4paja93k9s4JTN29rqeWKVEb/AmLViHaGLzSUSpwrrWP2egZaTiPkGViVbPj6+QKrwqkeqG0CeYojWBlgXSz9qVeeU0Hr9PCwbQw9IzdfB4t1q83lSajBf+VrhqtQkfXjSIvSOrXcY47WRZW5Wo/rZSOtygtH/FG7c70VD6zzuMnT6AwtFDs5sNh3aHG6ncgXC7ShwTV7qUSZSQLl90SsaQ1WukLdAKhMmTID2+UT8bArJcdq6z6lDXuM3VCtFdVfx4/zuOGws31M+UVkmMNCggQpP/pI22Kxo7uBmBm0BuX+h1eyYPwmSUND6O7xm7DqvXhyCaQRClARyE0PzuLEacUgu/QcTl0ahWGs44b8HPk1aeJ7FI4hfKmm4jlAoH2zZm2u30lo3w2Y64KKNqfw/tZpRl1ZHOgjnDWbCBmN9niIWuC6/UQX1psHPBKaGDqCDTvPM7eOrpk2F4IeTUB8Cj6WHhn/Y19N61s2pSCVjkiHbNBZtQmP2FXfHcUqZRgx5nUGbZx+8fOCi7/Uq4WpNQy0i/6YrZBSD0kwGQx5ZV0qNnBnXiy60kXlF4/+si+TZqTDoxf2STzzgM5ZjO8n5WvlMdVl0/CUIoysecHOj/zNwosrLP+vOs0QtKmqPhLPVkTkuA5zh2bY91d247N3XCpdqeVPPstVYyi74DJ4b90wIsqXwAMQ41A8IHrK1i2u3slhv3/zDUY+wlxRvzanWVa0Hl2vBPzHOtWtfpNlaYIgbRt5kbME0MC5ULGaA0jtcs7uTJQpwUpkG0bTAAL8ZDZSGuTH7C8R+8IvCpsZI71lq4fJBJZ+DrYdPcg9LWGX3ISs+LwXNaYBbL5t0EfVq64sunNyMzJnj5TcfwVd27Q1mgmlG+UxefTucZDFFyKr9/NKu8InkHUG0F1vuVgHW/GffLrvSG/Tq1sJhR8g6G40oszHTnmqRos3Mg=","layer_level":3},{"id":"4ead71be-05f1-47f0-a734-04860e9c962c","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"Watch管理器架构","description":"watch-manager-architecture","prompt":"创建ServerWatchManager的架构文档。详细说明其作为核心事件分发中枢的设计原理，包括ChannelInfoMap对客户端连接的管理机制、needNotifyChannels活跃通道队列的调度策略、retryQueue重试队列的指数退避算法实现，以及epoch机制如何保证通知的时序一致性。解释LinkedHashSet与PriorityQueue在不同场景下的选择依据，并分析IdentityHashMap在连接映射中的性能优势。","parent_id":"19ed560e-f4af-496b-a7b6-d4ebbf134e73","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:15.796283+08:00","gmt_modified":"2025-09-19T20:21:46.352279+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OcgG6JfUEuA9wCOI+Yzh+3aUQK6s98FhwptBOzkkQs2Y10hR2tKScJ9HabaeCMx+dvpGySt3aYtcVRiLZvvaUSpaEcjNK+/kwH14i+J8z230qcJpanmXZZbVJlB6FhOKVfBk2nWdoEy+12kbEtGf6qd3vLg5XdXl9g4uGmmoaBqI13/COmFVN/Qy6sJFjNIu8uqMTA6MhwnjzT622/2+LoYNtJWEjKV5sp2zyJR9l/oCW7iLwFylXEH89PUsD1y0bx5SUZ6i1AHSFj4oAp/JfWCb5qMvvAs8jrQOW8rWKWFbt+XS6MWS6+YQr1Dozv54iem796eSv4fcw1Vg8sGgLeGgrNFjjK00A4fDNh3yUK6+3pg+UP2bufKMeqNBGkUdNFfVOaot6fDb4lG/CIfGBDPRGkVpuRPjuq7HKZ4BI1EsURs1aOCPCO5kM+pgBX9mKe1S+E/fagyLm8XRnh2UE+mJaJW1ltYUr5g3PDZrite7jDDJr6n2sAygxk9j25oMGcryu+QhdLA5NE+JnnntVGEknmW3Z03b1Cky03xf9euiH5LQFKhHPYhKFpccTWqCUJtniAl7KDduZhzbDOMDLkGPmgX8oiPecb6+2vdRj1u7Ez524VFXmQFb0IQWUGLNOdI/nBmIjw1Wqd1RCjQj9Gtthrh1ExYUhJCuQ7ZY4HyCXaOfYpamztcMEwjbsRuYd9G4ump1NTTKPQRJg3XnM8xJ+n4cfAXbmkxV2qAmDmoOqMzbglS7PzT2x9RXeTdr+/RhU6s6TSb/raKBP5Fk7zEF9yhqVgfSjRaxO0RmqAEAqOvZ/bJVKMCAoUlFCqwrVwWf5TwfbvKEw7dzc/CKbHyH8nhfT3leDyybfeBglaYEnCB+CgPEUVqgmOme714wjH9+RqQ59N1oiTuHOwoclTS5BGHSHMBJvMf3V+5FvVam0vIhMon9HjAO9cAL7twISFtqcgItb2wtL6bn3ViMWuFmhTr4x9Xh6Ie04iHGl4aGu1kWTlq59ADKHG3bDVJzrR+kJklCNcX37s3G8ne3xYgrWw7818uWeO+k/nWUhURKNlvJoIzCiIi0X9dZPVB3OQ==","layer_level":2},{"id":"97acff58-0435-4ac3-9ebb-3c1305b4167c","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"分发流程","description":"dispatch-flow","prompt":"开发事件分发流程的详细文档，重点阐述dispatch()方法如何协调needDispatch、needNotifyChannels和retryQueue三个队列的处理逻辑。说明在单次调度周期中，系统如何依次处理待分发的WatchHolder、需要通知的ChannelInfo以及重试队列中的失败连接。解释LinkedHashSet与PriorityQueue在保证事件顺序性和去重方面的设计考量，并结合代码片段展示迭代器使用与ConcurrentModificationException的规避策略。","parent_id":"8d04548a-2c0a-4275-9eeb-abb529ec1fec","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:39.168244+08:00","gmt_modified":"2025-09-19T20:29:57.838073+08:00","raw_data":"WikiEncrypted:XbYpN6Bz1a9bxAUgfaWb+pbicZdQoMqvybJHxXI2y/pXCUk/6HU2dJpH+PtXlbnwxRZbGvURjF+RClfnQ2TWg49fMlO2CgfX19Uil+XkTy8KjY6tRRgiJCnSOSdIZB3VLpjU6xTn3bEb1NR/sIzikW+oHeXgAbx+LS6vb0QXwhcd0YvqUVdy1ipbp3iLNAx7WdEFZL039sr9oCazW4XqGRR/Df4F3TRAAcuF9u4/5ccbJLx7d7HPMFq5NmAR4C4PjIGAGHwn7bYlEjXaLumn2Z1TtnSWBIiJUWiB/+VeQQNdHf9VBcXyUUAc1Wmv7PtQGJ7NtdwP9rfnsGGxLHrGsdBPyx9FyXJSVIlGWm0YqTjmp46zj3GR1TL37Eh0lfHhzIzK/4gM3FcKc0XewyIVMkyftRr058Iq71W92F5F40ky7dZ/FavWcSOKblMKbJYMs8KooXLrFULLerzd1sLwG3zg6VBrTXvrdkRomz1JhPYJbu5KnS7X/NYJVnar6GHD/iZ0WqARzvJb/B+E0dSAv/R0kDPUnSAtbh2NxEzw+0vG1dr6espNXjhPTeRwBnROw+ivbHvJvBotds5d9cw1cWDVLCuDMEvAV/5Wh0Sb9wYSMNBfkv83BMhshL3Tmkl6uh4doGeqG7KZrZQraO/p18b9F1EkgDvhe1rkv5Te+ASzhvBLrlI8vFef8L7kxtUDFB0dufoHM4zwJqFzRN5Q9F/qPFBj1eUqxNdK2+zAQUpNrzGMK7l3W4vXl3TMqL0oANoDBTNlyQEju6ZO2sz3IA/AjYGd62//xr10XwzyWi47m3CatB6ruzzU1LxHYjwBvnsJutp2VHVgB6Zdv7nhtWZP+0xxcz3H/7S5GnM22sR3U08vwawAnb6X8fAfKCQxjsXjODmxuKMYX54Yu0BsTYkoQIRb1g9Cxh7TPHBkvKqKugykV1PPO7GPVx4445q0AN95MWDT5QeQKu/vYUoaB3U6jit0a5cjKNHTfcIAaseYvRlTZaEbEN6RMPMj6F/2WIXWUA3DFJTnlX2aCmwJ/A==","layer_level":3},{"id":"aaf83a5d-df23-48dc-9c02-61e62f3feb75","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"连接管理机制","description":"watch-manager-connection-management","prompt":"详细说明ServerWatchManager中基于IdentityHashMap的客户端连接管理机制，解释为何选择IdentityHashMap而非普通HashMap来存储channelInfoMap，分析其在高并发场景下的性能优势。阐述ChannelInfo对象的生命周期管理，包括连接建立时的注册(sync方法)、活跃状态维护(addOrUpdateActiveQueue)以及连接关闭时的资源清理(removeByChannel)。结合代码说明activeQueueHead/activeQueueTail双指针如何实现高效的连接活跃度追踪，并提供实际代码片段展示连接超时清理(cleanTimeoutChannel)的实现逻辑。","parent_id":"4ead71be-05f1-47f0-a734-04860e9c962c","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:39.920712+08:00","gmt_modified":"2025-09-19T20:29:49.132429+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OaU+SMaExw/v1bdwtGF1Do0wGp5EiLH7zf8nutXqz6xoUdihyqp/O6Zkn7C6fNYOnawCxoHrRGjCOEPu6u7GESu8ssIkWQpOwHsGX4DZpkpW2JrnS5wPx4gJ/4jsp5RHwWlWv7kVN++4SFY6I0o+VROAN8rZGCIFfuu+stmGAlyk5ibQcU4G8bOt0oF/GsuyBl0MKZUy/J+J08cpBfqruHpW9Z3uw6BpRkWK1r6B/nMwOniz76qvtWPqNvQldyfdGdlhxOOs93I4lH7eHoXtk+fWUWzUDhvPxGvoJCSqrOUmu2GO3Ug7i+yo9B23eutvbAFwVQ/NM1CPuRXKC7phBgyr/Z0C0Hf/6LYt3U8vhaW6puGsAgGgY5e6OE4xMGWeh6bj4dUfWewDdh6sSP2pXhKQ3h3C0wHEg3AEYmnQZHrME0ZJHiYLwiGVn5QYuMuqobCEeAgIWbchgzAzF6siCu7JWDns4LCH9yMBeE4VGCSqvrTai3kOQWx/WRIu4NcvbnRCvUBGRMPJ826VOe4Sic/OFdaUWU+ygHj4ouQmpOoN0uLixvZh4gHECp9xh39WPfS6jFn3llsbkqCVZrBT4QYAH9lljRe2eRhaycQYGPhTgXjY3m5MC0f7fOLFdQ+t0SJK275woFqMFN7rHYEXm5LvSU/iz25nxzEJC8o8TLHnUjUWr0RA+3U2ywuE/QRUdUOdYAxTOhH7KCBazchJ/JMdJgmHjq/rdNrhy2bMmZ57UNbUZeW1itbew0xrT6VJX4/za7zWnQk13cXg6zlMsbQ/bV6OorJzyjtOqRYVGy4B3TuS5K4kY+PD0veCNOU0XHsqKSGtsF6u5BEiWPkNf3TcKud1cg/ulxCq7D4r/b5xN0Yn2XkydGfbarrOnxnE2eKG350euMG7Xh1Cvvqts4ZTQeXMRYIns5bJfprr/3MosIk9wSvkmTC406nzYaI79911GWemYkwAUo4ezH5Tz3o9zkDCEZ1kxCxtT8tNO0uwGZmwxiwE634C9DNOIiAS8ZXO8aBcFhAApUiIz7ltVsI7GQ/l/qSpguaFpuTUlWhHmKprGezlt+dTJFWknVd9dh7S3RltOuAUlP7CT/RQComkxPhvq/DotosAyDAKD0VSyD7p7UsWUIT3BABZtY/7wDJqYEojJQzJ/ajpnFlHuSkTF6SlzNLyPtnasfy4KfCVo27249v3MAAY2aC6z298zferzC8mbDSuXl/OLHhC4JG/wW6P3ODVNk665arFge6NW8tejJ1R/uUwX68RXj4sdg==","layer_level":3},{"id":"31d224f5-0c2f-4d85-b909-abcc2bff1b3a","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"通知消息构建","description":"notify-message-construction","prompt":"创建通知消息构建的技术文档。详细说明createNotify()方法如何根据KvNodeHolder的状态生成不同类型的WatchNotify事件，包括STATE_VALUE_EXISTS、STATE_DIRECTORY_EXISTS和STATE_NOT_EXISTS。解释notifiedIndex与updateIndex的比较机制如何防止重复通知，并分析key和value数据的提取过程。结合代码片段展示节点存在与删除场景下的消息构造逻辑，以及notifiedIndexPending的暂存设计如何保证版本一致性。","parent_id":"6addb4e2-d8f7-49c3-ae08-c0871142993c","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:53.905094+08:00","gmt_modified":"2025-09-19T20:30:50.561287+08:00","raw_data":"WikiEncrypted:foZXSzzEjNM6RDg/o1B5xkBnqT/fduiHyYVpjiRJ2J1ZS3ddc3s5GEpZoHdzxkdnXWUzk+XVW4VCppmfiOxTodmJwW0pwn0c9LGI4THzzPKumw1TDdvYOEyJUxpe/SxDs/53+csEFKNKJq7b7QNBHp5MhOV8Cn39niZWjeM6PCZqCuY32XKR0EZM+NKwSAbahNo46HQJT2Djgwt8USoCqJs7r79+w3iKhBKU7SBd8etCmQiF/qK7d9CuMnFIK+q4iGJCy7hHGd40l/LNHiL9hJGWm5O3OeEDz7PvKMtDGGSwtR0dxtGBWZuCa3y/w3oGCzHA7PPdVHYaUhrB66/fsYRl8a5YR0QxWZTJdJEk2/vgUJTM9/FON3raFPgoQCiRCBQDqr+ZsJieE2GWDfx9ui+9seKJZFQrVWU2dqUT/v0+Src5o7uUvsBPbdWma+PlW1r4DW4hdUVDrATx3PS+wjjsJktN+92Vvg+CnVCVk8152fQw19kSQj0zqHwpqhlIipgibuBJjpNCb6F6JxysmHf6JURQl/vqSC0ZLrtPZ9pYR7bwJnyTAOYovWjFkyDwzS/4EHCXBxS1JfsMqeA2qp6m0cD1I88M9yEv36PmUOZXddDxfv5DRZjFrH/J90UCvvNu+iG3TidoClIkUyEXNKO3Q2KuhHJ4hZGxESH7dqt9CW//xFHQNgmefstInGiQbBdI1ujAnl5ZnjIEXfNf0fsv7G/pZaFtzWTZOsJsl79xtEwa1cvCwud6/E8mxF1/+mbXvL7uuh1TZqT4cmUzs2vw0TxhPLbwqJqLB3ChzuOF8SjHu6HSfWT8/NRTBldYzZCg/+jBC7xc7QbKrwrsvsqEWLkzWru3pDU6MkeZxFFsDA+aK5hwPiyKNcnSF2Ki8CsbC8M55dgtmbhXrJPrVm8TlyLDAhNt7kOWl1aMbFJhHhkK7GPauznGwEdzfUuC1J7tfQQqeMmLg6w6EDNG/sWGalD6KM0BzKqJfd73MbzujfH85ulQFs7BF6Bhnvs63xCvm9LCzhu/xVZ+vmglB6iQkOxotI0RVFSs8haN/TA=","layer_level":3},{"id":"f97847a1-adf0-4376-8fdd-652daf47b834","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"客户端响应处理","description":"watch-response-handling","prompt":"编写客户端响应处理机制的文档。详细说明processNotifyResult()方法如何处理来自客户端的WatchNotifyResp响应，包括对成功响应（KvCodes.SUCCESS）的校验逻辑、业务错误码（如REMOVE_WATCH、REMOVE_ALL_WATCH）的分类处理策略，以及网络异常（如NetCodeException）的捕获与响应。解释当响应结果数量与请求不匹配时的错误处理机制，并描述在不同响应结果下对ChannelInfo和ChannelWatch状态的更新逻辑。","parent_id":"8db9d374-bf88-411a-a097-7018ce115841","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:54.634941+08:00","gmt_modified":"2025-09-19T20:31:10.518825+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OadXREgVkCA6t7mA3aJr7BMq1xosMUwwDtAMNVTx8D5wFBoHFYkoLdDeRTcghDYIxcoeRLPJ8Uc6Ftvej1jsuu1mJYrEDQF5R9llgJJnTos1wQ5glu+FaHpxwSzqOo5u6jDPmZZilZH3X1QZWZF6krwXznzKM0bbRsw6fSY1E4nb5GvU15tXzm1k44BnLJeuOEyrUAC1m31u5lKXKkZME/0MAVanKTVzJlZYUKrWyMz/g00dZB6cJ4BWM2MUNJfcitfcq+p1SunuXJtG9hoIL9CvbrFCZKI3M/0y5kPWg3bBDDLDmZGEUKgPcyvDt6SghRSjues89nPtTSlKFNlFaz50fqgC8IBOQA6chN55gXXRSbPXQHVVfSSsu2o6Qevq97McSPghBKUQlLROgiIMqNblVvb+GTs1292idU7992XfrrMQST5dc9pLNKpV7rPl12s7IxX7xjKO2ofaU19GHj3xyhLDjsTVxAN3SfIqlvzgYw1viTDMrRSixphimHy4cGIqCyyZp0EIHs+Ta1pIyZp04m1r6U6B81+ALxaScOoLr3Lb/A9I7eMPY2/LjgPWn4X3hk0v8+WXXnFLTEztdhSRtgjRcef/bwxk6ObW7GxCED1azNys/TqvNOu7vpwSukBwms4w7hGgVaXFxsnBfeUF0NfOjXUdfwonDachxy8+RzkuHBOWNjhIyfT0oBF2Xk4+R8NFcUfEAmxBNK4+I0qY+BQfX7Vl6orb9s/nVjYTkBE1zfKLAYCkgxbI+eEWZB5qlN3pVctRq9k7VFEiYR3eoOd9sLY+Z47aR8BNv3r67oS7x2LJm48a520q3zoyNw7GlPxZkv8KE1kq2uxA2PoU84kcSzwPCCieXidT2GxOk//puLlsX256k3Lit9LQlVgv1+wvkwznE+5vLOcdrV9AU8SRpaMTH9XdUt38Srw7YAeYVC6pZYj3v8kgcBNQL/uwroPe7gbdAbgFQ2wtXeXcN5DyLpphVWrJcj2CADQQ17M5/bSe6qhx3CbntxsCgZPWzki7cfpQgk1l+/SGqmBjwGl9Q6V0ScRWyWm8bmLy5Xt3IoabbFhVlGe7p/phSfhTXOpFSwXSH+boSY/F0sU=","layer_level":3},{"id":"badd793e-448c-4e28-b83d-50cd7cd71376","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"监听器树形结构设计","description":"watch-tree-structure-design","prompt":"创建监听器树形结构设计的文档。详细解释WatchHolder如何基于KV键路径构建层级化的监听树，说明其与KvNodeHolder的关联机制。阐述parentWatchHolder与children字段如何维护父子节点关系，以及HashMap\u003cByteArray, WatchHolder\u003e在路径导航中的作用。结合ServerWatchManager中的channelInfoMap和needDispatch集合，说明事件触发时如何通过树形结构进行高效传播。提供类图说明WatchHolder、ChannelWatch和KvNodeHolder之间的关系，并分析树结构在大规模监听场景下的内存与性能表现。","parent_id":"c486d735-ee74-4b63-b812-f1b40885671f","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:34:13.819617+08:00","gmt_modified":"2025-09-19T20:31:52.094004+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OfIkG5lqHdVq4BTkhP6cDrZZXcNvRKhTQmM7rK2Gu1diegGbJLuGrNJxs6GUF+0fpqnHCxm0ys/grqgFKffvzBUTyXk5qozQL6GbpAGbcamnep5WTDa4MF6Ne51b04pSnqF5rTlRY4+DyMQe+DvurkkVnuStY5dHQ54FjGitIN9pjVONJ20su4XdsJ2d0IDpBKbBgPxi2F0U3NXrRCOAmPv4qWfIl+8huK2YDE0bUdAn8Rfwvmt3vatRA/aexAxjgzOf2gN44XewlPR6YoCjkKeLd+gIGfvmEQYlOSUY3L1WjyawFR11GCzZmpvGkvAV+YfJaTxkZNJIy+dFIntjGFz7aB0KwGdtOfG+ZRtpUg0vBQfsVqO2hhMX5Lkjxhg+7VlfwpS6fbDZHsmki/cocvrdFK2cZ2LGSnI6yuelutJtbQ5flJkWYswMjMuit7hSw1lgjiP1+QzVgfs8N5PcsyN1LiXTj5Sq9FkSDRnRwSQ5gs7zoLMjKWba9vxkDCGp/wzzGC8ldbkLvlnxnP+Gm7iakQIfmDtT4EhuHlOa0u+4p0WH10XkQDjrHJBP9o+zDjVmIS4s3xT+tHoVDWNDSxpBrmHrSHKrhnji7C6F8Ra4wMhnOquhkg2pcPtLQhvIkN1XcB029n2wFSAIJ4WGXFEHp9eU6OHxz+oM3QaZs7nrwQAnVmZOLu4Jlq4wSHkTa0HDuMMg+bBhuC/ZbkSLE5pRk/TWShBynQ52dZb4wnDtnO02mRQ0FDi61RruHQbFDODzmtDvQBOXH6PmuC3GLhj65LRBjQLJFXA8oMihRX1BejaqOfVdw2lMVTCM1lFqRuLDfNCZrt/X2AbY3O0ZBVLbsyPmeLriSRHr1loowqKBjUu3+v60vDiDVtKg0C38pyhoz9MMCEPbY0VfhV6tIYSEtYO5xOCN+m23vTfjfqighDgDo1LLK69OoNRYm9uDo5vs9Ps0COFIU/l2o0hYL9dOB9Jy+yYxj/y6nHEJEnP7nPqaiTKlh3x1998VuihGcvNPLCX+dx/Y0vRttvm1+74c6yXr9IZinfZ5FI1c6tBXElZVjvoNsdHf10pliz/n6Q7Ljdc0x1ElcXN8mLJFXidqB+1jQV81bQRju36EdcRJpPVpNhdi3HYCGT3OeuIIiDMn1siI0Uzh1thM9S/vhDWmXVezBPpVGvHTIDlyVn6hmh2HHlD9vQhU0i4lQs/2u9rZIK9Dk02nJwx0c9YAu703VfFdbwNnmwLoEEX9OZDp","layer_level":3},{"id":"173db000-0103-4c35-a697-a913ad897450","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"路径查找与递归创建","description":"watch-mounting-path-resolution","prompt":"深入解析ensureWatchHolder方法的路径解析机制，重点描述如何从叶子节点向上递归查找父节点的WatchHolder。详细说明当目标节点已被删除时，系统如何通过parentKey定位父节点并触发递归创建流程。结合KvImpl的parentKey方法，解释层级路径的分解逻辑。提供调用栈示例，展示在多层嵌套路径下WatchHolder的逐级创建过程，并分析该机制如何保证监听器树的完整性。","parent_id":"2f5abc7a-13f1-4893-878e-6c2ee5f0d7ed","order":0,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:34:27.418222+08:00","gmt_modified":"2025-09-19T20:39:57.328944+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OT9JAGlcBcKVAwtzvTXgIwwmqS8eET7KvKEqWgQYFSFRrZgkIqkwwCCE30+Ic8yF3R+dj5smyXhhn5lCXeyUfgebMKifS3mXvuRdF3KDpvxGBMH0jcrU0Gigi86THHebyWuEvnKPgCphh+32dFVdXMPWmeqq+NSlEoG/2f11LUg+FT1vJIyUfJnGybJ5XHqj9VFF7UGHKN6qQq8ykIaX1leSG0Zf0VEMmmyYZp0OkWUquutVkrNqVfv+FwCvKUSedOEWYUiCU13Hx2CcyxleUswYSoMVJ6/AXrsWXNd+452uM9n+MeVXqpQX6sIfteRpd3PUejn49Siz1yXpRTzDq7WALlwSPiZsRar9vtwtaWjsQw6fuIOMvx4w2OOF4PQKfJbMAWTRvQfosXWNryTEAawAMrKRYJHg6pwJl/teKsuAZVN5lqeFyBOCwhn8haM21Hu8HpWyed+THRtcjrF7cJ+G4J30LLuVPuUkc85aYcEpC/WITXtXxLuSyTxGDx4rqfvBRH92D/TzWAtPnlpEKL4ZMIXteUveVBspH/wwF+fB7iCGHlRHMeqJsjfGPQffuje94tgMyJqHgUKrdHkRAEQ/fgKx4csMGSb4fUXWYr+qmIY4fRzmTC4F5vjSSRhplVJM4jKD+lWoQNJmxyu/2jSYCTv0Hfsl8+ZBKiAMQpoP+Nl4MThxlOd3luwYAibIGbDaC4aeVD4qTmQDbyqu8RsMLVGViVPitjT0P8zo7JYm0KYawtDXAjSa2hfHnr1p7RWSbZgrxM0fD69rdYz1Nxhgdg03IAxfTmZt11khYw83dc7+UFRRjP/75s/UaarxyoPYbX4pqgN85LG0FATYCqvT/RBbe9KoltEuIYvedg4ugtIbU29WjW8eF2fxQ6vldIyFNl5rc7LaLrm8u6XxdeHYblImc3aqOF9r2sg9eOgZRaONHgAIVou3Do7Bh8T46V2GiYtYfhCFJCgGbOcZd+dgs0nss4wVc43MGvjqIgNfie9hECWVBqeIxzTNw8gPN0ABpwNAZYeXEocRW7oD+qfh90wQCC1Bdnztdfb+3HkxOAwOCE0NyFsBcTF0nAEqlCjm4sVlXR0ppnxTC+RrZzNB4Z/K46mGHTOVAWTf3TnzD/6ZqE4NxP4BV69C/GQNEA==","layer_level":4},{"id":"2c638f39-8d54-4f3d-ab4c-557476031755","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"快速入门","description":"getting-started","prompt":"开发一份详细的快速入门指南，引导新用户在5分钟内运行第一个dongting应用。内容应包括Maven依赖引入、最简服务器（单节点RAFT）的启动代码、最简客户端的连接与KV操作示例。使用demos模块中的StandaloneDemo作为基础，提供完整的、可复制的代码片段。解释每一步的关键代码，如RaftServer的构建、NioClient的创建、DtKV的使用。指导用户如何编译、运行并验证结果。确保内容足够简单，让完全没有经验的开发者也能成功运行。","parent_id":"","order":1,"progress_status":"completed","dependent_files":"demos/standalone/StandaloneDemoServer.java,demos/standalone/StandaloneDemoClient.java,demos/README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.584291+08:00","gmt_modified":"2025-09-19T19:35:28.685693+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWjuiNN7p/9UiziFtG8VxSN3lDZPQFx0/QJ3DnzLYLtDRBwdidfXueLBo2rhvLlsQKA7ejfuqXtmyDXKKvCE6uqKQPxp/u0Q2cwgII63ECLpbLeuj8bcsYo3At/GTsZ4wpHaT78j+yFA8byukMgYtenKyYovJ3LIldaupL9nIr66JayazAyqe9QJ4M+EkLDxVst2hqXV4xtQylGM/+wTa61CCWED2biLmiDlOog8JcKzvgLQoA4ZxBs5abYIcfn0N7uddN2h5cSfotdzW7ok7fVucSdzErhfkZ6Id9eRMcwYobd78TQDNiHjhgy5731XWfi+tvMIsQpUya6pvgwgFqgM+OOYMJQxEMqVLSyofWWCKYle8WyjpbZDFIYLAxm3/+PIiomQUTwt0DZK6o0Iz+VDs5KKkbs0uFUD/UyRWtgxjOn0/bAzbbJbhdpb4Mv2jrg96P0Q2quXKfJBgDZLSkoTp+jctbrbbkzEVa4pxWILItiODTpPweItS8bxbyJCj195i8O3PHpS6qvLZM/G3Us22MhQxvX8NJNX+Yn6Skuqd2rKzb4fVW1up5lkqOb7tkvxAv6Ltspx6KVYlPAo1g1Dxt/0H0jzfG+I01ttOf8wtHH81hnaEsbwoHZLwrq6RufGW/rhoXY05a6kSPzJ4bK52L+LYTSPGES1arzooK1cmeYjoSi3zXQWPlTYSTbS3DffQKpMmY50fjNTvB48buWT4t2QqeqJvR4h+w6AFptyxwVI7dFG/N1uGSmXCFZqt6edeg2HIY7bJsluGEKcPDDejdMuBIyWaCpTvXt+lOvRbK9NZw6hx+ZS1rJ9oVWFTC+VYgXz1EipFtOeRZsWzNYy4EKrAldu9s/t+hTEKp0OHHfD+y0dAPPYFu6isf6sjQYo0BmInE1Gun2XyL9g1vnyW4DDD2ixkGMgl/NG8wk+NP8L8BSKuLqm+qA3gVlctq4+BIURANkR74bagEB9q5Y9AXplXQvpuSC85Cfv0ejq2pHDd4ZfBEoqu4Kbhc1+Q8qbEoPM9Q6DIykmIG6WDYhGxDHUkVBd6v8iVhncoTGkQjNGkBOb3pv3tcn5XOGtS2A8K/DQVDwN8AEgA8z8IFUf5zncHh4eL9gqYYLWW/QitKoRoYS3yAouxSljvZD9yDYQ=","layer_level":0},{"id":"41ee53c2-e4ed-4324-9bd1-597ccc4eb1ed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"客户端配置","description":"client-configuration","prompt":"开发NioConfig的客户端配置文档。深入解析NioConfig抽象类中的各项客户端配置，涵盖bizThreads、name、maxOutRequests、maxOutBytes、maxInRequests、maxInBytes、selectTimeout、cleanInterval、nearTimeoutThreshold、maxPacketSize、maxBodySize、poolFactory、readBufferSize、perfCallback、decodeContextFactory和channelListeners。详细说明每个配置项的功能、默认值及其对客户端性能和行为的影响。例如，解释back pressure参数（maxOutRequests, maxOutBytes）如何防止内存溢出，selectTimeout和cleanInterval对CPU使用率和连接管理的影响。提供如何自定义PoolFactory和添加ChannelListener的代码示例。讨论在高并发场景下，如何调整这些参数以达到最佳性能。","parent_id":"1156c858-9266-41c7-bd13-442758f625d4","order":1,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/net/NioConfig.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:22.680935+08:00","gmt_modified":"2025-09-19T19:55:04.450643+08:00","raw_data":"WikiEncrypted:kSMJmF88qRkP2ukfVdKPFGRnTsRZjnTbq6hIAENVIK7yifPCRwKDFdaFiUBuJWDlAMcftP5Goie1bttKPg4rjSTtKN9LtIDiKCo57mOa05QRalHJTXbno77JM8aSA0IqWWqQDaHRuuMXKTQJWknExvgO0PLI80WbWkDrkClOQNo2kTlDDP6N6dnf6EYqpEoF0InV/GYfgLUpaIJWc7Tvwd0u4pEXL+bWdTZ/FREYd5SjvVSUjbsRf+jSUvkM10NgxxcdVrb/4+uSF+AnsNELuwcvCY2fZeD1ozMc0Pc3zUZcrbhKuiycT590ee+7UA43To4DDQ7tEqrjcE7N3ECIeexYZRBwOjgH57vLM0dxCUOzBZFQ39ynGQOuS+MYsaLnrJSCzJ76d4wQXQxsCU+Ry6uWDF5WXsBGu2q2aStbh6Up3XUsaKnQt5ZvIucHoR3y9hOjnGtnxE2ho8aeEUimu4hL/hFJumFxhZksWsmoQilWgCuyXJu0PoZwy2pF9ofrrDtnEcdKTbQEpdfXezBLPpmQf26oXdIoDuGDHJoLPnoieztNXy9c5MlcVdTuzn0bGkwSDgHJ4u90TtuTcfhKXLhtOTPDRIMMW/ZpgAEIcPXP+eRkRvkX5ZlwxogiOxBFZLkSUzP14EU2n806OZYLsht53s1bFLV5dwvXU4ppSm9yHEHV/ZEUySatSugf2j1m8YU5/tnZJPLb0wq5fqNIPLL6mYlCUs2LtcWrpMRCkPrmjHAjuegZ1hI54OSGV/VbZKQn95WzgObR21uo2Le4iZdnQ2q5mmF2N2SIXHtozzE9AJGusWm3It2bVN8iYWYxPUwfD0X8xljqvMrntCj63XmPFcc3vsxjhFrYd/UR2PdXX++Gv7wywySLJCKCisJCiFnVbxF7ZVDM7fi9tFLA/KF5xKpAQhcq1aYhh2jRmirkcUJr4Pdj4sJbY0yFmx0WaRPsmdD2oqNQziDGWZDzqWKJ6aCG5x8QIL7jvwMZCJVUbAF5KuFmvg58p+OzpHTTtmQClbQtS7WFaNx7a0XGVQJaf/1OtImI7M+euzpX+kwjMpF0iUI6w0oIMVJU+tn4UX+bckxUQ82VUU7zbb74WtCb01SU+632vBmFDxb88sNTDiKL5GCmpEWAmcyCFF2o9Gq+CeB9GpfVOV202hxtQC4pK0/5srPvvv/v4H7EEsQzhmfYD9KOsC4EDRrxKiiCatlSj2kmPXIOuRVceZnJmchiH1QQYw52jL8UW+ZdKwOlnCiOwVwXjed2wFumZ/syl3dMRFOQntsyPdfZmOjjTACMVFMQDO/VC/FriZzERXSzDOuHZlBF7XhSlGKkjbiqYOJMyanHGP23ZI70XAVIOLazfXMIxn9fUV+t/qVWHBHwYhvd4CtejUxslGyBcA8nJKx2aq2FgX3kB7grhEeuixQhXN50PZQ+KqlM/X+n8ceQmROLEGephf+X1CGl2Vcw4DAsKJxSkeHFzLmvR1wU/A==","layer_level":1},{"id":"bcf3faf2-79ac-4847-8d6b-e8f9eb1a20ce","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"RAFT一致性算法","description":"raft-consensus","prompt":"全面解析本项目中RAFT一致性算法的实现架构。以RaftGroup抽象类为核心，阐述其作为RAFT协议执行单元的职责，包括日志提交（submitLinearTask）、成员管理、领导权转移等核心功能。详细说明RAFT的三节点角色（Leader/Follower/Candidate）转换机制，结合VoteReq和AppendReq等RPC消息类型解释选举和日志复制流程。重点分析RaftGroupImpl的具体实现，描述其如何与Fiber协程系统集成，保证单线程内状态机的线性执行。解释成员配置变更（Joint Consensus）的实现细节，以及故障检测和恢复机制。通过代码示例说明如何初始化和管理一个RaftGroup，并讨论多RAFT组部署的场景和优势。","parent_id":"05c7a5ec-036b-4e80-af0c-93e07d64e27b","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/server/RaftGroup.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/RaftGroupImpl.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/AppendReq.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/VoteReq.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:29.351396+08:00","gmt_modified":"2025-09-19T19:55:41.606624+08:00","raw_data":"WikiEncrypted:7ASitzE339gRtnC6am1e35P8qawi314xtP2tjQLsujNEDwWeH+x0fCSB+ofPixnipNMqbSG+WM9O8fkBh5PmOTPXwOSbhjCrRORwzlm258sW7IHiO/HlYdr8mdyfopwxhQge4CF4EgHJ9nn4ERp7fzpgrLaalYl+4xeO6AXjVCo7iYuEPk0iI1cH6JK8a99Em/jhRdbk8POAQysZemMIeUq4ltjWXHiUCjltnsTKODYqD3tSAgLK/mNO+MioZqhQpxldAmu0TwZ/kpUCU6txstDC8A2x6nTXAxLYPey7dslP5jlPJU3tp/U03YfcSXEWr4BsINCkLBwsLGvf3C5EN0dc5I6kEMW+PkIn9sXxGDH+LiUNt9cTImz93CMuQajAZjcs31nmCLp9upXlAh0qmDQZpIVkw1rmBFaPKmuxE+goe04jqIvpiJIQ+k5JpnqXslbyXGCtvINvJaS2KXutG8vhifuYlwySn+5O14MpiiB6Lxa53dc03TkMjSgrda95FZS+hQetwvxFAkjfF/J+/x4JMw7xGNy+f0X5GLbW6X3yDbe3yRFqVv41qSC6IEX/1SADwoLLsmcWeQBH+XMm7cxreYLVijK2ND4oOj56m+CSV2MMxO6vndOnR8BVddxuTFk4ZN9Hl+HRTn++nr7DX1LqBRZVWWKil1XCpTKA1PHPChoFtX1SXl3DPOn1ZySnCZx+qPInQr7dWfEl14fmSKS+q2tKBU5pLK1bBLwvfR9xLwDlH2nXQuEwBlJmdDgSexBpAIc8ZDMeFnWWhM6fYn1iHmJhLJQSefcZT1PRLvYoVVKgrJM++/cNdB7w+RhXAOu5+RWbyMyqDvyKqDHPgBxOUPOBFO1JoVvatr8R7oHbcXUb+7/CpsKG2/d9u7jghe9FBSbFm71ZlQwueC72tKzES52OSHW3v2uklzG8EwWpaAvAPQ0i2LvgntyTa0tt9Y4bLevdFP62PX4pk8sZoMgdsPV2VV1wGb+FLeH5OVd2ktXC0VszqlwZ4cEhMOBIVkC8pVqJBOKGBEEScMlVoITZIEAcuOW7y3FfPdCQPdAIFFhHoecvhzU1Epp8Bra2Lb2VzD0WDjkrLL5jH2Fl/zcxgbeO02UW0/DlC+XbMnRHza1ITYx/V4vLVp7bPRKfjvVV0AziO3KgzPhvIKYqqFBGpBLC5X+hs8LRatcB9m7L1xdDDfwGQryBqIbI7oqvZ9h+E7HTmwAQqgmdbnJSzxluA80YBLX2FVKBhHDgLgYiLY8TJiShIVk51ukT7sAUFSpRi2zc1K6dKTdUH0ad+ZRdhQEMCh89UhGkdcTzsp/dFGzliRQlTIKj/dtEaOngMAghsURbvYnCuX12Wx9i9WJaqPbnuPgQxV4/xOaIte2z2vPR09Kgi9PSaOxpaEU4/TCtKnZklRt/ywBGOVsFRkXXXIMTSvfAi9tyhCIIWg1NdcB7EtjCc7QimlbvzO1BPD2mtW/ISrXoHXAbDBMGzXN40yTWEo5nZUPmDUBuPd5yKRpApy5I/I4AosBpjtQmBaYZHMRXwMR8f04U0GpxfbYaDZvoRBfJinO9Web//GTyV/biJUaldVPIcnx4dl6CgYVKA6/03PgH7v78r0XqPrRTXG/vXJmfGfyGHUOxnr6v5wCGrH/E2TB7xElmNIIQBFT1vIFPcjo5UZHnEcbY2qOqi2s7kJUZeggUANN1RTc=","layer_level":1},{"id":"502fd2d9-524d-4491-8db1-a2309026049b","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"日志复制机制","description":"raft-log-replication","prompt":"开发日志复制机制的详细文档。深入解析AppendEntries RPC请求（AppendReq）的结构、发送频率控制、批量策略以及响应处理逻辑。阐述ReplicateManager如何协调日志同步过程，包括匹配索引查找（MatchPosFinder）、日志条目持久化（LogAppender）和复制进度跟踪。结合AppendProcessor的实现，说明服务器端如何验证并应用日志条目。提供网络分区或节点故障时的日志冲突解决策略，并给出性能优化建议，如批处理和流水线复制。","parent_id":"29a33e01-a4d7-4a7b-ae5b-9e7d7bf2b913","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/rpc/AppendReq.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/ReplicateManager.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/AppendProcessor.java,server/src/main/java/com/github/dtprj/dongting/raft/store/LogAppender.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:46.56943+08:00","gmt_modified":"2025-09-19T19:56:35.745382+08:00","raw_data":"WikiEncrypted:aFZ7WsYjAiwhtnH1g0qbsfTYIX3UTBfcuEq+KZoJisyWcAPzlFHRgpWGVyPaZT1iAzIVM3PEEcCPdwJHWcp+7/iQb3K9LNUK3dcqOVtI8fpgqRebhkhqi3P3xvM5Zx46X3LIEw5hvByOMXt74J1xsAGmIgJi2QXJppPh89AxVAreB55yp44+T5sD+IVBxfopcgdV/BHigKmcf9Bl/CgFLgUlMHFwo/uv+1Sro8fQfaLX9Df71eyDuvGHw/LygqrdP0l7pLtXlNqjmRQdPwsxL/kN+IMa8Ztl5ViiqoSWwn+HaIODGHtsxoob/XmbG9YvazTBRU4yyh7we+CaoUhNSY+6iI8O1mLl6YSLHoy1Y/w2qqi5891s8GPqT9bQDjagWf9dLwKW2o6eBm4uZYIHRBbc91lVDyDN2lhdFbwwPlX5yxMcdmmnHBUhTwCF/HuN3KvCx4MY8zEMuCGG+o4rivpoYE6l2S0AyOYNpr4KqIVQeDnJbk9pffaOiRyqunnazCNc5hHNnUtHwBKh/LNq7FGg8RE1Gah4rkNN2VmumNUHgeENH1+Ydzov9oLmMee1DXOnsrMOGUBdO9DlfeYul4IOMlbcudfg9/LqGM02JvWfoHrgVvSiC5Lp6T9nT0wIG5foloLPRlP7woo33WjJXp4r33rd7iiG0hTq2jNuUUdlaQhUo4PBn8A8IlBqeNkZGMJrhvd1D9Mz92111F2LXWmn2u+6cft+2xuTQCOeNBRgPitHwIziPGrtS0apwSMpLxK3/fpw1jJ50VEp4FZH8kTyDB8E8GTcNX/axn22eP5AkYZSRDPSSIhNyw15Fe3J8Z4IpA7K7JykF3erlOU47YVDEhTQkpZQjebZDFO2FsdoOGFB/OHBFQwvwq2ajGLF2iGjH+xMiCyUQQCl6KyCr0Zfoz5aIJViGHWsR2K2lFVbPj817F0MkaXg1o/r5xW77PQCC6RwiRHnCJKp/u+/6m52u66dsLnsMq94Qd5+ZTfQriLtcUaRJn7zGMPdWXAIZgOwc/ItaFyKSTdeBfdt05s/Ogo+Wfy1ry0YK8ZKKAIhF50Pcg/TphpHvNmVQoMlcGaFdwVIScY3KPKhuLqXvVSYkT4/b66JyWZKpY30LHXAx6LfQRU/nS0nRzuGsgmEn268uWcftGX+2tHL5vUTVFUmncQPO7Bpe2m5BDp8jzTiMjV2Bh1iXMIfWpaAw/uDNn5ssgJ7IJYXcbgIHbbLWJaEQ8aCZJfDfnGA7xU2fs+arKwpNlahSRhF4E1CaYmtbN7ipehJMCDp0ah3byYvKuz7YrMKSa6cEEXxV7qQjLGO0iv9uBFxJYHMPiCnrXrx3gnPoX8kgjowLY8fFbNu6/4QGldq9hEQ/bRLeARGP4uAY3deTxCWN7xF0Idpo/jJiPRgnm7A48gNOtmIJWoUmvgBz57WCXdRzHjmmb9//+elRf0fZbezroYI79ANjYzc","layer_level":1},{"id":"26e5eba7-e2ae-48e6-9a21-9fc2c11eab37","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"调度机制","description":"fiber-scheduling","prompt":"创建Fiber调度机制的全面文档。深入解析Dispatcher类作为核心调度器的工作原理，包括其单线程事件循环模型和FiberGroup的调度策略。解释readyFibers队列的三级调度机制（当前轮次、下一轮次1、下一轮次2）及其性能优势。详细说明DispatcherThread如何执行Fiber的上下文切换和帧执行。文档化调度周期（round）和信号计数（signalCountInEachRound）的协同工作机制。提供调度性能监控和调优建议，包括perfCallback的使用方法。","parent_id":"1b37474b-db6e-453e-9726-e643ca44639c","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/Dispatcher.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberGroup.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:03.880787+08:00","gmt_modified":"2025-09-19T19:57:31.665902+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAInL3XRfIYb7tKTgNw0wQnW0/WbZWPcqZ9+7YeZDQN8dyPUbKYyoauFP9yOeSP2+icd3avdSuuWfYt10wW1TGwnd78BfiyAbYxTLEyiepzMZlYEkWBGIMXcDWkcwNfQeC6eBAK9l4WWYkxOolNI8y0rV/rbdPo3uIFbfKpzSxhE26eWKH37PxR0sJbqgMkXE+dBduncn151S44CM4abKKZ3BQXG+JxW/JQVq1hs2gOhZBOfSG9yvngZ5GzLVeqx6rVrvn2dgkG181Sb3D06xdkvFzLqFH51RMqW7tU0Bt1Hi6GlDx0QWWdPONh4kK+C/psemh268FTWTzipfkRtE18Qm1Hl/fP/Wr6LymMKceVxFTQvX4wmnEz9N8MVg8pvM9tPW0cScBv1q2HqadweYZhos6j8UfDESRyaCDilpW8l/VHyj6QpZ27rmXZrTPlPviJxT2sHaihbcPlbnKfrhR0sySqfK/6XHvmhzhOGtBXgCNp52BhzlVURleameme1qEjETJ3RyY9QJtfHueX96PDvwqmBTx87KxIr7puKfzxXxw6rFwZAgcQ+V3ntUZTeIiXT+lxnIl5m6zEBqy/XB4lLyyCr3IbjJlSX5AyGZKxem69fF9avyXtho+0RCsGpe9D/FPmWTz62Nb5/jA0FY9t1Fw0g6eo6l2zRMsjUsUgFKgTRKumkc9fnAhIr/dMW1rGC7p4S8DHQ2Hmpa6PKWOKZHW5J6oZguK1lPXodkCPzYU0qzcMeWql3S9yhW+K72KVliT6kCbfFCaXjRFBSO9M4ASoT3uu2InEAcXx4Va9xnUwkwMLByU6Rzts8BA4C9uIabI4q62SRX+ixpCj59UKl3NICKIeHHUHY/EgGlYDFpTkJBU8Zg7+sDIVNt18W/XSyqjQLoXES8tI1BIJmiVPl89VmOO2ZalarKbmKmJRgEcC25nJJOLX7BkXMSRwJeSZWEREkBlIYOacrBtu64OBw0YqHbEK4mcTmmPB7anGSBySFDDdID4i8y+9HYwwONxWATZTwLTTuJPmBUE7QqmTDRJgK6nu1bgKhRjROGg4aebZL/LT5FPcPz3K9gaWnp0skQv2K+5HAi67Oh6x6cuLsCxdOXsqiic9Of2/mjbxuW7HAjD76AdOJYbUNPzPxWU5SlopRI9TSenpOPmuc7+Hnq1vcpeZqXLGCpEVRCsp4rMJbs6tNMJm2i5/GMKHgQ7SMd+2TmlrpOtKnvlcz9g5/w=","layer_level":1},{"id":"47c8695f-7607-4970-9dd3-06b37aeffca3","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"CAS操作","description":"cas-operations","prompt":"开发CAS（Compare-And-Swap）原子操作的详细文档。深入解释compareAndSet方法的实现原理，包括其在分布式环境下的原子性保证机制。说明预期值比较、条件更新和目录创建等复合操作的处理逻辑。通过实际代码示例展示如何使用CAS操作实现分布式锁、配置更新等场景。文档需包含参数验证流程、并发控制策略以及在高竞争环境下的性能考虑。","parent_id":"dd3205e3-74da-4d38-a52d-e177f4ce68b6","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:08.768563+08:00","gmt_modified":"2025-09-19T19:58:08.170832+08:00","raw_data":"WikiEncrypted:6Sqs/II6u0GmoPJMYkK368WKRLHbtgBa1pWoC49fBMtoIWj4SXR13gnx6p+Ad2W3n4/8JyTh4bJBQKho7aBP0ZXK1h7VoriA+//WL21UoFG2jkusEVxx5TRWw2kaYdWL4Q0MTPGJ/WQvif3GEHklPmJo+j288BR2N6NyUm+FxT5o2neG2WzuvlrOoFln3yJfv8bR8SNL6LWgOnmF++yqDkBxV+NTbXtgHRpg/lzyfJlxmSAWNx6SW8lvK1qAioXEUAtXGDJTgYoQ4Gcg2sF53ghz/L5nilDs3kAGs2JUcFwg7NH7GOWbZc8Kx1M9Q+3nNSe/aRgh0FwrYFts5QwWWhpIiaeTUSgr3wTUafdeOcbU5+8cQMttwXAhN2Yel32goYCUcEfhLf91T4IRwvRNgrlztJX9dV+S2Hq74IGbyomobFyLfYWv7qYNiviYUhk6BH1wRrvS3WEOxWWppcx2Mwe82FoYPPr/YS3CPA/Vz1Ll2HeR6Pv69UwNzzMNCPfkq/u6oMqzx1v9zv7iTsvNdUscQ/EcwRhfx31H7yYpZirKHhszEU9jJaUgAiXTvb5uJLB3Qz5IU50GssyCYiiwdQ5etHDXzrSTEwRE7EmFkQTYaP54y/peRujd7Q29z5xajiqbv9VPmDkJY2cNCjj7E0ibdOaoVBlly8IXruzXzWP2yrj/B9Y3NbH9zH5gjwylMZKhjlYs7E/lc6fAJO6EX6DWs0+1Y/uKTyraJAbee3o3pe8lQqjjKn1OsFrcxjYQmpe9jtpOXx7bUCAJ96H6Jgds7HYgBq0emf71PBtWeJg76ZHqc/RXII1MlQed5xbX8OcEYNT6z/OFur7WqsmHg9dfQJBa5N7ufffxuCLmctAk2TBxUO1j9HIQUZvT7MHrfKJ4kF95IJe7tH01ErtxVoA5TLiw+ejKPH6/cWM5N8yghPFeQpwr+gDzYiHWAq91iZ8vpjzF3LBaQSo6Umz9fg==","layer_level":1},{"id":"a92a9b33-fbe5-4904-8b6c-f40844d999bd","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"服务器实现","description":"network-server","prompt":"开发NioServer的架构与实现文档。详细说明服务器的线程模型，包括NioWorker事件循环、WorkerThread调度机制和IoWorkerQueue任务分发策略。解释NioServerConfig中的关键参数如worker线程数、队列容量和空闲超时设置。描述请求处理流程：从Selector事件分发到ReqProcessor执行业务逻辑。阐述服务器如何处理高并发连接、连接限流和资源隔离。提供性能调优建议，如合理配置worker线程池大小。结合RaftServer的实际集成，说明网络层如何将请求路由到对应的RaftGroup进行处理。","parent_id":"9a176743-6e3c-46d0-a3df-d292836b2d5f","order":1,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/net/NioServer.java,client/src/main/java/com/github/dtprj/dongting/net/NioServerConfig.java,client/src/main/java/com/github/dtprj/dongting/net/NioWorker.java,client/src/main/java/com/github/dtprj/dongting/net/WorkerThread.java,client/src/main/java/com/github/dtprj/dongting/net/ReqProcessor.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:23.41569+08:00","gmt_modified":"2025-09-19T19:59:18.784824+08:00","raw_data":"WikiEncrypted:y/pCTkp4paaDLjkncdknTh5Pye47V9/EEZfpAPquT6MU/MU+g4O8qjf6jlBiFNAW6ooPy+JPtDbusPncEzzHPhfQ8wUFet9KF55Ue/olx3eTlrwMPEh9qRW2PPEzNAeA6GnikTQb90e9w/Ix5YoX5QWaH7UL7YIJexPbWm/5IJB36uFnWdaTSUZiffBOfjL7ZLN9QVVC5oKXc2wf1Q6CaoocexK18l8REFpxFehJwYIwnTjaeZoNMmqDpgxKyDsTWMj6a3efAwK4D6G+AEUsy1r7964dflLD5VfmFBHqHtFnUrO7a7Lxt/GOqOwtJCeIc2EV1XDOQEO/ymh5Ip83vHdh4llVxIf6Hk16/vDTfh3TpLbFS9DapNFcAK+06LWdV+LhvX1SxgYeHxLAdpk3+0wWPBs0I0hfKVdrY/xOfvxjwW3dIZzQ4dRIDIYReW6cTQZg9q52wsKOuubyOfBpTKPzAvFGTxJzevvMj2uXA+gtHvR29vN5khBIvO2qK0HAcl+iQDGRjOQMXPDJCNvkp3DNKVmszRqc5WyWNut9IN7iWGUPyX+bn8uyRtjLnEz/C4kegtnHb5YU9UE+UrunVcmXcO9hGh+DjKkaAlNWZM2yXJzBsinRIv8SYHeJ91+bfVDBkBNTp7m2eS6snHKs1cQFKIxiNoD+ZuPzkqj1DEq2mnA9NJIW3Z3xKglI8bNzPH3C+Hn7h2a4bmuxfhdHTPcNyaRsW9EEAwwCfGJif6b7cJg8ouRMx7zJ7saVP/Su+AER8F9C6EEBe+v4iEcLsMdtf9bIDDy5Eo/VxGnq9OMobc63oTwnqQ6rPjL5y2Vd/ey82yA1biuUuMCx9/3rn9cWLsV2HVBXmdc9uGywk1h+sfFGQOhJXBn3hKRHmdQGaM6u1GQxyFO/XX3HPtAu0Uib35rYC8pDrwzJV2ytG1gf+tCnWgkhInXnT0E/GRRJv468K1+7UpukbgLuwO0PhCT4UP0cAqJ7PEbXcIrRH3Xt7zpL96guPrNyh3IIQ1x83NUFSbD2kTrCH+IDngu2fiu9JwndEQAldlkez0C5SHyzI/a2qSLnecRiniCB5DIqyaO2/obQ47+Orniq4Fs+r7/XBj5yjdL/KAcPmKJtUE+mpQJn8N3oF6K4aasZ0EP3UuZl0fpQwdxaEJ4O812z8MVNMoXt1PTTagYcZWkKhamepkCgzmWkvd/lQSTxu8G6ZkAkJFB+WCYHdPNMI0HoZYM5Cg6eICwfZb2jfAtii2TxoFO+6SAESlD4VvCL8HhRBQJH1YmRG0ibK/bief3FbF3P1IXniPjyRTS3KUgWV7igFMAcmBlxIvKv+HJFGxDWa1NQEArZsdHfxKAOCo0BKI+h5QN4SEfKBSpQaam+fzSlDPuP96sX88WBQyapaWZxRwszp1oad3AFNg4GMuMvh9ouVdu0puDeMTJ8+x85xfKb9qNRwsBv8ca66lEmBRLhASyDVq2j9m7vAkJKZUOc0e3DPP7PgTCnuV35xs2ZPqjHffUstnk7+5u5sufZd37Gjj/nWtG5XGz81yy1FlS0FbgEK//BdAh3ySXvW5NRmK55rKx1RZBNEkaI3neAgxsFtGCojU+Q6mx0Z45/jW8X5AJAXQitmsJl/uoMFslpGpw=","layer_level":1},{"id":"f11df69d-9527-4afe-a2bf-624ba9e789f6","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"基准测试方法","description":"benchmark-testing","prompt":"开发基准测试方法的详细指南。介绍如何使用benchmark模块中的IoTest等测试类进行性能评估，说明BenchBase作为基准测试基类的作用与扩展方式。解释SimplePerfCallback和PrometheusPerfCallback在性能数据收集中的用途。指导用户如何配置和运行基准测试，解读吞吐量、延迟等关键指标。提供编写自定义性能测试用例的步骤和最佳实践，包括测试环境准备、预热策略、结果统计等。强调测试结果的可重复性和准确性保障措施。","parent_id":"c3a3445b-9a96-4deb-b04d-e6dfc0c51c86","order":1,"progress_status":"completed","dependent_files":"benchmark/src/main/java/com/github/dtprj/dongting/bench/io/IoTest.java,benchmark/src/main/java/com/github/dtprj/dongting/bench/common/BenchBase.java,benchmark/src/main/java/com/github/dtprj/dongting/bench/common/SimplePerfCallback.java,benchmark/pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:26.423216+08:00","gmt_modified":"2025-09-19T19:59:25.54226+08:00","raw_data":"WikiEncrypted:85KkSGz/gXGPrX/T7W7Vf2VMa0ci9eeW/6yC+4TLSi/B0VIKVE10PNpHYjF/N2kdqT4PSaAxqt/QAgUErXdIprycKF89S/0rGc8UJQpL685FzKWcg3poqmSY8JxayZNuU8k/CoeuXDXNNT4CqvlMfHtqWC5clfICRo7E6SONHS00vSKwoe3/hpqy3g16JqUc4cVGNcZ1UU2eboK0QvynD32nGyaAeSquUkMFeJmpwpbz+dfv5YHpvyd0IMscuchWppCtRopqmjN/bxF5owBnMMAOltlebPeEiKIM6UOpVyCuy/oStzPm8HT6fD1m1vQUqFG+dt+I3zn7qcg9o4ys1Zr5fm9PaoAkygFH7vB2kx+sITDZXvpZz9m7FxoEplRuBky0xc2KJqxEPJyvcF2JDJSl26+jZgE6xljKY22qoo8xcoxKiy/Jx7iHU6cJUhpsW9wq/MIC03yax49LLvuFwfqVS2WRt4yERFo+2vjDBKJ9qOC7vb9OaUStSy5StMCTqUjG03Y+RWUtVieOn/ndJOzd6LNbhzM0XWDguxPgMHql4fJkJLfhGoR0B90qiRHTqcrNhWyai1xtMrAjOm21W7c1mnP1XDIYgSidLBBtwlOrK0YYPPepLXCpoiLfU4BKCA79kVtLsokbbYaHnibW09ENN2nfYDo50Oz0hXOTQIFhDc+5Ncb9JnMW/Cg4KrKN8MvmKW1yepr3wHqIQUeFo7wEJSUxtNysv4C9ovuOgfaEPdSS1pXIS7xgv4zt6Sf2dHZvjobZk6R42L1FLtle/+tbNKS838LQfwPUuexQU2qOrKkSZAbDXQBcxxDwss6CLJPcZEOkxVGsfRYmOUnkotQ2AF+dq5ACQBi6NX7sLp68F5G1s2tuF5JkFzsvBGiBBEVybZjtxRJtpF0qg/vAWz7WGi53dXOizmlfg1HzCBOIOtUtLzbquxGRYmuSzmpGfDRUM5ipDGmLEWnRWJ9n5pmcrtCRnVIDS5RYwzMOk8oWAgpveEETOEwCZ/KsZYKFOF0qzBYdro8fXXWe9MBe1eYnGP7PsY7mqs0x00F8k0QoDaU8P/iYQnvdJIiR/rekHmecJZJlLxCYoevLdcckNuITRvhVd5Rzg4VjV3pt+anREK5cdaztW8cwc1vXbQ/lTSXsliDhoM6siYCMrAcTKyqqr6vWtu+Gglj4G4ad3gLTA3RGAkGljOmEmc519PZARxxUOAK+wfdxSd5t6zybbxjSJu6pNbu336D5o8rHKivEbO5RIdIfyea2qvp6KCHdUAWFTUqqsIo7uj19QKSpFMsDzLj0iFPYtM0DrymZe+eYx2hUX5nE3/nSRfPYJidehm+1SAYftYMF1mvPETuF5oTPmXszVjgjyT6auYx1yoLPkSU+RsMBcZLG7qV67VJf","layer_level":1},{"id":"f2062bfe-177a-4c7d-86ef-cea505445225","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"自定义日志存储","description":"custom-log-storage","prompt":"开发RaftLog接口的定制实现文档。详细解析RaftLog接口中init、append、truncateTail、openIterator、tryFindMatchPos等关键方法的技术契约与行为规范。说明日志项(LogItem)的数据结构及其序列化要求。提供基于文件系统、内存数据库或外部存储（如RocksDB）的自定义日志存储实现示例。阐述日志压缩、截断策略与性能考量，包括markTruncateByIndex和markTruncateByTimestamp的正确使用方式。解释beginInstall和finishInstall在快照安装过程中的作用。指导开发者如何保证日志持久性、一致性与恢复正确性，并与RAFT协议状态机协同工作。","parent_id":"1c49d439-8342-4415-b0f0-a6fd50fd63d6","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/store/RaftLog.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:43.88084+08:00","gmt_modified":"2025-09-19T20:00:59.688096+08:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokS2KjZY5s0smj2b1UFDW21Ha56xxuw9Up94BU7UI6KKvtMIq5890heSm2NxgvSEKk2k1h4QU09ooCa9rlQQaDKdvVzWX3RyynLL7JdX//OM72bTEC8Rj4aTgP/zlmLKo13FiQNiyCk1TTd3/fNIcKT95z4CgsJLTeFRR1ChXsjua6zIYVBLBjRjj/Hx5pqwXTGLszPtv9TgXJ73En03sHsxTNc0XwmfcE+WyFrFC18aTQ0mpIXTIy28M+4Vyy5V48Iy/cT/wCuVbVgKOO0+mHhwXKiH2sVVbBW6pbqL57JZ146MwiDfCzBr6JXK9FdXcnuDN+OqMo27/329D6K+ik2JiL3szOEhQUuQGFDCX73L3aaUgYHZjZLmMqJp70FD+l+a9BllL9+x1K9YpmG8ySizezf+gn6qiNdqpe1szNnfu1rDcczB2XbcJxpvzWnvNX/DPBoE1C5J0CMTjoWhn9D3h8JMYlJLMnx88pJnUDQ2Uno8RoY7lSc3v/Jw+zCwlLdX+plescKKUdKwuQtIyQtXcktIbBVwwbYE1lK/WV+6EKTBJ59QQoQJUx8GFCz9HigVStrIint9Bq8j3xNkuBL/+HBFxSbBDIaG8MAeCSKzCwxOw9Xu24CqAW7rG/1ndStgQpg63TGdwI0xCkFPsT3Ygu1NXjGZSK7UPW56wnPOwAkG/QNr1jpFXgelqTU/x4HL606hsMlFHWNErsZKYjN6saN6In07CPlh/HRO4szOMuzC3lNX8/V38HurL0dSL9qGhnNl8EG8+3TfZywYtpdQq4O+ozvQCwvSumgjErlWA6ZBEvQXzYqjdhYEJj7e4LHR/jqT9GzJZ1VYHqgeJ2XgY2FUYe4u9j9wyO3I3fbtlASdmqDD2EtPTE0yhueVBnpZzuo3w12JEJhqS5VQJfMF1Nk/Am3VJgiMjcrfIYHgcxZYBnaDKkhO//IIWS/VOiy8FjyM5Mfb7K8Ju/ZU79LsNCJvpb/EdGbz6O437cwKD8DyyZKDbXGKUzZw74M81lKpUFkZdAZrHgKFiq7JQEMbt0kb1OwWoktqtWmPXgxCQytY9x/SL16h2lubRVCx3wKRiOxtpByRbYzvj87mGmQM6ZUihWYO6hSp3NWWS12U2rFVidr34hi8X2tZo+fGoYZbFb7K87pACozCq3oRAVv0LvC7wwBsGJXc2ZWukqjyZybyb3L2ZMhmvI+El7pnVqsvP4aAZrc5TKMJb74I7EHA=","layer_level":1},{"id":"22749ea0-09a6-40c4-9d62-bbe99f9b1234","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"线性一致性读","description":"linear-consistency","prompt":"深入解析dongting如何实现线性一致性读（Linearizable Read）。基于开发日志中的设计思想，解释其通过Leader Lease机制或Read-Index流程确保读取到最新已提交数据的原理。说明在RaftServer处理读请求时，如何通过RaftPing和心跳机制验证自身领导权的有效性，防止过时的Leader提供服务。描述客户端发起线性一致性读的完整流程，包括请求的标记、在Raft组内的处理以及响应的返回。对比普通读和线性一致性读的性能开销，并提供配置建议。结合代码说明相关RPC消息（如RAFT_PING）的交互过程，以及系统如何在高可用和强一致性之间取得平衡。","parent_id":"06ceb7fe-4daa-40df-bcdd-c4895064c77e","order":1,"progress_status":"completed","dependent_files":"devlogs/2023_07_25_再论线性一致性.md,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServer.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/AppendReq.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/VoteReq.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:44.633797+08:00","gmt_modified":"2025-09-19T20:00:58.177291+08:00","raw_data":"WikiEncrypted:vCTvL3JA3DBctyfcF+rL2TNMigpxO+c+7U+fk7x2USFiMukF0Cdv3nHZ7aHz4EOaYnsYBxKPERqsr7ibfc/KVb3IJKv7Yb4pcFr3vsXSY+Zb5sK+B1VbTmTi9Yg0w1HoNzK5wA2qGj8o1nV9sdFdsXXeapPBtMe+SzTe2oErjHFcyMe64hIcbRMzawasv23Dz+6sg/j6fjc01kSGVQIDb2ulQxpNMN/hyyeB1LMPC1Q9qfZsKZKU9nas54ZIXrEF4ZxsaHVk4+ca1V27ZTsdjBb8V/ZCkAZo41ifl1wLotNhg1f1QidmimoVQodfzg+jymNcSOKxqVVOPNWA1QkRiDIrd1BDad86l918rTWFr/+pMOHl23hg50ezBpNDrdYLGv+8qk25z09mM7jjLFw1a48smdUfpx2NTO4C2zMVS0LDLDuKXSGc5vH/Z2inf2IQWqf6KzvgbSvIuKZ+yGVK4Xtq3Wv0doPNenhpt33wWVig5QGK8dX6DlnRsvb9Vesn9bUTBoZQIsZhmLN2OW5t7cExWCh0hkRntIa189ZgU9vnR9KL1Qm61r/s07oPWXGyzmNUoC7bvSwba5H+mFn5WuN9cA0BMZl9y8aLwowgdeLZb4qCIzD4kBS7ls8xWNpFPxeamXYugs3A0YNNXcqji8Kc1PXoxnfUVUbL3gqaT4XEhY2qIcBnn/c6e3+LUz9DuxKBxsR82B7vYAvkeXg8YokTs5pGQmBqtDZ21zUtQGQUJoIcq25VeSkYrWMsdC20QbAz2Fwriyx+VglQ8hzMh/0HGQ0bSGdiqvDVE1NioS2yjrdGQbSJy4FTaGVom9edgMYdACgsDZg0yzzhJ7tmPWQ5cwpkgff5cZC94GQOdTgrJd7Pz17B0OF+gt0n69703NtYfAonvzMx5kHhV35ucFHjKgdQp0UOHIk4cfhUtzbZbLqyHUIf6h2oUmbTy6QIgg878nReqP7fQ/pIlSIjTaA5k/pNi3Omfi2FWO0uxYZJm0teCDAkQJ2ThwVYN6sfe9pteeHTH+jkH0HAOyExegiO6/qKyot8Pav2PI9i8Dx+f2THNxNoWZRnPwTo1cA4tnqQNHUfdOU3yh2PUG0U3NNRV1YumRqS+k+A6b7HhcoAyZc67OOHBxRkoyG8Q1DQ5v2CTCS2jDYc0tS80GLfwyC21y+guy7UYni1R7UKMYrBKH4lnIED6tByZb3Ij29PkGfRAF/yqJRjxk9tSywPrDgHth3PGUUJe+I3LVM2Ed0lZYplWSmoYvB2ukimbVRQ5ZvXojYJbIyty//Fb6PF5tecFD417l08JE0cv68r+vBYvTFSG0Iw2FKgI7truYGoyk3XL+4F6wYe5b0gp32Uj8Ucd2udPmlDRI7CEkumpteOZMCzek68wWQI0zEdSSMgY4RbePTUHX3/eXCcXhqhjjKOAGX8SOC+aP7ZGyijYe7qO05Zjv2XQTGBdCnHeqIVYhHoi/5l2KsGuDdHuQYiTW4YfIs8Z9ehg+7HkUDJT/O5FSE5PWPXo/z8m26xl3eDOT6o76Y3YIbSY9DC2JQ9hEfQD5UmJuGY1H3wZFucIXstN3CB83xuV+ZSG1KJ5C+pR/huo6fo5/V8pHEo1j3t0dZk+V7b3Vw1smP83xiUBEeoTpodrF/UOH3nQpney1pVuHMtxghaYBiBmOkAOro17IndhOz9o+IVeuvGDPlfgds=","layer_level":1},{"id":"be5c41a9-64e5-4e38-a358-994d6186fa63","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"性能调优指南","description":"performance-tuning","prompt":"开发性能调优的综合性指南。深入分析线程模型文档中描述的Fiber调度机制，指导用户如何配置FiberGroup大小以匹配CPU核心数。解释对象池（如ByteBufferPool）的配置参数（初始大小、最大容量）对GC压力和吞吐量的影响。提供RAFT相关参数调优建议，如心跳间隔、选举超时时间。包含基准测试方法论，指导用户使用benchmark模块进行性能验证，并根据实际负载调整参数。","parent_id":"91d17db4-e20d-4dc5-b6de-47fc7ef0e1fe","order":1,"progress_status":"completed","dependent_files":"devlogs/2023_07_26_dongting线程模型.txt,devlogs/2023_07_28_dongting的对象池.txt,client/src/main/java/com/github/dtprj/dongting/buf/ByteBufferPool.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberGroup.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:02.036259+08:00","gmt_modified":"2025-09-19T20:02:27.424765+08:00","raw_data":"WikiEncrypted:9uOBpMbLX4DyZqW4us3Wm3jRF/hxodOy4E5yC98jNVvCQzAkylIowh1uCBS406xhx5EKGcytzBzWTIIlurnlQgPgy3t3bxjOtEV+5ZAa0ss2FQ8HFvMfsOz1BS1p+2hHxK+K6PyhJMC9i6WTUZEOJzbtTQYEranHh5Ta6INczEjF1JMYgu9MUbO6T/IDtnFtb6WDursAzFPBBWILixxyWsgtO9TBYfJdU8GJ0WP8/ehRDKnzT+gqITUA3nksnnYpyhX/fnPV/jwOPTZ+JhjrbLtB2zabmBOG7pJ7KW6dNG6SEklDi8gxmfJl+jqJNrdEcBP9CnYgHZE1/AmAB4koS677Kux/a/uwf6xDcrMMagTtHfTMi1MIEOHoCIJXfXgfbSJJh8NtB9jjew3AAit7wTL7a6IMyE6aiKtBz+YU/AsCroBQXFlvVd5899CDWNYpjx59MHGT+agzpGp5xPBXDJHtUHzFYASz8jsVW5X2Y4aTrTh0Qjr5qINtW1AE5t0ryeL46lR+VjRCbdmYTKqZ2zl+uXsMjc8Sp/HY9+iF9u3S4VzVbbGUrZtGkqM1qGokdR3xN2TF0aaRzEuuj267XO/vrL967+MJheXyD3SiscWdH4euLLQxLSBpyW4IoIeTdFPe2Ov6vVvyjC9vT2NFEua7yKDlZB+eE4xMWMFxcKGLjLL5edeKuRQ3bHQsHh0zMl1EdezpSdzT1TP8Ix5qfEnP1Ot+dj0DOVm0CFbLpRalZvR5yZBSkbig/ZWXiGM9uEaS1z0voTsxaGqehxnjPA9/LKxv0VfpZ6h/YRF/VBs9Nvp+ZVU6YjYrMqkaXgWX1uZGdfTSfR7f2QJsbpUuHghlQdOAuNJZ0/I3iLOiBYvOlkrWorUdD9jnhMbfh7xDt3Hi8ukaMG3NPUI4yUXmiCkq4pe1pK103Vt5sAr106Q5TCY9rpnBsXbVJRn66IDcNEqyj3INcTJBYdoTFuS+i5term++aOBa/zAZ9W1kD5f2vlWFT/1d3ch8jt10J6ixNR0cTGycM1HLbUX+oy0hhEnC4/u0E7xJ+ve0+nZ4ruPOelI+CUwYq7GNFZpCUuugOdC2FawJu7+7JnZHfpENVvaZFS+UAza5sthM+vd6G9A+XuTtaofGnjNnSLM57MqTJmYE6HaUtwo8EFeFY5Z0YKasud8sEDNvVf+rO2I3ZNErsWuSxRshh1r0dJzy1B7Z+vfze9dHA1D+iaW4V1x35c6s7RPmjEUTlATfnAiMGpFelWYvTReOKHCEQlawarCg+nL/qp/KScC0VmlCUp7Zit+rVY6RfwWE4m0jKvZv2FMjLMMmqvwAuAn6xaC9l6bL","layer_level":1},{"id":"02d97c2c-2ca6-4b6c-8551-df28572a909f","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"DtKV API","description":"api-reference-dtkv","prompt":"开发DtKV状态机类的完整API文档。详细阐述其实现StateMachine接口的核心方法exec、installSnapshot、takeSnapshot的调用时机与业务逻辑。说明BIZ_TYPE常量（如BIZ_TYPE_PUT、BIZ_TYPE_CAS）与RAFT日志类型的映射关系。解释get、batchGet、list等leaseRead读操作的线性一致性保证机制及与RAFT索引的关联。描述TTL过期处理流程（expire方法）如何通过RaftCallback实现可靠的任务重试。说明构造函数中KvConfig参数对执行器（useSeparateExecutor）和Watch机制的影响，并提供线程安全的使用指导。","parent_id":"344457c9-a5dc-4d36-a481-caff6dbe3ee5","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/DtKV.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:09.573538+08:00","gmt_modified":"2025-09-19T20:02:33.173772+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgzace420ddHYtIivB6cZS3JJ3nrAeZI1l4p0t1U248uGec5R9vlKsZ21yqxlvLZq9khKBkDGKom2EHcAEy14i8SPe9zZx1m6lJqT6jIdZMEr552fYZqVcJNQZmmGWC3G9/gIItXFjgqlreCXjsKCpzi9a1a38oeEEhQ60vXs1c+iX0S3K7le+P+z3NaOBx7IeHNKNyT+bbKjc3XA7QXfIUJZDJ0AD4m61LBoTFm2no2LkN1Eh4x/X+3kGV0mRprQMolzwF7G9R6R2hEoJ3Byy1a32kdvJpMh4EEummD9WYoi4hIB8E+9q3yhlLYvtyR1m48gFajaXzmg1+BWdB1/123lUznboWf1xm+pGLnS7vXScomPDYCtscQHSrqB4gsjp1Gld+6NC8w2OHaXEFxv1FiXtLKq41WojA4O1Yte93a/N0pK/+Iuuaz7pirT9SKUT4dfBIwK+PfOZZ40q0RR1nbJ5nG+WVEpHdBzUDHNTTm6czBkSz/BFQxehUQ/JUBOXYG4kdDytqMxElIYJ9cf6GXBV2sMpiaTQbT7v0FORpQWSLIecXH0mePLmdDpXVnp4d7WtV8nF4xNwNFNCUIOeKFLrccEztPl5iGfNYqqhsNqotR0fvrDG3huZ/zm9rprPdQRTriXXUGqJymn3SbiQl8oxWJ0SbMf6xvWlaggm7FU1XzhD/TMNPWV/J9ItOZ9CX1hqajd4K6AA/TmKN4zaAi3pAfxF2l8UvR6eZLtx45PnjT2kZrr1oWsh/lkN24pDiP238RJpezQa9LEcP8NG1mROjolFrYZMa7GPcy2/WC9fNFVYxkmjUKOdx0Eh921/1SEu+YXXUbfkyX6EIh3+MMvMehbrippLHSDgdlf5W2w113kfSAN+OcykmFpunjH7Y64HRECWHdfo7z4kJFNYv008th0nqNiGJmdJt0agHy/4UTLgwPBHZf9sUCeiEQLC92e0YFonXJl3jIw5bFelLoEuv1gtgqYus+qegWoavh3ykTI9LJM34KgKrNyho5wBCL1BN6mOp+RcZzt/2Qn/AUZWBmB/PS80L9uiKtro9sOWUMDiKiJsH1mnx8bTixxPWHUDOvWCAEPWj7QJHLUexxYJt9PCvmQYsSgB4IAKrfP/7gMbFSmpItzEwx4+OzPpxzvsSvYPuwbs2n1cWCIcNU=","layer_level":1},{"id":"49e70752-e72e-411c-9ae7-a2d9003e43e3","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"Fiber组调度策略","description":"fiber-group-scheduling","prompt":"开发FiberGroup调度策略的详细内容。全面解释FiberGroup如何作为Fiber的容器和调度单元，管理其内部Fiber的生命周期和执行顺序。深入分析三级就绪队列（readyFibers、readyFibersNextRound1、readyFibersNextRound2）的设计原理和调度优势，说明不同优先级队列的使用场景。文档化tryMakeFiberReady方法如何根据roundInfo和signalCountInEachRound决定Fiber的调度位置。详细描述GroupRunnerFiberFrame如何驱动整个FiberGroup的执行流程，以及sysChannel在系统级通信中的作用。提供FiberGroup与Dispatcher协同工作的时序图和状态转换说明。","parent_id":"26e5eba7-e2ae-48e6-9a21-9fc2c11eab37","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/FiberGroup.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:28.551843+08:00","gmt_modified":"2025-09-19T20:21:48.014356+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIoJg9U3IRlQMKztRU7RKO6ovx5kf2Uq8zV0yU2Ein9a4szucLRXbxJla07jm+/LaGp8i2Md1HbcHSS1k6IlsRDVvU5U2Zqhhjf9kty1Lp3ZUJT3H1zR3nnT74tCoiU4rHbyPGmsKQwd5Cdm38MNYvQbDmSOXje4J7zPrFqWrwFxo0H0hFFvG2Wztl1ppmoP2+NjqrGO8yxv4g90FqmgEzm9pCiuF+FBuzuKbdroqCjUot/sSgNVj127dHjeof9ZSQ3oxKzh1LnMDd6cOktJOXXQBICxKaMc2Xq/rBe1eU1s5uUtV9iTxqSP4EAXemTROCC53yFi0AhmpgORkezXrtmtijL25tuD4Gk76a3OHCldNGwZ4Ncxf4D98NPMAjCItPl7zuTlfeLoTfpPnZ5d4zKkGP0ZD/vwNI1j2dePNyw6foClTmoyseAike8l9jbY0aTWExjiFUG0z1n9SbGpnqvzfsrvfm+08pUrlS9zdCm4xyU88V1YmSPyb2CTdjDvmq6QmnFk1TQfLyJ/hWmfjAQYG5hkS3lVkP4HS9bipF9QLpi5zrM5qW3TotYibuW1TIea6Mu1mEU18ZVa2mTPTBujoRmhfpzC6rwowoJCWjZ5GGGoIfkkCCUxih+EtyANHPHwj9DOh1tyEBqTzPmTHKxjjE2sG5pNaq1L+FV8ZbQ1Uj0WQMfwyX/Je0qQNnkN+uBgTjSPqz0KQIrPg3OKFiAaoXs6AVNp/cFeCzOXXbAo/TkLOJ7T2gSkEYwrt00AYieRi8ONH/PmrGMKfMxQ8jJynzpshccHcFjCV8vExu2xXIoZy1jvI8C6trrFiWqaMx3gly2R+L9iB875BamtWnV+j+2EYQxn7kydzJ+YEvRLgz2m+4h/57apfuWmyzjuyYTXQ24Y19LLUT3Wu1gIGxc2NKVOtYiE5JaenVf16WURwHOQDwiCVBuuTUBo/81htKCSQ7D8Zryq8DOh5235N/l2h+HfhRIMf2xGZz+zCfQ6vllHUEujsLEDPZnSsIlGHABHghMNAmVZWsEetl1XJ2fPXjYdAKaz4ACNw8jfdPUYxefzKRKdzsF/kkshQYHcsqWqRBaHMgQp/62ZI+5a38dJSOF2OzRhNb9ORn+PYXOwMsPTm5z+bijXVlajryCr+56rEkMQol16FETpzbtcQ6K2imARsNdoBeGzuepzJDrpbgKl4ghXHsDn76OGZgKOt4jTJgRs2IvW6OuthgaKDfWc+8fo6cd7HQm4XtK1lTm8m7SRh/kGtlamYKUkOprE2pFTkJvuRNMBQf2O3PQuqgIYCJoc5O0A4VVpNQ9danU5o","layer_level":2},{"id":"bde40ddd-de3a-4178-a86a-738b6214f90e","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"集群模式示例","description":"examples-cluster","prompt":"详细描述集群模式示例的实现和使用方法。说明如何启动三个Raft节点构成高可用集群，演示Leader选举、日志复制等核心RAFT行为。解释DemoClient如何连接集群并进行数据读写，ChangeLeader工具如何手动触发领导权变更。分析PeriodPutClient实现周期性写入的逻辑。提供完整的启动顺序、网络配置要求和故障恢复测试步骤，帮助用户掌握多节点部署的实际操作。","parent_id":"7a2e7732-d457-4418-a948-36e0a2983324","order":1,"progress_status":"completed","dependent_files":"demos/cluster/DemoServer1.java,demos/cluster/DemoServer2.java,demos/cluster/DemoServer3.java,demos/cluster/DemoClient.java,demos/cluster/ChangeLeader.java,demos/cluster/PeriodPutClient.java,demos/cluster/GroupId.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:31.034879+08:00","gmt_modified":"2025-09-19T20:04:05.749546+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbSfFOyHVp86ksa5ZKTDEXZOcN6KsaQGpypXS8Howpu1FaxsIinlGev3vt6cC63Miy7oPuiO1w8/iDnuLWUHO40zESGvCUDirOECCz6sxwc3dBDF3gwPrigjkrXosDJjUJjxqU86saFHUlZ9CrYqNfjHylgViniUv6xDZfwC7VGuPbES8alCd5CF+5ryJiXBZf3HY+SPV34mfVM75k2g57/v4tT4x+RZ6RHYq/dgpJZ2kj+eqjfw4Xhq4N9cYvWICbgjj0ZMiNRdjP85ZvO67OnidtoR3EIV68OShpc5ZB/iYt/kHaT/3xrD26P36Zz//0TJ0NmWJfvbeoawlVDyxc04T2RqYPqb08I0pADpe1coBGpmL78VETByN+wQ6OZ8Zt0NIgR+NdaTLcEiknDeNJTj0TqbgYkT0bZXlY+E7mQ/jbVAb+UTMFgElRCDUbPlc1pubFEq71ZLRSalokXh9nR65jnJ4P+zMDmAQY1FlB4BDrwjRAA3SxyWsG96GN77B1zf7UKCXFB1njA0+0IDjxotunAp8dQmenn9YOTiqNhWU+b+Npr4LOtedXkkJjgRCrapIVq4pE4ampqYA3dAq5RldXY0FtEgrnLSi5Rb3n9mWK5SCFnly+AeMjc1n3giWroj6V8w922qh8hS2qgWB9pfrDR972Pq1zqDtmQ9roJP9BzZD1VxgV27Uw8BSZ+3KkDxwT/z5J8n/+i74QqDtnHrrMKhEt8rGvIkSYdi8HpaWz3m2CZHhtXf++N7BQIOGexHcxEQ48fnzcUeNKRxhSmO2mYO0JL5Apvyn/gQz8LqYy6OC7DFk8vXdQeowMC2vCg6/Hy29nD0lZkQKxnKsgALp8s1/7q1LPEvD6/LwQLxm/tvCJTflTJS847TyMgDn/vpvvJftAALSAO24dyAvYM+FsGbkYwz6P+tck0lvoaCoPpNJ5a4aT7OF3Nk2expKIFu5xWpZkxnQCVCf/ukrf290C6xIuH+9Qkj3JWc7UkFEFgbHz8hI9MO3FOTMTmXx7pobv65Xe0LzrTz5+kIIo/RtS5+Q0Ev7o6ywDGMzCLgHTpz8LOb6Pt8227bMZ0lK4DG7qd/LkOvoXRLTL+OuSYJstwmMZN+hVQ94K1d/ZvCpYuoTHsobM/Z1YXpt7NIwLnq20bAZU/JDdgWdhMYeDQXPMyB1aIv9ncC484If9Kg0MHXjdiCuigENwzf7pvA2/JbJ9PgRXf8Wl7jkVjTRDer8971hWH8WRRFtC5kF6ESvP0lrtXg1/KRtqbU5uNIautwF1wAZD+KltThYpRys0DcdLaNCX3sn/zcZUTYBAo01","layer_level":1},{"id":"4be36aa1-8e78-45a7-a7af-b0f36f627e98","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"读写锁","description":"fiber-read-write-lock","prompt":"开发FiberReadLock的全面文档。详细阐述读写锁的设计理念及其在高并发读场景下的性能优势。解释FiberReadLock与FiberLock的组合关系，说明其如何通过持有写锁引用来实现读写互斥。深入分析读锁的获取（lock、tryLock）和释放（unlock）机制，特别是shouldWait判断条件的实现逻辑。文档化读锁的重入特性及持有计数管理。提供读写锁使用的典型场景示例，如缓存系统、配置管理等，并对比纯互斥锁的性能差异。说明在Fiber协程模型中使用读写锁的注意事项，包括锁升级/降级的限制和潜在的饥饿问题。","parent_id":"71615119-fda6-4b59-a7e0-ebd58e14bef0","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/FiberReadLock.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:45.349478+08:00","gmt_modified":"2025-09-19T20:22:54.966279+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIrYLgzwOyZPEB2On6t6hcbBiUnPeOLQcA/grF3DtkEWHUgTBpuM0F5oDcOs8FGWHKbp0s3g02u1TmsbnCy6xewW8/4wFCbTWsnYVVIkjmh1fOU5dPMSJwRtwMVo+JDtLlbMkA3JL9Zv8DpEEQl907a7PVdT7qgDak18DtzXpASdKppH/IkpLJqE4a8I6wkq8kPUHtMUo3GlO3pc62lp5qLJMDqQO66i+voDQ53W2rY5WlTzQx9Fd63LBHbE3d/ZXZzA2ZAOmrb/h6Pi8TkDDmFYAzInaiH+LncrGcZyMBSotWTEplslfgWdB1bsd6VeSfAc3BaDxaZ7ODqSTp1SLzOTX1Kb2/piXOk8evpFdVoZT+YZXVz45sFhdJnVHo4BwLGZxQKXEElDQn85krNgj0XwNlUBIPmvnJQUsLMpF6yukrNj7EYHH32nxqwAfHBC4WcY4G3hH2V7TEmVYF1EL6RqGBrYkbmyIx43immLAoJlhpANgH3z4PMfMg84asBm1j2lN7sDGT3OOhejsBiRU7XsCJam2ckO1xBdC3iGOkN6UNJ0ivGN0yjvvc7sgPfMi/qZIgLXFEorma2tlk2jnx7ncItTKJWV80KL7qnkD6SJNx6OHybI8FmFP4ZmvtMaW3RZpCwyjsR4ma4X5Uk+TSB8OGvIchd1SxqAqnevQ5lpJdllutnT+XNAX0erRD8vvwuPiaIuEMb+k6nOWQsWlFONnuvrnxZWhVox6LcmXhty1i1ir89CpNszeNg9UwxBJd6wMg8vGV46TJM0QgCV+tLuwUiDi+rx6RvK5y2oGmu/ieqweU0QK6CrMW9RKihXyf54FFBgTmSr4H7X1wjftNL0Ra9i8vDOvqF4mNA9kt0A0nA3vyYEzZfXNTtzFZ5S5PO3xjUZsDrYnjucZFOVu1uOHLayHkKOx44gJV8GoKuimLbZFHbPKhutP5fwz+8bqhm3jKdAuKy348foSN78dTMiUZZ9kPtdVju04GFIgZKqEwvviQX367JdxPYCjKj+xPLxOmoC88kyqFuaLNb0CPhOyN7kDUG+5JWB5KX/n81I7t/7m1RUgmVCKgRDPF04mgIJoa932i+fmBenuI0QhwWP1kGv/W63x905BpLkBbQgiOzX90WmtkSWd8Lr71NWlzKiPLhtFRP0QAQyuDvUHnNIJ0erAXI/LJnEmYmto/Zad","layer_level":2},{"id":"96b82b41-4da3-4dd9-914d-ac71fb4085cc","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"TTL更新机制","description":"ttl-update-mechanism","prompt":"深入解析TTL更新功能的实现细节，重点分析updateTtl方法在KV条目更新时的处理流程。说明该方法的幂等性设计原则及其在快照恢复场景下的重要性。解释如何安全移除旧的TtlInfo并插入新的过期条目，以及为何需要比较raftIndex来避免重复处理。描述addNodeTtlAndAddToQueue方法在更新场景中的行为，并说明task.signal()调用对调度器的唤醒作用。","parent_id":"8053381a-eb74-45a9-9c28-32af4c030767","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:52.986899+08:00","gmt_modified":"2025-09-19T20:23:07.171431+08:00","raw_data":"WikiEncrypted:aXcDD6rZGXSo3qriZDMR07H0EAPg6cCh37yGxaHMHO8oiHm0go47oKojlCEc2NhWhY/t3Eq3RsXRm+77HLPdspp5LDnbFa6Tp4U1haQgFcz+Wv85zHXHku8VmY18raE2o2GZ962/WaQ3s+CSkhN5qIbgfphJRWEPXp3wEWKZATXy1Z6WR8j/CMdpzy5zVlir/v3FRTryqCe8JKkyAXPxJZsnJUb6ljPh86LZYQ46Sl6APpKBjtWMp0gXXYBMI6/yF6maC1dhuHOkjL3QXhvksdtpbm+1anDHDvdtrc78EgwqzHp1EKots/mJ5OwOMxu4YMU395JqobDt7Us2xv/ijCu0jyGdt5UoEGfqQ66tdHZgeSw4IXL9YFWAz0E3jMOdmXJpyuZTStn1lJxM1QrihjHC8fQIvMjVv6FIwxcXhQ97QBN46QDVmA8i2uiV69Cp6mGwPbB+/9+Isy9yxYk/hsQItZ1FiNYiXQdmX3FlFT1uZRiEcCNmB0Iwuj1f19KAxNsjq7XrAbLvT48Uy1zpPKgHdv5kT99g98y5nNf2jVn1KmLIjrboq8Cgfdo2K0e3GJgPOn9g7E25T8+jtlnHdBFdXZ9BHK6IeHByZiqiF51Yk3+nminbUfahRbzUCTV4cX13hGcuqIu3+MnbX+/T28IDaY7TlT0jhzobyzJaNlbup5QLzpwwloLyzf/06mVS+0AWBrduanmkQ+Ia35XHZwh2GMlC7XKQkoMxgF3gQk01DQPZYjPPL8BBuX87sdG7n1LH2PeM+f9zJWI2dDG5shcjSP8bg0LBvCfFvJOE5lv8nwNMciwxNHhsK7YX6at2Uc2vwjl5NZd0oBBpQOJzDLNCNW1L6+gWNy6am/7NsCDMHCcN+5ZEHXB8DMgwTzAX4w6JYXN+eyFOzUV+7mmkqRKmMFbRc1DfofaLroYyunaDMW4M1RY3OpP+Of7B5PQ/2lv5/Fypmi8mXmIsAS5SizOojdbUBy5xiEzggp/Gz0Po5JzD1RXr/1bdsP19nPmR","layer_level":2},{"id":"938b8def-e7a9-4648-a41f-305c3f809c06","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"过期回调执行","description":"ttl-callback-execution","prompt":"深入分析TTL过期后的回调执行流程，重点描述expireCallback.accept(ttlInfo)的调用时机与上下文环境。说明在Raft领导者节点上执行回调的设计原理，以及如何通过shouldPause方法确保仅领导者处理过期任务。解释execute方法中异常捕获机制的工作方式，包括对Throwable的全量捕获、BugLog日志记录以及defaultDelayNanos的退避策略。结合实际场景说明回调失败对系统一致性的影响及应对措施。","parent_id":"4f24c983-2fbc-420b-a4c1-ee366efd7916","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:11.808158+08:00","gmt_modified":"2025-09-19T20:32:29.842348+08:00","raw_data":"WikiEncrypted:6yi+46QzD7zAlufPlTOT9yZH9aMG6yVjABSK1+JzsSp30D3pEO7GeVqvP393InP+Yxl+L01N6qX2broubIexZ8agTl14dxqHS3s1+0qVCLfZgsJ1rIfpbwVk5MB8/dsTRjRoAlVFJBEPip6Okp5pl8RUr6uSe+nzF46CHV8t+AXLwdCP7Jtv6RrKxXbcxMUBMKxU0qmEsHFuFT1xznZ1mP/uBR5Jc6BXP+cUgK42fUcEe4D+BrvtCk9C9WcOZhY0/dlMv6Uv1nWS9H3Xv236rQSdDAiNMPjtnfvxtVpIeLFMpeDa54YTTh7EwfTKYL+AXbAlgVIKB5UA26Nf8U3DeF91HWBcDqReRYWVyTD8tsmSCdgG0ECtPU/QRffq91VJThSnI+L4+FMMRFsWrcRreCWGsKGFandmO6Xt5c7W9vvDtffWBghQgxYQg7YdrcXwf8Y/qABX7fUtz+FWykEzeJhw7NMvf2YEqVPHIGVInDsZ4Da3/l/fKCYACxf4Yvz68BXY5K4297+n/Hwu1Ob8xBGAuGKulb9BH7/CwDwvTKg6xlXD5jTobeJb9/07NHwpD6p/95jNab6sRNyIZMQAVfS+xb8LQS6hp9TE854lDHZAOfkuyzOxSS0vbv94CJ1ogxOIo8C7yYvsyN+f1Gst2AS3IZyMM2kk2Id9WvPun0iN/H3/3pI9RKdvq9KdYrown+Bqawb+HSBZhQ+YmrECJ0pttCBE5uID1Yv9clrZIdx/y6yH1yIhghdIV0wLUp08npcWdyeWJBblRBApHAmj0+vkgt8GZ/+lBTN4cy1Qcm4BNVV+5bTvtpPt+aTuefQCWxF+9wi6YsozWy2xBxHWxPwRn7TkqIK/WaqPRtriqePCEpG3C+m2f5kZ24PIweu1tzN2HjHKQULpovPXqE4xcGCZf9XSRI/6Qu4jO6Cj0ZSdYyQUeicBhG9SwPf07ENLLVtVu09WSLgL8Cb34sP9nO+pYEqZ08GkBDZZBbe48CxNEnhb96beMY/5yekj72Ixly8gcXpAMX2pACerJt/kcMsD2hSY5NyfB+wm6EXAcDXXnWG2FNkfUDt7OlDKWV/PQ/9qo0/lJ7ZW9qasObLioWWqm/HVgH6RcuacXNaWCmo=","layer_level":3},{"id":"8d04548a-2c0a-4275-9eeb-abb529ec1fec","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"事件分发机制","description":"watch-event-dispatch","prompt":"开发事件分发流程的详细文档。重点阐述dispatch()方法如何协调needDispatch、needNotifyChannels和retryQueue三个队列的批量处理，解释dispatchBatchSize参数对系统吞吐量的影响。说明afterUpdate()回调如何触发WatchHolder的事件收集，以及mountWatchToParent/mountWatchToChild在KV树结构调整时的监听器迁移逻辑。提供sync()方法在客户端重连时全量同步状态的实现细节。","parent_id":"19ed560e-f4af-496b-a7b6-d4ebbf134e73","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:15.798303+08:00","gmt_modified":"2025-09-19T20:24:32.351293+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OdK6UBpYHY3P4/EzZTCnXZirgUmZAiHSCplymxYWFmhfuhoi4jr8hrUF3RQznC+KJBWcjz9zVSxLhQ7NGzh8uFMjpijLMO9HB6qcEEpqrRTEPdRv0LawPNklWUzLgkuMuECuqCtK6hvECJsRt391ML56mb4osW6iX6SO5/tRr1dNiKfqCY9QZuDbqsucvPTsOVkGU1ZxQyXD3iXZa27kYmdN9o0BnK6MMTOvIfonX3eyBmLxJV4HKd+adxcgqbH1Tz/XNQJRNHUqdjsQrGwvLevQee6wwrNR7lvn2iG3JXMTN+gFyS2Iex3SV0byoFwd9ygDgZt6qcqiwePa7wPVXvr9fOpLk7/7fggagpDprKUZyH4e16KEG0I+IURzwYUP/FCviGeF+hf72WddGfe3jQWfANgxYp6hp9A+gohDe7SAP2/PSa4GoBTzxehwzIgFoniMLKSAbzu/ZkkIAlcjK3O3L7Smw8x15MCqPuYSDNMz+s8Gh/nMmsPhD0XOpiTNhJjPIGG5FdJf2gdTmLPWct+IN58O3hd8wWo/9MJAwZxoS0CUSG2WFPqovA1Iw9s0Ex242JR6pRIwwiaj7yWLw2uQF4cWb13C3U2F3cm9q7R/Vfva124+DQTEwxy6imX2tG/qrsRzUuyMWc7EB0BRJN3f3UhQb6ePx0+BxmFTYwZghd5CCOHtsWNxIkK2auCFHd2EvRiAR2bymkQ/75xkMP79oJEeVda8H32Z3RtwQtpUPITNnDJeFCc7KUEBg2wy2B75lHZp0mRBtYoD3yHVENdenL6ZIXrDk7s8XmAEMDDV6iKc9aHgoIYKietF8T3lg3BdgjNLNZq7TdoqySn3blmen9iZsttHPHVmSV56mNXiq1Pj3oyDEsOhrlgehaGF2xb7Sy9AxB4C1bkeUpB+olWXtQjcxyfoGSdFLUesoQV8skPSGFOrIQGj+z9y3Sgww7J5lFqMqCDrVSiVxvvMQWaHgWP4zSr4k4wK9vj7aLpL1s7UGO09V8LWIXZ7lpfHZph/ik4cs3bWX+H4zToy5PRXS+2k0XvWVkcWgR/HDaxc2Q+RodDP4Q3DTp1uPelC7nH1hmAwhbi7dgn/HnZ8RHy1iTys7XR5cHIPmRwJlFywrEdaJhhTXbdfZ/2NVxJ+RA==","layer_level":2},{"id":"61bcf3d4-0ce8-4802-b502-c3603f73994a","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"批量控制","description":"batch-control","prompt":"详细说明dispatchBatchSize参数在事件分发过程中的作用机制。解释该参数如何限制每轮dispatch()调用中处理的WatchHolder、ChannelInfo和重试连接的数量，从而实现流量整形与系统负载控制。分析当处理数量超过dispatchBatchSize时返回false的含义及其对调度器继续执行的影响，提供性能调优建议以平衡延迟与吞吐量。","parent_id":"8d04548a-2c0a-4275-9eeb-abb529ec1fec","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:39.171242+08:00","gmt_modified":"2025-09-19T20:33:00.887801+08:00","raw_data":"WikiEncrypted:TIdOXnVG0Izs0oQg17x4VjQYglBw0cZ/bANfXNGu/G5a0DbWGkSHmHPdHfSb/Xcrb+m9wk3z5C4n3aFh4NTVACOAQiDX/phmKMNJSdraNd53ZpjZ8Vq4KHi7S1X3cIkCzb9lU7Ij6CfuGqBnTElWQqm8qG+iKEXVE6teWgpecPi2ho4MCHopvqNNVYT7nCQv6LQC18rFduzo4mrITgIoIdAFtRLlvxglYRj5x/3+WoYcYYAYM9AAp2UuPuwJv3ubej00ncTiUGfQOdEQJqxR5F5okziGdlvXxYemRHW2zTEkWo2FKsyoUFjo8aXU6HtA/olmQVdHNKj1FqMAPvfyE2S0XzCSzN25SiwLGUQKvfcCZfNSKqQpD3p8JuP8wNmf3Bk17EWRp2miF+aZrXoCnosY+k8F6hIIVrbxEIhGTGLtFlQS0amsZ0TwzJABOgcn7huiQjoZYUqJmqF7JNPZtvMcoSPCq2ToDq3t7PUP5lEQcscqBSw5NKZPI2/r+iC5rB+Ht8tM0JMdhajZuvaM5ts5UkclVFTd/3BOWpfKxtjz+dhBlfEXoQ0NYVYUEPfLynq8rrAz3hlnenhzuO/O/G5/I1/DAaKbneDUtRwB1kb+i7BqJyR+OClj7okne4s7QZwxNP34FR4dTbfzV87vyKeljwgDiYb8M9Hf7cfCbqr/9djkDkv+458DDVuK88SXTn2SaHMxrrBnHBQQviTIXgxz39SW1SGvagjuXYADjCUnN88A5yX7ErypBRqJtj4C93ZVsZmdunE1PS6rzpCtbBYXkUAXvGyzGOG6Bp4roVMlIvgsMltpgmaWdnqXnEZk4hEAq16XePFA8ZEyGoiHHwLvx46W+IPZ/M8I4OY2RGvnptNSB3Bb9+7EpHRJ8dpyFMz+pu6oYMEArtuXNA0q+YtPVrE1FXt9rIZKxT0F5Bc=","layer_level":3},{"id":"e3f00125-eb0e-4174-8954-673cd549ef16","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"事件分发与调度","description":"watch-manager-event-dispatch","prompt":"深入解析ServerWatchManager的事件分发核心逻辑，重点分析needDispatch队列如何与KvNodeHolder的更新操作联动(afterUpdate)，说明LinkedHashSet在保证事件处理顺序方面的优势。详细描述dispatch方法中三阶段处理流程：1) 从needDispatch提取待处理的WatchHolder；2) 将关联的ChannelWatch加入通道的needNotify队列；3) 通过needNotifyChannels批量推送通知。解释dispatchBatchSize参数对系统吞吐量和延迟的影响，并结合代码说明如何防止ConcurrentModificationException的临时列表设计。","parent_id":"4ead71be-05f1-47f0-a734-04860e9c962c","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:39.923683+08:00","gmt_modified":"2025-09-19T20:33:41.614789+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OVX07zfykWi9yPjAk87mDE+cGP1WwWvjDywN7Boxt/DZ9GV+nfXtYdCstXIjs74T0wP9DEfbU+YiSKEN9Ju6TV42P0GgOZDK2e6a9AUfho9QrZ3PsnUc73l33v60bZemz9lYIbj420PFpSBjOhLyBtSicqHtDoA4t7jH52Ow98sayk560bLZYRItgQnr5OMkShbn0zL+YsNA9I0AnbTLlmLcUSyDzVpGRAmRhGRD7m7irCbo6XuNqClFLb5OQ+i7neWdNgRrM0z8/Pc84DvqbdQxdsno7IcVA9NstCV0B0uEpHXtt3x6+wUD5IKBiNfQeswrQe3gN6xI3ZmZaMJ92ngAKEAP3UAnUvd9nRwr4jhzVVJwFTLQlRyaZhp0MGMzLRDC6fi1XwuA3JMv2qjSCKydZKfH1804qM5lLqfbti9d3W3CPWpTy7Zjb6wm5TVi9WVrzlfXCDXIFFu+Cvp6hDFmAzsYkWCC3OT3S9L6LAx1GcI0DDrjk57+s5sLgTosPNpRGqrTuKT4O03uOvsIH9F4CVKgfS9JSy4yaFFnTiapw8oYJLRuwgWNz+ed7PiUyQVMOwoWS2vIEBPO/lcf4VMKxUwKB11DSJS77PPZfNo5Efe3BlUsqkRBmfeLcn6YJ06Y2b04DtMRAbMwLQGbKQHVAi6/bLQYSbqUKjQpKttG0wGs1X9np0Gt+ScK6hF5eZoZu9LLD/fIAEybZYCcpa40/fMc7qtc7DccgbOY+xlsfKSucgPaZZrW7VxESEmavCD3wpxY/DyGinf9VqCIkrzFdNAnUpzHxdYt9J6hEdKpvuHYoADYbNv9ErK70IhX4u8FE/Putj8oR4d6vZEMHXCXrHXVf76EXu+uCW4KsHeV+2Ja2Aj9kud7nK2+N8jO2hFdmoYQ8uj9rJcrsavOJmSwMzUxvkW/CDAKpFSQ2YaL5ko7Z9D4K4JnxMIKXZpnqNmyVi/FUddwlaPatgVpBylK86QWLviP3CvNS6dL9sjcgSqK3t/eblOQegGUSULGIDuZzqF7bBlE2TPL0jO+pX9UiYC3wQXxD4weSQB01lgU/aM3xF66T5WUv6cJrMTfaKqIOq4qdV1rPfZe87EfEnaYg39h4xApX4nfWhYQdLSn1jpX58/7Lk4u3hdlPCdqZurTqEACWlGf8rObWHTnwVuj6vbiQuGnI76mVUlQiHr6U4vqm5MXL8Hzr1k8tctw0uC9dMUMOCCCD3HLyeLN2irpDUgh2eisQZ0nHI7LAEaw8ncsxJ1Zy3WkKzUa4wsrxA==","layer_level":3},{"id":"feb4ae74-1e6d-4f70-9b3b-1333898dbc76","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"流量控制机制","description":"flow-control-mechanism","prompt":"开发流量控制机制的详细文档。深入解析pushNotify()方法中基于config.watchMaxReqBytes参数的单次推送字节数限制实现。说明bytes计数器如何累加key和value长度，以及在超过阈值时如何中断当前批次的构建。阐述此机制对防止网络拥塞和内存溢出的作用，并提供典型场景下的性能影响分析和调优建议。","parent_id":"6addb4e2-d8f7-49c3-ae08-c0871142993c","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:53.90745+08:00","gmt_modified":"2025-09-19T20:34:03.840627+08:00","raw_data":"WikiEncrypted:72ELvLafaRaPucu+Anr15OLKSlTrHKakCM1554wDbJzUOgZM1F/vo2yVmeWb/GhZ/YS9HQizh9o35acJ4e1HxaKXfBFzA2WMldQGP66RYrQoRp0toop7n71IzClE+zuCHCcO/+1hQJSTNlO5BKwijpOxTy3mIJ7DeUsvJpEVsNUssH/uOKlAreR7LhDeTgY0MyF63ilDOkXyaLFqY0vDi5idGciO8E4bDQFORHiRzzueBN6hwLIklFFfpFpH66tovfPXVaPAXH7K3tBqM6SKCjYeO9TMkxJ85Ji+eQwCRV0iSjl9Urs+zOm5A006UsEumNZUFmFw6+3NQtOm9jNUaZEklrEc0ETuf4Tz8w1/WtTSUGwSGj6m9fBk3Ws5wT9ce64B1Neh6RFdycPjRde6HXnxkT2e4TpeJiTOAWC47huMzwd8ldV48BDvWq7SZt5RNe0YCRCOM4tSIy248X6oJL5/nT5LkE3Ia4e0A5kjDu+msaUe4+YdFW6+ym5mXIRUyA/1maW1/hlAMCXrKbaUaiXQ22f3oCRuoz3sQk7Q27nXTtFXqarUx+7gXfrVjZviUcoqRxK6IMvIok3k2lxbMEo5sKRIgppDuF9LnbmyClxIv0Hf2WZzrmAu4GoDybtAp9VtXFM3LNGjth8GtAeuK9coCg0xd43olT+4A4CqmyT/6P8lOxlgSw+J6fLiJ4H2lT9jaLUw9cu2f/4BP/+Ql4zNi4bvEFywM9a4XFric5p+JbG7c8gXOVQdDmXaZOmsUkQQ2kOPxDyCl/n/rzhQ+cbO7qfv4QgtmHcuFtaB5PBJklf0NlWnJRhvw2blUV1ESJcarfX5VonWmg9C1W0QfPIVXKivM+lXctx3+P6okwq5NrZkpds+7ub3Ni+SqazAGrH87nWsHQpMXsS7teScTw==","layer_level":3},{"id":"9b889cb4-ffe1-4695-8248-271ae4219ec9","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"指数退避重试策略","description":"watch-retry-strategy","prompt":"编写指数退避重试策略的文档。深入解析retryByChannel()方法的实现机制，说明failCount计数器如何与retryIntervalNanos数组关联以实现递增的重试间隔。描述重试任务如何被加入优先队列（retryQueue）并由调度器在指定时间后重新触发推送。解释该策略如何有效应对瞬时网络故障，同时避免对不可用客户端进行过度重试，平衡系统资源消耗与消息可靠性。","parent_id":"8db9d374-bf88-411a-a097-7018ce115841","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:54.636829+08:00","gmt_modified":"2025-09-19T20:34:40.920589+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4Od12+OO/JRjRIS0pd8J0RHXqoBsbTbWevsBdEBFYKSCV6Nh0suxj/SS7VDnbAqiTFJvi0wDkWgeSCam9skx3eox8LdPbWud55JEfPlo438HIvNmovIMnztjKMHHjei0y1/kMIzU5xEfrmtNTQkaVVk0+IDvnWaJshfKNLgmRhXQWkZoVU5qhQxAUhyKRTTY7ZLWuwtQ2D3Di8XMDgvHs0UHO2uFWkK6WczJtA2aQUodiW+9OS+qAcMlGbyhXo1PvQ5OKddduuD6KN9ERBGHmRw7XozRmLMc/Ljj2BkHQw6wHZWJc9F8eAEnQAvKTMM+fUW4zQYUdtVUI/y3h5fmn0kFnUzmZm0cO4JEQa/p7G11Y7ucz9irlctfz5+4fMYZRanKaz2eC3f4JcrZ7v79kiT07AfI0vohFop6D+GApozJOCaTTu6ke8WofOnsaetJ4sK37j5nxyfhJhrLWUM5O7ZHgTQbzgegOvib5xg1q7KXdXpKam/dqinM2JPav5EmxuXyGDZf8CuikAAhiR/3Getysrs3OfuHikdp5QMU4lbYJQJHj8ckESz7e+RI7N/4gAKyClvfO7+Xd7TNt8L01Br8uy6seC/hPcEz81GilhaXdZHzDkohXZXHCgPtYuLq711bldtl0f02UX5mpsnwxnSmNz2UvOUJKwBZM3p7VDLttJF3qcbqqSDTAh4h1iDmkVDIsZtLbJYroX3UbjODXVEb/hhFz3PSYJSWzcYJ7LUIewy7ueoroS9lWxkMdjjzIYGXK0wJv6YmpCYMaFp4lSYR2kixqn/mmDvGPERecGk+3PXAH3m+mWE5URPBSM0Plv9iyrgBmyAEE/D49mJnHeHuDI7UMFdc3JNiON+qQp8Ta607wenemo/KOxXea71F9EjD4kPid6cBzGT+TvluO2AnYce60oB7ZotVJKE6q8xuXqmQJ2q2OW9FZVLfXOnyOfBRhjCAUGVpHcr+k0+kEfUmwKRwfXexj9VwoiWEomB6O","layer_level":3},{"id":"2f5abc7a-13f1-4893-878e-6c2ee5f0d7ed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"监听器挂载机制","description":"watch-mounting-mechanism","prompt":"开发监听器挂载机制的详细文档。深入分析ensureWatchHolder()方法如何递归确保监听器在KV节点路径上的正确挂载，包括从叶子节点向上查找父节点WatchHolder的逻辑。解释mountWatchToParent()和mountWatchToChild()在节点变更时的调用时机与作用，特别是remove操作触发的父节点监听器创建和put操作触发的子节点挂载。结合KvImpl中的put和remove方法调用栈，说明数据变更如何驱动监听树的动态重构。提供时序图展示一次PUT请求引发的监听器挂载全过程。","parent_id":"c486d735-ee74-4b63-b812-f1b40885671f","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:34:13.822522+08:00","gmt_modified":"2025-09-19T20:35:09.811316+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OUW981tRcEp0mDduWF3Iv3tYaJplO1iYwdIoHAHp3FPmB0pSrmMpYN1t8Lsm559XSO8uYlHmHARBNgrDmZ0FM86N+DUXZJSPOFH0aFugC8z4NImHYAcM2I1yCm7IeCwYHcPe5VuGjbbfyw+66m5eMgGECeT/F3TX2ocW2UEAzpbLve2W8E5VPT2gLZ1zPqOcB6Ol8DtJMY7Aq9dym0QurC7mdAiipCud/9pBT8MEkAxVc1+4GpycO3qxw5gfZJvtyvVmVmYo6vw+2cMq5mAArLe8QpaUQEdhfGDvf6UczCRcErAtn5WrXYT+DRJB+4xejXneJbkX4qjzN/+f6+GaC1l3TZAyLvF42vVQFPTV05GbCbxu2SLSb9baq6pmNK+zWqWmLRsc+j75Qc7yj2T24pEBtiNPKmERIu6N2Q3eLOAaN1KmIeeUcD5NGsT9n0niSWtNLzyO/VXKY8ewy5smKwhPIFOGtSYBQfDZ6w9z522vCSlOYi9F0GIp/m9n/0q6P5H46/rBF26n/ZY8Hdr2rRZuoSZ9FP3FX0rxGEvQi1JJTdRWHnVEY0OHaRZVC/M+LUjoZ+405KXF4GbM36WzZmlbrTQrZaV5I6XxG7g4OJIbS7vHUqvaR9tl3p/tK9XVScY1sAmmkjX20x3l9NS9IXnYojCJ3qQrpH2Gjg44yLnu3iiUE8E6f4fHvRK0o8SbyZTBISEvE81pqaanN0plFdZ4s6LNa0WR7hvHllv4iStIO0CbQuEx1vdTS/8GcKJ1uwyFHpcl+Zc4McZRqHux12XKCxZztrPZmcQ0mUguTqVYoeuySbRSMUGENgHXZbj436Snuw0xi6K3ugsIW/H9Jf0Vl4fH2yQ/VnmOfN1sFvLDtbl6wKD6ImJuVNI5w7jsON1JgF5/G8fEVLozxZ788obVmJwAcV5orSfzh1AKaqyGBPMHCN97HnZWeiS+BDPArbDZ+lWbOeNJdsYA8TVGQLtc74axCumEquAKI6cVQL01sxHcPt6S5x0hZzOF7CURNB0tg8UprRDu7+2ynRBfkBqeRGUGbhX137Oksj5XHDdLjF8D3htOnFPhBX8AsLpXjvkWHbDMo8iMVHnYEKHIvM1zhW17BbFIIzJGLZrNQrfRCrtlL3Q8FQCHxUK2CIoi7pJC7f+R3YAa//JFmM2PCpeGS+je9cPddGqrAReHgiRp1HUMweu7XOSKgOS6f5CA03fDupM2orSP2/uM3RE3CTiKMCMRaCZqojsBCrlHdHespYxGNarhWitemDG8nbRyYhbpfOyhcVJfBulWOx2WfLZQSJALFXh2SomjyTtfBmCrPWDYWpD0x/3JjA1Fp1jEs3Z4MazCSBo5o7L12Jv//TdhvMaMNh7dQqjOpoQdSsj9","layer_level":3},{"id":"e6042328-495a-4503-95aa-58e72d718fd2","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"挂载与解挂载操作","description":"watch-mounting-lifecycle","prompt":"详细阐述mountWatchToParent和mountWatchToChild方法的生命周期管理功能。说明在remove操作时，mountWatchToParent如何将节点的监听器转移到父节点以保留监听上下文；在put操作恢复节点时，mountWatchToChild如何将监听器从父节点重新挂载回子节点。结合KvImpl的put和remove方法调用链，分析数据变更事件如何触发监听器树的动态重构，并讨论该机制对监听器持久性的保障作用。","parent_id":"2f5abc7a-13f1-4893-878e-6c2ee5f0d7ed","order":1,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:34:27.419264+08:00","gmt_modified":"2025-09-19T20:40:41.470069+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OdWlC3bJW1h3ULANJrY1QGYaxbQ+0DBNPL0bzdeQW3nUPiUeJOpf6HYFdxMmwO4LlWJeQkwqRcL0vuV+IrylLvTvuw9pdOTx4zrzu3z8V6/hNLG87Td+FPP1IOmdarWiDacKcGUO179xoWszyuKHXthGcYeRTCSvzxktbTao4vdlOeii/qe89NQHgcQbp9yhT5AsqtZDpV8XNWM7xwfs/xui+jilc4764EDCFu8/iVxzgvajxIbDmZRzrZhkmLPXCedkVMGfyrLB54GvCnYSob0T6/gutHayihtn0QrJuA1A4P/jeamt9KZeDOWZsmxmKbsvjQO6+KzydEzndMxzWzhStihMiH+AtiPIl17+QZj3jZTGIjDpxPMXMBTjrsR9YrtUQgb7O42tzwLUTZdgrmjjmDLpgm48MMsW4MKnclNRBvCNJeTat7zQnQ7TmAypRDfAzxsc0/gUXsNg0y3pAwrsxEpNqmFya6czNBUeOcHPRcsVDX0b/GPLrv4m/zjsKx7Q4KAOG8mTQK6VRpcjpQRVbbQAU8BloC2IBwWZnDkw+m4Hf71gcyxQ9jR8Rd8sC8DAjmGyJMo1g3QdUUbVbsdo4pjOdJMpfKY4emtZGCo83p06QwXf4+gi36d5T+2WBhlKvUe/Mupaq92J5fmLUEJRk7a+sjp8LIdSBlX4UpAHIfvfHt8luTeT2boaXrwkAeddTvnJybUCL00g9E8pd1WAKQepw01d/6kHgaOtu+KiJBXqbbBy+wbwvHKeI3QLz9AddBPcPagSOCi+EC5ptbJokEytE6QBnq7gAdVdcX2NmZLdw3yMKsCvivaDd5Jt+1NSpBYoLxYLm9xcd05GnJnY5RPAh9DAwOkN6JSLJoV5FksP8qvTMcQ1A4SSSLc7tIULJpcmy9Y/YfprMS0zpUld9rZEtSDXodrMck5ak9dJjfe48PBPz2/KGeU1zNq2GLb7CmEswTpuAX4u++BdmALQKVh06F6qUlJMkT2tdnLh055YYSq/eQkeHh7gA8+btC0/IBFpsiHRv33Gh5baMV+j8hWvOcyqPk8zsr4I9kdSBHeLq7Nj1D9KLPoSdogqNoUfOzVYmFmBsQphheM87kFIqZKriOTmuUzTcC0prUIJJKDTz6/Le5O5jFyTzXzjEQ==","layer_level":4},{"id":"05c7a5ec-036b-4e80-af0c-93e07d64e27b","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"核心概念","description":"core-concepts","prompt":"创建核心概念文档，深入解释项目中的关键抽象。详细阐述Fiber协程模型，对比其与Java线程和有栈协程的区别，说明其在简化异步编程和提升并发性能上的作用。解释RAFT一致性算法在本项目中的实现要点，特别是线性一致性读的机制。介绍RaftGroup和FiberGroup的概念及其在系统中的角色。结合devlogs中的技术笔记，用通俗易懂的语言解释这些复杂概念，为后续深入学习打下基础。","parent_id":"","order":2,"progress_status":"completed","dependent_files":"devlogs/2024_07_09_第二点阶段性进展.md,devlogs/2023_07_25_再论线性一致性.md,devlogs/2024_07_16_3000行代码实现fiber.md,server/src/main/java/com/github/dtprj/dongting/fiber/Fiber.java,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftGroup.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.585428+08:00","gmt_modified":"2025-09-19T19:36:38.334599+08:00","raw_data":"WikiEncrypted:GJKeAISOpe9fzBR3si6wxLaiETzLOChaSr38e02u1874G8hGeDFqyYd6gnecp8a72d7ZVymfuvXDCDSpxTpKPJhN+vjPocdjDU4kzeXdUAwcCypLwHov8dU/cuHXCanfEf6gAn1twa+SqXgbqs5paC8bJKjy9EyqA0EqLS59uW4J1xI6JPUp/EOPqo70hgENxuvckuBpR+XtAhSf/F5SMFUcq84J9elhgVuK8OR6cBgT6bZHkY7mfjlu1eVko91JAzBPwXqbknBwvxT98OOrL4GrQ7V1Dr7qiezWU+8/E83v+gTlzbkdd/CpcfQDe69QS0jlnslor+EfIah4g1DpW3T2DUnsBKoFQ9zW0KHXWjJG8MZjFXpRR5o5j15jwN1pS8GcKpc7NILO41X/yieP8eJ/tEQklwDZa9/YPWe3VHu6bpJkbBKtJ/8PRoTPbb0X1yddoiXXgV6+f5tI90G0CXDO4WpETohJZfTkR8aTj2OxwS54E4x0QJPv4mU8jIpDbz25gELyX26BZTbMor4a+hqZmWGwOEb48oWzoJnzcHog99yoOhIR5zpq9WK16GFfp8EDUDBiZ+QE21duHK5HngKIgEBjpAfYsI6ZcYkGUPJkgh9U3ekOlWClqdNl6QiY3xMOR4zqRa34RnzD/wwf8zL5I4gylTrUddang0JBI7wl08eEdRbjqLx0N1uuIbQ7WTBJGeKJPeDw7xzSoMTete8W+ntxwSWkBWNrk1Hstfhk9pcUI5JsfXHeSwUM7RBARLzFwlQRI8ufse3Qciwx8eemOBLYMrqM/5kbbmxI11M38OZUUrmMzbwSTEQyMNBei45K8VJrhBtes8ou9e8FYC5gjEAf+7SV8QmNuEfNiAyU3Qz1aKqvP8XUnVYa59gxWYHjuQuB+Q7STFRF3xJ80kJ1hDpEcZ+qMwxErFkwiool+xOMq8fHJgWkM+EMuu7BcmuOsGgWeTDRtra4HFuF1l2zhMMhxunRic3OHWZcPlYv8h821vqXrHDhe4cFjfYgVi5T3N0YkhIPj0oVdiB0uGRW6ZhDAGhXa0qIjl78ySTm8lTnvhevKAGIE79KXARCyk5SZDHpEaENx8FSjlnrGv0pt5t/TPgcDet+yt3nC/+7AmbENXN//JJnzYeHtD1mTKnK1LxMKBPrJoXrwjTvcnRKy97LSz24FGhi42dD7YMQIRXCp4Kxb5SKZ0jbNI5ZHyAlpdJTmFEDyFxuQusR/KmAswyKW72BnnhcXZteKC8+xMLXyuRmumC4CM8lRF07t+oPFYi5BWU8mSkop1Vwl+oIFN/4UgO/7JwpeZxupHuF9D5P9rzvdY+aDU+OzwrmBMkHEmKr/v8HvIEPKTGtf7flsEw7zsXQ+4j548LThQ8CzKvx6rjvsSSFtA7Ckp5f","layer_level":0},{"id":"36ec9573-0a33-4896-8394-b7be2133ae7e","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"线性一致性","description":"linear-consistency","prompt":"深入探讨线性一致性（Linearizability）在本项目中的实现机制。基于devlogs中的技术笔记，解释线性一致性对于分布式系统的重要性及其与顺序一致性的区别。详细说明通过leaseRead机制实现线性一致读的具体流程：领导者如何利用租约机制在不发起新一轮共识的情况下安全地处理读请求，以及客户端如何验证读取结果的时效性。结合RaftGroup.java中的leaseRead方法签名和注释，分析其参数（Timestamp、deadline）的作用和回调处理逻辑。解释该机制如何避免网络分区下的过期读，同时保持高读取性能。讨论租约超时的处理策略和潜在的故障场景，并提供实际使用leaseRead的代码示例。","parent_id":"05c7a5ec-036b-4e80-af0c-93e07d64e27b","order":2,"progress_status":"completed","dependent_files":"devlogs/2023_07_25_再论线性一致性.md,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftGroup.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/AppendReq.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:29.353507+08:00","gmt_modified":"2025-09-19T20:04:04.227528+08:00","raw_data":"WikiEncrypted:vCTvL3JA3DBctyfcF+rL2TNMigpxO+c+7U+fk7x2USFiMukF0Cdv3nHZ7aHz4EOaVKYeedTmPLnUrxLyx9toWds4hsUqGTDIPD0DMC6b9z2Uxun8AOet5NhRWSw6ZErN38fyp/GprGJoLhjXPIOHLlNQIEEEBKjYOiqrg1FoU4W0AFJK4bvJyE2I5GTjNxVUA4uo/Adt0V2MtWyibiU2PxXPbGCCpJ6g/EMLkL/UpjB5jk9VzuMllQAM4z9XK3AHwJQ5iY5o9JmydZLyTMo9HYLngaDeTRLt48FXOrTHzhLchx5qNZ3KvQzOc14DOWDngK6xZBiKAqJx9ZRL5zHd9mm78zLguhvmeAXrCw/lUGzPAAMqH/+BxNprpKZ9OQzFcPRAPyRwzj32hReePYpKar3eDoWxP+CYqZfBAUiIr9AUXdj7jrSqg1JUWT7J5Yu6TQjsLfYfsLJcYAAZypNTpH4dBhiQO0QPKQJhwIsN3AEdt9MNimqEsDl3em/1T3EnqEWVr5n6YfGoCK/bjDwn7fmq/+neCgR9PIxC7kAfwoiEO+2bzo6KlWo6wYF2Z7JRHBC0h9Feb8Y7DK4hBXcAn4qs85d2qGNIoakvtUvx/I6H1e0xMbYX5lJDwjOkhTr/+53+0KJT/i9JhdBie6eINcwghZ0MVtBilohT9TI/txSyVCQFGUgmAKsEMJeoOMIVZIm3wbUiXKRuiYQIc8Qc8pWcQxHJ67A0Im3sepMXCphUffmGhlk3mMlxFwEp5kNxjcXruyh17oY0ZuZlZ2I9tIdBUUDAaC6W1gzZP826kNAFPMoNagnjfjYLRzfe+noyu18daRjxf6owVXYmJMHNBvnsHEyI27AcAa3Tz13jOvZHT1CNoDVL9sIV/Z5/XxZo4W2EQrdSQ/7SEFF5h8TcYax1I390v+S4MkQCGruV/69xFuizAIGsRppO0rbTUutrkunEfg7pf2UHgFtyEjngWw1ntHttCJFnIPdrM908qj3ZAVBs1ObaVFaU5q5ELB4YptnS7688no1csAJvRMpM4N0T96Tuhu6O7R1rHEDOFTJr0gfb9ByWiNWDrfNWjyIvZHh3ufRFy7U4/MmhPD4n6bxZGJbXOdOl47+DYLyZ1ppeZZPPNwneQLjJQGKWBncRjx1Nep0OP1etEuAR88uAuCLbJRS2w2TwnEmQR/T/kxYosJ5chyQUFOZw5BIauVOBl1Q43DRpC53uU8omH6gl/J8IHToSKhj6iqocTh5vTPaXct36K07CfXW068h5u6tP3b/CsRptBVurfl6xFomJlhyk03oILa1oCB4XJRboY8dUXJwoetCFJCeYuUJ6AIE43zd3OIxAOExmlKnc59/8OKQzL/UH28NYba0j7KKMW+NV4CGk+SvFx1Y1d9pzrmhAhHbXr29VyAEN6sM2DDPyMzhBag5hQ3RGvSQxSO7FLu2QKc8yQtxjsuFLHNOrnFXq8taajAIekQ+uGKjbGmFTNL1yd2zFwj0t0venukYpVtMee9SLq/AdBekGvaT2xvLMxyBzI/ndpB63ZHn90/CPXexh2Fp6PrQ50dxc29+LaqvijFBSdLs70XEFQP4Ez8JTHwREcD3xMV+ORGDkQVZUf0cLWNSIw4t2IXEKLRl7uEY=","layer_level":1},{"id":"a17f8787-f6d7-4040-95e2-13dc9dfef6bb","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"选举机制","description":"raft-election","prompt":"创建详细的选举机制文档。解释RequestVote RPC（VoteReq）的触发条件（如选举超时）、任期（Term）管理、投票策略（如日志完整性检查）和选票统计逻辑。基于VoteProcessor和VoteManager的实现，说明服务器如何处理投票请求和响应。描述Candidate节点如何发起选举、收集选票并最终确定选举结果。结合NodeStatus中的状态信息，阐述选举过程中的关键指标和潜在问题（如脑裂预防）。为开发者提供选举性能调优和故障排查指南。","parent_id":"29a33e01-a4d7-4a7b-ae5b-9e7d7bf2b913","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/rpc/VoteReq.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/VoteProcessor.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/VoteManager.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/NodeStatus.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:46.57032+08:00","gmt_modified":"2025-09-19T20:05:32.905311+08:00","raw_data":"WikiEncrypted:sds3PFOlcbw+Br4/juu5SR8xzs3riXwq3yFFGV8b3f7+unvSK/rlne1lgjcvdS56ByaG8C0ZwfGOgBFd1hIC+iJkutiURF0uESclPC9O+XMrJoxCVL7mLBFnhynpcpx43/HWV/D8BXKwlc4TZmRnBSg5ny7tIy0PTSyFwR8sFcnUYIzsq76J82LUIx+0sMLtLI0+73zvv3/+FBjAcrtVr8BY5GYWiz8RptHGby6pt03xPgIIx6BQLdOW/Q561XWT5tU4OZZf2/tCzk47bFUxgy0HpHe7Vxvh+0gdqIslsK7vj6oWB9otNMK8epSvH2Q3kPBepXuoJgW8nbsS1oLVfQts4d/SHE8oWZ66qJXyhCO7+LiXWBNY13skIe6/OOFhLpwG6GZrwFMy8SdOoA5go2DQ0GfZEJqw0/YyaitppSCgzsynjRtJI6ZGzHKBLJjqOhLLnwMQdat8oWwvhgm2kBHa39x2ncXZKqdTH2DemR2yC0iwv9LxzotMvsD2861pnPcf1Y6SggSr5b9vxMblp7ytTxIqu3OQQSve7OrVT7UwgEyLzBZAvLT7sU3V/1JXbTf0taf/V1+ifDR3onADw4sdnwc1EBFn49OsmBImQu9YVpepGaZfP1Xptvv1GuBVeLpgsgFTKiYtRMHomlPuTvm2/WP02kMzhiQVmqxcvbcNRvi0Du3zthTIR4cCBTLmK0lheyYERH1cZXIv9N+QLY5uFC9tlbNOdHdZR0yoF+ISYIbGTGBNxbM4+x0ka8cdSc2SEUUuHN+NgnZ9s6cQQz68SWpxQYZCCiVlLVxE/HxB3ewYBqtxq3WDABLP1y9LgsR62PTImbkO6rqkd/Pr5eVKf9Djzd7fas6jGy+/8aBgFMyCbEfr3cp6iTuMZTSqUdkOAxwQQ6JNt/FJL+VDSYnvPsLbKQ7R6M6WaW/e7kLCPsdJFrGSopuOolVD/2RRLurwFYdatjHZWXI/hmFA/8P1wHMhR7XS76RNgq1i/7ESySY35u3czu7HdYoXk8PuKrg3+eq3yZCdlCqojAO73jelWVrTD/lW5kln0mb8IRWHDXyqGkOJUv2QY/glpmFbUIi+8hOy2XMLywUCbglnSxZVcvIE+sF03yOiAHFD/mqTyNQLh3KeQxgSMEK6TIk4J2UgDTsJlu1bP487c3thevk/dOUHx6RcThN8yscz+eMNQkvtNzHU3Uvmnt9E1ctrLabzjX3B/W/28bE3RyqMcBupd4QRtb/wFkweWgYA/Lmu1OQxYqd+dCxdUMCWe0Pnu9TpGQi8Se+DkGuIm9V0Z0DTG3G9YFCF5IkVu55Visd4SsZU1IvRoKL7maVB9nHCRwzvQYIAO0DjbSXarM6L45qtRLPigcTCFjKlGyEFJscSY8Lj+ZxLCJHf3ti8gh3CyBFIV9Ftt3aY+j7UifLgkw==","layer_level":1},{"id":"b3f66c93-71f5-4218-8121-064922f97876","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"FiberChannel协程通信","description":"fiber-channel","prompt":"开发FiberChannel协程间通信机制的完整文档。详细说明FiberChannel作为无锁队列在协程间传递数据的工作原理。解释offer和take操作的阻塞与非阻塞模式，以及fireOffer在跨线程场景下的应用。文档化带超时的take操作和takeAll批量获取方法的使用场景。提供生产者-消费者模式的代码示例，展示如何在Fiber中安全地进行消息传递。解释notEmptyCondition在Channel阻塞等待中的作用机制。","parent_id":"1b37474b-db6e-453e-9726-e643ca44639c","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/FiberChannel.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberGroup.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:03.883391+08:00","gmt_modified":"2025-09-19T20:05:31.053935+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIvdriA9R6w92mPNJlrB8vGxq5NtPGPToK1rZ6rGgOpAPZcG/kzJ7JCAoAlo8sYLnAfNWg3LeSsDUe6TaXS7hlVqd+HRBLjRJg/43I0UM4OtnW0sQeYnrsqYPUgeuBJ8OA8qg9q0cK1XmwAgg7nK1K7csdgmwWFsoU/RBWNei0a+Yf1PPIpfSDIPGMNKBK2pxX2CHzTzWRgqLbXyb7NBFqsfOmCzO7+lPn5olimXg9kzsxDU93nBenS8vW+i86jcmqQDIyXEVPxRTMdT03y5GxtfsxLLH3IEcVQplb+2Pa9FZgwmt8WC1MAqX1wBfUWJlYwmRCwni9w3Ro8TJf3MmbMI1r3g8Y8VvirSVYTlz8VozZZ7oWiCWDFhtMyhje9qD/f5dfwwQ76l/7AM7HErXgkWMGnPMxLbh8uyokEc2UQk8SPLzAxr1xJx5JGtoFQYzN8tRAfd2hjna4kQ2fx5ehsfnYdmEvVrBaHkRVdBa30+H5TRzErMVTiGb2URpv/qE3DA0F3HaV1Jh10H/APO7R4JVTMLcMMmM+uNlUSUlmB7lxsSeI8f2RgRN8fmUtn2FuQptuJL45YSLOar/XWUGH4loQPRyY9qh7nn95Is03KDaqe9Id9hr0vKD47mStiBePYPT1yZHJGfLKZRuuNZhWXMDwC3ssAp+JwjnQ+uCuONeCoMM+wfg8tVO/CI/KYb03nDWzyobMp1XeagKS7MTUin1jC0KhG+wDDNzFyuafNpga3dbLy659m8Dui6F13M7ic860Tl8dmJHsWcwHOscsKyvZeHMRFYKhy/hj5RNw9+jo79teIKsOMHvqoSHF/2UmNIvHhyrWslAz81eKPgedqmDmkKS3aW0GuuyyR82LSXtzPCM1tp5V2h59lBcqyFuaz17plqdNZKi18fVUgReiR8zr/3/lL+JEkPNakqK/aHONSa0ebEzKkZiClHR5h2Iu/pd3sPy7Ij8lTU1KGdJa1JAfY4eIx4KzXA21g8JxQlZtUZDKYzgHJ6NvKdJ7KrtdJbX+SuTc0nn423Fy7+TkD5yONg9YPWbu0fK2V2VW6OWyCuQ0c9lhu/eO0ckK54BEqLbtbrRa9qf3PHMKyiB0/577AF0lG7DSpo/JmNA/bKW","layer_level":1},{"id":"8053381a-eb74-45a9-9c28-32af4c030767","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"TTL管理","description":"ttl-management","prompt":"创建TTL（Time-To-Live）管理功能的详细文档。全面介绍自动过期机制的实现，包括TtlManager类的核心组件和工作流程。解释时间轮算法的变体实现、过期任务调度、失败重试机制以及领导者角色变更时的处理策略。说明initTtl、updateTtl和remove方法的调用时机和内部逻辑。通过示例展示如何为KV节点设置TTL，以及系统如何在后台自动清理过期数据。","parent_id":"dd3205e3-74da-4d38-a52d-e177f4ce68b6","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:08.771102+08:00","gmt_modified":"2025-09-19T20:06:47.032627+08:00","raw_data":"WikiEncrypted:eZsIjTn6uOo6mn4NKGaFpv91GZHtTxrLbowDLfyDa35U4qUYVV5l6Bm4FpKgHjTCtGdMr4dctbvVbJUyVZvKqeSrsK2y/7lakJngeLraIbaGK2/yCVeBt0b5zpD9cHr8tnjw4J0V3SqklkaW6/jUfIGHwYArYH4vxHU+brqknJPy3i7s4PaRynOIAQLyfPJy+1hlfuSBRwymK49AWCYSo5c8kR0h/6S91jGgSQZeDjz08mJxwCzoQzJX+T8lFYnvAg0ClUE5WtTdWy9RhCyMdp75zrDEO1+WGRBmihnfLVbepu/Kp0cz2IAsehasEpsjyesQ+aSA6oxc2m50W6htGkp7ssynObPh8/4Im5ZrsE+HOuU63YxxUtkuRwF9TceyF/I/rk903VO94R6LxtMSQlpOM7/FkTlcYos8fMWcYETYcQ5gZ/YQTtqx783lG5qv6fjjKfP9+sL4tgGXIB5L6zrci0H8F1u4K747GkEkXhWKhlnuzS+lsndf1HNYpLzXvNltsHlJxYV1okPmB9tCSLvyoJZxqK1WNblQhR/IcVi23suyO/bUW5mvnoZmCggnAP00hgxfu8tM1dFwcfhxzMsCu6jAZUd87w3zPLJcV5yqZ3ofg4yMhW/Hsq91UsNSKlfJLNeHNlYQGkM8ab1OcAPB1PrUdyN+TtyXyuxJm8M83Y0i/tXfNSmmI8yIC/+cloTAze22ISCrinAFbUGbHw9gc25fmLLLZhABgKXdq5uoQEJnQXIJSbCfeCBSzR6CM+nu2BMt8N6DKzlg9DTCP8GrOnIGN6o43vOgrsfQ17cZy00p9qRQvvUdg9L9Zz2KO/YiXhFi7duiEFIkwc4vAM8O2EAtqv3RmvKFL1cREXY74vF8NUPKx0Hi4S5zUn8WN/KiUXs0rjauZGzv22Q92b502PC5mH0/l6udaQF1a9lzOV4e0D7ftrw2qhrR8/tyUZPsMvH1DCgXrFGGjK1QJkMM+JEeAbtpC7NsVqA1OwjvHaDVrAk8r0sC08Cw1GqI5Pq6qSPEVd2nLK+xjTv4Y9buxUC5fdVUf4o6tyJgBq1jxd7F+9CDcUazIg1Unsv8Bkf/fHB11XNcBbw4hgOMng==","layer_level":1},{"id":"ff15aa37-316d-492e-813b-4ee36952aebc","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"通信协议与数据包","description":"network-protocol","prompt":"编写通信协议层的全面文档。详细描述基于自定义二进制协议的数据包结构，包括Packet头部格式、命令码（CmdCodes）定义和数据包类型（PacketType）。解释握手流程（HandshakeBody）的设计目的和安全考量。说明MultiParser如何实现高效的消息解析和反序列化。列举所有WritePacket的具体实现类（如PbStrWritePacket、RefBufWritePacket等）及其适用场景。文档化数据包的生命周期：从创建、编码、发送到接收、解码和处理。提供协议扩展指南，说明如何添加新的命令类型。包含错误码（NetCodeException）和异常处理机制的说明。","parent_id":"9a176743-6e3c-46d0-a3df-d292836b2d5f","order":2,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/net/Packet.java,client/src/main/java/com/github/dtprj/dongting/net/HandshakeBody.java,client/src/main/java/com/github/dtprj/dongting/net/HandshakeProcessor.java,client/src/main/java/com/github/dtprj/dongting/net/MultiParser.java,client/src/main/java/com/github/dtprj/dongting/net/CmdCodes.java,client/src/main/java/com/github/dtprj/dongting/net/PacketType.java,client/src/main/java/com/github/dtprj/dongting/net/WritePacket.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:23.417094+08:00","gmt_modified":"2025-09-19T20:06:49.770748+08:00","raw_data":"WikiEncrypted:y/pCTkp4paaDLjkncdknTvbuIqawRWHjCylPWBQk9KwgaCEwyq5mWvwa0Dfq/lLx7Rb5+Ga9ROAVF7ZQrilQg9nEg5BxLzP7FnY8wlVjuut13RoNm+2PhMIPKcrP7jnPoD/vJow1aXUgnydEK6jb+uz6ltdtPgtquTDoi9VZUZe/5iuYhfKoKfVxiu1jb33GulZld0KTgFMIYcsEYaf9JMoydjV2d58Rj4dQLE/uuZs5DGoeaDUN0SFypTfS96nozqJpQ9Ogr0/DwS0JSY4iwASaX/Tjhma7jj0UwG24acxzuqJY2Pdt5BPk4Uq+DKmwUytlZ7LvxzBpiSPAzMqzbdoqZJyNRVdqK+BYEi+FuVpIfU8rCvfNJwpscphVc5qEUXsdG4KtD08b14OqKCMhQxTQLSb/xA+EDFl+UFo60xIPLTX87UegCIj2m9JVwKQpBHK1bgrJcSIMzXOLIEZ6TMhHnexHxzeWvw0oWq+U+CqHsDsk0hp+rthH6RYuYEXD8R7SFkEeMsayBRqY2/4asdDMuYVQ796djYI2sh55yeCB+Y7iPwkG8rQQRLKJOHk0vUFhq17hx+3hucmgfnxt7HYUtE/NWA9uNAyM1mB2vFs8zp+6ufFUSxO6U3ROMvVIt3+Vlkc3qT3PQ9g8B1ORh46dW4ggLqww3I3S0GYc/C51Qd/EmVXrIXR57YBsI33adrzS4DxUD/IeA2VwZgXPJRPMjIMjV4DnQLmXQB8HIAeerCz19JIJNM32Xnyzz5S2cg5Eb9Et8LwzQSXEuWlJvHYYox+FNx8tA2Ijp5pJDAUnRUDdRxSWlAsxmiVjDVY0smTFU6+5T9C3SNVR2WT3oWBA0BiW5G1q3ejXLkKvQHQtHavNjM8PUzCv30aTGA4Rc4PvpEIoi19THGft1HlsNVUGC5RDeq+1qeocVUBMq+SSPA1/bGqxF9Tl2kJ7z542ZU7jooAexmfVCSgBJeEkc/k845dsRjkVXSeUJtfxZ52DDYcAqH+7XF2Kymgv8DxVSpBUBdjVExHCA9sYEYuTbq0TpQrHY33e1wRMbvK3Ggo7JxOeA62kOO5pSgjo/9HFYuc9LbpFDem9l4ZfNxhNjbkix75qJ0ImJfwrRUridjDoSnpmCyYaGDcy2gDwjDFT5einB4IRE7I5KgCH2fgsEXbW08w6SWKLpBQr+Un5rMShIf3sT+4THCKUxULIbomCIhRgo2kQd3jJHfmLXECouL2Tg7rVleALmYt5szYxbMYdM9xQY+r71APk4OMUWubZDxiJVr8R9+svhSExgPKMpB0h4SC0jOmXjdSF/qr5VF6nyG1JLC42CFNyT0V9m07JEePnAu8iIFXRXjVkNp+tiJY/IF0nLwU2afpsiy12SBKZa3cx73MDHiVqtTvVwZ80UMf8N+AYmT/KZMe92+arCedO74Q+HkBz/psIW4cMiVlBKk3+fLLicRZmZeS68MTWzn2z5TsLIJDhAFSBmRoo0qrcDhLxYNSQpfVflAoarf1LsOteLMLRHkmHtu90VKzUVyw3tlc/MxVkwa3Q6ORW9WcUIvPSbYMmSMzEk7q5D00goc2ZpYgHpWCpkK+aPte3w0sJb2JK++cRJDGi1vB2uhXC3QiRzPIPHq9FxXLmhfWtXacxS5UAVXAmej1iDoAS3Asfzvh6ELjojPPvnpAKWzM13qkycT0NoNUV102XilHT6bOaWeaVsDKMfRhM1DsBMz2Q3s3BF/UhN2pJNXox2kkBWBreMtenkQIKvz4pEE7OixZFb1S/ddSKmIBpEHdUfvu0YNuJrgfhLl8trWD+a04bK5ZtRkQVnqQSzp7ULui1N+LqC63y8G4r+G9bpJ4DbJUy61m7jo2BLxbEwOlbmZh6njNBzus7LoVAkli3P9un9+xeb5RvjqprnRYwD9JjTr+37CJDau5UoMXzlBbF6A==","layer_level":1},{"id":"cf56b85a-5806-48ac-a70f-9936b473251c","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"高性能编程模式","description":"performance-patterns","prompt":"创建高性能编程模式的技术文档。深入分析项目中采用的关键性能优化技术：介绍PbUtil如何实现高效的Protocol Buffer序列化与反序列化；解析MpscLinkedQueue无锁队列在高并发场景下的优势与实现原理；说明IntObjMap/LongObjMap等定制化数据结构如何提升查找效率；阐述FiberChannel在协程间通信中的零拷贝设计。结合代码实例展示这些模式在实际场景中的应用，并对比传统实现方式的性能差异。提供使用这些高性能组件的最佳实践和潜在陷阱。","parent_id":"c3a3445b-9a96-4deb-b04d-e6dfc0c51c86","order":2,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/codec/PbUtil.java,client/src/main/java/com/github/dtprj/dongting/queue/MpscLinkedQueue.java,client/src/main/java/com/github/dtprj/dongting/common/IntObjMap.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberChannel.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:26.424986+08:00","gmt_modified":"2025-09-19T20:08:29.91988+08:00","raw_data":"WikiEncrypted:9uOBpMbLX4DyZqW4us3Wm/rOqLdjcVET3noBff6vOiFrvvqNdtRgl0lRXcNMdy/LvevOTX3cgPUZ4ZFCPy4hWX6AeT8bvG8JPrE9Wh1v5j59QVqyJFaIf/wAuTDNiQKqxFpExlKHdvfA/cfyX7+UwsFTvPbSBM2lnbIA+81+bf0hNmt5uwUwjJWA+VLox4+6n8nnBe1/tFIODxZJdKbEZ7zxKIdRkm6mDg4FMrtn7Xi+NQS0I4d+qHcdo55QzHY7m3n+o/pyA8JcZGb/6NaJmyKufQsNJ30GXzPUfnL1MNDIT2gPBC4IRQ2SxunbQKgHqxShMXRj8qIEPTXvAJqcgkD3HkvxM7jgF2d4ZaxxlHrmyJdmgHnh7BjNWPtwgqjYTUaF+6Hj1y92MJxA1QzMOB5QWI/etkvKP41rKzZjM2BF7i1JzvXk7c47SUSjyIWItefMyyNcqoDB7FRBorPFIC9agb6NDyfl5eW9xKLnMJFQgwymSSgoxSTtO/MOl6MgPD3avFdwxfLBCsfUoKaDAj6lB2dUg6Ihia0yknzxA3d7e4FMB1qR8HDcpOVSsPd/qv8mu8rfaZVmiwVcZLqjQd7mt5exIVOBemCHgciRRGtMe5RUgeASwq6R1sjENnqISspInXdSfUfz9EcfzaR88Dn/QgP51iS4CiHaR+stSUBSkqNl5ZRKRXK47fQSyIAoT/zE0lJr5ZbLQdBoldPYxLreIZj5d7WSFPUooKBSj8UOzF3BNsAexKAc9fexgUDeMHGGbPGe/MsK8nLqaryazt2x+5VYvUrn/1hpyg6kPPBcHfnV5664giDnWj9KvIQXqf0tLZB9JEzBHfrT5EA/NvNwceTNHw5azQvrBtjkuQfljz3FZD1w9jvB5grJe1tQ90p3VLHXeKuKiUXfGKxDoBwKYvoMU6rUgy/spwohsucERpYrHJ5CEX/As0URTIWM/WOtiOKdjG3JC0JEt1Id76mAqldkroXR+rOslUOKamOxjYX8IBaK1cCct5tOMOiSo0X77HPWWRUdkw+t+PVxakaYoQwLmGfrnldkjrd/bQiIO7pTvAfdsH8U6tFu/RdjDe9+7xPHktFeXoF7v7lD27clu+AHr2KhhJGfgGQpcF9NzpRhEY0r0hGuS2LRa+zym2Oto7z/MAiFbV3ddp4yWKEG55PNwwLO90xDcPKmR5ifE4C+3giUnLPXanEBV21Ao4EVPEm9sWjKw/FPaLNjSjqKLR3T/D9kI47dTsQj7y/1DRwITqZdrbdPxNtuy5vhIBirpE66nVBN1hem/IrBNDsq/fu1cxG2aPOSXS9lWA1dU7JE3HxOL3JDo+dkoDb7GUVogjO1HaceGKtaBvh3TLf+Cn2m+fZtav9nGQAhm9vTQ/WwW1nFvvcIL9/UDD1RRY3ilLSEaeZTM7ZCfa5+fX9fTpMn1iqtNkVmGgfzTfevM8ynBJVKTzYtBzti1cQvwWx7oaaL1+Gd4PjVXFQigg0lObZ5ih/YfNzAZstpHnZdd13/Z7UU92vI+Nua/iXv","layer_level":1},{"id":"7844c4b2-2e6a-4eaa-b114-1f7f7ad1937c","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"自定义快照策略","description":"custom-snapshot-strategy","prompt":"创建SnapshotManager接口的定制化配置与实现说明。深入讲解init、recover、saveSnapshot等方法的执行流程与生命周期管理，说明startFiber和stopFiber在资源调度中的作用。提供实现自定义快照存储后端（如云存储、分布式文件系统）的代码示例。解释Snapshot对象的结构组成与序列化机制。指导如何控制快照触发条件（时间间隔、日志条目数等），并确保快照与日志的一致性。包含故障恢复场景下的快照加载流程，以及如何避免数据丢失或重复应用。提供性能监控指标建议和容错处理方案。","parent_id":"1c49d439-8342-4415-b0f0-a6fd50fd63d6","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/sm/SnapshotManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:43.882688+08:00","gmt_modified":"2025-09-19T20:08:30.139593+08:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokTds35VEooKTRJ1ZelM4bEVeiQGZs2tBXX463tWM3SIPM1BnN2aKgunroVMp2Ieb2UA/3J+vGnPGVwp+Gbtx1BPcB+HPac46gMWmzwuVfotNJc0DIP2QO/MRpIwUfIWLvmohqWjbH7Ys8pDWSpdsVGvyFK/R1PdDFor1AodvZO7lh9S5Z/SlfcOZME1Wcf/FPvbVvwoMY18Yq9JhB/WpwJMvyuMTCx0r/aYRBaGgvYbD7FFLipNnBF1UxjEXhrt7nAIpGo24T0m29VlC2CPgU0EodmX7cdulgDIoY+efM2i14xoD0WertUrkOJxEHJJ786iwmdUk5FVGd0I485JBe4UjXiudAqZ4vEzuvSGMhhwgx28+ZZ8FQ36lfjoyH2BWicKFhbXpqiFUxu2QCGCq1g/6JQCihtAZv6nhIfpWEvf188XGQ2eSO8yMXU0r+fvbEBfegT1xrghVNSJAfCpTr3rWd3MnFJT4xldS+RXp17MCNRFrQ7tF2KD2+s72c4EMbGOvnW4OncgBmDDl4EgAeE2MqI9cCljVfZL5rTbRgrH64gpm02IrzAToCVMVmXdyjhorFYlg7pfw0A0GECDdnM1UQpObK7WJfEiVxfqmObfuNZcGOSJPYu9p5O3Q8HnEuebRuJ3ZjPkd5n0vE0GgsAlYVg4Ir9F9pb2O6jnptvPSVSdk1oVONN/paBwseKyeuXYIrQ9S9RS+MdY7pK7iQkPY6mLLNVivV6yVFZ6f0nQBH7dZZ785SK4r2gbq8JkjkM70aGFtvfedB71ZkQlhMzqGZ6TObZbAFwQHexthjtltGQxnKVvSISy4NwvMn3zVaUcuXcWLZZOdAirewdNdjK36AKmiNKkhH/McOK9AQgBZE2a+Hdci926c1HjJAwYfW5r3+XgH04zYOXU79rGbGcfask9yoc3FHOfHcuuxuJPiFO4y+SHalTebGueCLGGs60bPi1bIFqsNeKPcYgAWuHD6Wou7dTRpzncL6cVolQcwJq+vFc+Q5ywdGBMOQZnE+JirfiU4SOZWhDDCFez/vofbhKMxF6BHdJm1y99K40EsQEmtMABDY/QqdbXeGBDoCmratqFfMa567M/g/NOeLDxfpVaDFefkwas0oAw/ov9jd9D2dn56RUcRSNBgZiFa8VuXpNeh9DmgPNPo2VMhLk/VGhz1XHXrc+OJIjioZUf0HohAkSW7RJwxP+QBf0rvGg==","layer_level":1},{"id":"3544f683-59e0-45ac-8858-e65721cd5422","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"故障恢复","description":"fault-recovery","prompt":"全面介绍dongting的故障恢复机制。详细描述节点重启后，RaftServer如何通过RaftLog的init()方法加载最后一条日志项，并结合StatusManager恢复持久化的任期和投票信息。说明系统如何决定是从快照（SnapshotManager.recover()）还是从日志文件开始重建状态机。阐述在恢复过程中，日志项的重放（replay）机制以及如何保证状态机与日志的一致性。解释在多节点集群中，新加入或重启的节点如何通过InstallSnapshot或AppendEntries RPC与Leader同步数据。提供故障恢复的时序图和关键代码路径，帮助用户理解系统从崩溃到重新加入集群的完整生命周期。","parent_id":"06ceb7fe-4daa-40df-bcdd-c4895064c77e","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/store/RaftLog.java,server/src/main/java/com/github/dtprj/dongting/raft/sm/SnapshotManager.java,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServer.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/RaftUtil.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:44.635986+08:00","gmt_modified":"2025-09-19T20:09:56.545583+08:00","raw_data":"WikiEncrypted:WdIGZutiaF4Hbe6C63vvQXOrtiW8p9ukPtXsR8nS0m7fsnW/rCqYDPwTqtPPFSBT8IWEmVqoa68bZ+UKvlxt+uaKLgWgA2d2EkNOwXTY03u8z1axKTzDNPpxvEOhjUaOvbaMvGYtMqZeW279S+QH37Eut20OMXViVQ2vMzMgGWyEfQpE2yrWa3UFmKBwhkaadGMdbCq67YbbATC1pXQjXKaerawfie7borB6HvuKBZSh7Lr24yD/PFk6GhU56sdZDjRJA0puDEHb0pPAHuGayxU7ylURncxRDaeVRbmaWdqTLr9+yODO0bQHXi7A8oGXqvfNK86JjF957AA5kBhb95Z8dDUriPmsCAGFLT2wKSULNHaUBk61aSBDD9+M9pmHghY2AXaS9ndY0iQ0Tn4HFBk6JSX8oi1/Igll8fUUYfetcUflQH8d6fjND8cUStPgvKbGeGaLRYWqKF8mpVaVNWCX0OXr4ElLH1w47iGVN1ty3TktuSnTzBtLYHjTRhbtfiLeNuyUKoPGgeKr+LMNrNfhq1MbdlHVSACPynA4DmJHWT9Q+iyDfzQLYCPpN0nQXWTHGu4ceJ3FDoiJFZfcP+2Of0MA3ZeYKdFCMCs6gYy8IijdB6mLNOIZKvaTxiflBDOX/kHILt2GoGCv+tFwYmJqbW/UUX8IVJxFd+8lcAonb4PwCHbmQYGmFMFUk79BmReUTXoyFyssX7R9oTBpdXfKRQjgz8yHbHFPnZKl7Axcd3aC3VddpwVQZKFbtseFlEyuBkv2BsVKqNrZZgFiZDkQnyuTYbeTe5yusDB4iSban3Ko8De9oh2r2WuVTn8CYibYmWCS2O3lNEyaiw/rrfSMf3gu/1GpXmYEE2GHkmP8Y+IjQJq+2huEzAnS/cfexZKEbTJVCHLNNxFyEN4hHlHxqY4KbV81aeBSCpapnC2GxtVCjmNxaaQ2MP9O53yfhk69BgiSI3Ys79VuSF8uCJmbRV30DUdVB1Ywhy35CZlhqfl9pSGqZYz4RewD+Z2dbX+R5TY5vANuFtwPBa1V+yTzUMmn+ALgSmC9LZn9RYn+o9KA+d4S8E2Fw+ytK//NZPgHFnMxN69DlTZHhIt+Y/xyxqdRJQf06GtC7Cdqu3EguBw9k0dJ9ZwafLB7HPq/LjeSz2AtSHB/B7a+lplqxu3D9vEpfqwHMaL4756eTZBlGGuTBn3ePtBsRiaroX941N6RLzygc+GjNc0uONL6xiM9xoTW1AkAwEO0y9QJoYqLR+W7kZeW6IYNiFuw1BN2PAKJxQQalvngHAihX8PgPbBtv3LMkAoeXHMTP2VtYlzwrYShuVgqrN+5F+gQViv8PFmT4eGHawW/GsMNKMRRcUMHttCojPLvh5pXXJIU6yq5dlfMjzB8X0XvioOXvy3v+0QnDhcbFQJTfR79DNW8FGHxNE9Vy2dA1kR3sTXDs+YGe04LymlXAlbjEua9o7BETeZooxz56kp5XsnWNPS761Ss6w79fcfC693mwAAyTvkZrG+OHRnZbepbMK1JYrlrajN71XE6EyGxOL7Thk6Z8F0/xyoVNoQZtdhtECkIJrsM9Ql/gMLD1xkFQ5VR1vejY4KT3y39rA8rycbNTWDsj4teGFwXRpAAV1ZaH/qc/Q/coGqQGZe6wIKVy4e1TtektYaan/9X7QPPjYrxdfLETNd3/qZRu5ngKshZgniBTlCNmTeJNdCXUNZtyIRcM/0HtCF1A518xS4mMAsJjItcTg==","layer_level":1},{"id":"679ac238-0b0f-4d08-86e6-c1c5578e3e75","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"故障排查","description":"troubleshooting","prompt":"编写故障排查手册。总结常见问题模式，如RAFT选举失败、Fiber阻塞、网络连接超时等。指导用户如何通过日志（DtLogs）分析问题根源，识别关键错误码和状态转换。提供诊断工具建议，如监控Fiber队列积压、RAFT角色变更日志、网络IO延迟。结合RaftUtil中的实用方法，说明如何检查集群状态一致性。列出典型故障的解决步骤和恢复流程。","parent_id":"91d17db4-e20d-4dc5-b6de-47fc7ef0e1fe","order":2,"progress_status":"completed","dependent_files":"devlogs/2024_07_26_raft算法的工程实现秘笈.md,server/src/main/java/com/github/dtprj/dongting/raft/impl/RaftUtil.java,client/src/main/java/com/github/dtprj/dongting/log/DtLogs.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:02.038718+08:00","gmt_modified":"2025-09-19T20:10:07.084188+08:00","raw_data":"WikiEncrypted:CaKOW8OSSWs4aEYk06Hu0hGGy7zXJE5t3XZJK+9x87X6q4zHAytjLlmcpwH9PAb9okQW7m6Z5SF5zgqYCgJVTZBDUGT9ZiSwyPx59kqJQRYcuhuOHUD+szCqbeEGQ9T8vfRuKR93eJ6yqYTc3sJgR51jNKuLCkiOdqE6rzBC1c9xMoEsVY0sZ3mrxUCiRJtJ8Qf9MAcRhl0WEEthtyepTBZBXui5sZR7rbTEXRA7I1d6oTTDC2HD6j3/yADa3eNGcgZeze2/L80ehW0Fyz7tZhvpcgWGQKQWFsB0iI/maNKypREQ/sPZxYtH44PodwAggLOL2q7sKPX0Sv9I32YtkWL74RgESQYxbjcUA63GS+ZeBdV9xr/ebH2MbKGRFvQ/lwlp4rKhU46olMcCY2TottSyMPTnCLGfj7kFIqcMSbDphYRuGuBcRSy09OHpnvN2tSE0/HKG5b8BxbUNtTp1rX/b9Wf7iWfSWY3wI19+hQqRXSJEuv2QKsuGtQ7PL9QcUeYBQDFiJZjzPpL5o0G0tjZZJZwpcBLredXcwOfTXB72xLYYlula6nmTU+v2UaVKL9Y4VhsPmu0JIzCuq78o7a53Aa8/3PyW7FsY+AhcOoQrSAaUzN4B6c+xTZEGnDCsqfBAG3313SoFTSuQgF23FSr9X6fQN7jk9UjH3QrdIE4PlkLqLF3JW/eKehU+2AXT75rvbVtzhCYZNnMr8zpku5BrtLZF3qkSQU+MVFzTxtV40kDx62eGsqzUQZYvOYW+P4Ubll3jknKDxIYzsA9pZ58zIXMpCY5nfmSScntMtX1XYUTqoQo9rogsku8NSd2wdnHFcnje1unJNAIdcYf+MsMLSBqp1i+Cea+m2X5odxXtc1/fiaLqLFXZ4mpxHTpcOQYZSVawCOiOg3JmuVaqq20ZILGIm1bwEYM+cHOIXPk8ywoc4JkNYq2XMhfHpSjONc9Hn228mD9Hv//2D7yIR1slPMq0Mbf70R3xmJpd2nvg5BdUIRrjIv08imbvWkR9xMks+1yxHHnCPpcizLUieQlAuJeBD6cB1/YeJ9XX8ReyF+CXf4DKGatrkK3UGYs+mh4BK3lea69PnUY8r6umAD/nCNgygng9fzdE7mRxizZhAoOndVYxcGR6NFpb0p6McCpuioBCVGl1eTs4WrbScUWHnJi+8MhjFT1tWqvGcFnImGw2jg363DqxBvLBP2Pq","layer_level":1},{"id":"c3420c33-2d81-4c37-be04-26bd77984b40","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"NioClient API","description":"api-reference-nio-client","prompt":"创建NioClient网络客户端的全面API参考。详细说明其基于NIO的异步通信模型，包括sendRequest（同步/异步）、sendOneWay等消息发送方法的使用模式与超时控制。解释Peer连接管理机制，涵盖addPeer、removePeer、connect、disconnect等动态连接操作的CompletableFuture返回值处理。描述waitConnect等阻塞等待方法在启动同步中的应用。阐明ChannelListener事件回调（onConnected/onDisconnected）的触发条件与线程上下文。结合源码分析worker线程模型与请求队列的内部工作原理，为开发者提供性能调优和故障排查的依据。","parent_id":"344457c9-a5dc-4d36-a481-caff6dbe3ee5","order":2,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/net/NioClient.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:09.576016+08:00","gmt_modified":"2025-09-19T20:11:15.4345+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg4T/66TR/6qp5F+7Rqi35X84CogvhMrCR+lEkMiwkuydZ6BMGftkUJSXsA5hGE2lDcrpxMCiyWIg8TXm2RdsnspOzc+cF/AkHrEE3hOzOYcw6Mjok9DZiHArw/C2NBi/GPney7PH5UWeCx8FnAyzvOXYJENV3rFxI8r8IDg8++cOBAIWyS5r9OWDvtyc/SiV3ETjDEvWCM1CZfq+4h6JdQ/M4swZK6R5GCAq2Zi25974FYv6iHp6oF2u/63CDOF5ae2KN3sgLPEIp7CsWMstJFWyvAWkvv8ARWgYsQO8p02i7Ge/Uhn8Bn+faDxyK7hm6Vt8V4PvIU1cvg1swgGpv+qOwK12uYksQHEFFtuhF8OpMGux/TaUUo8Aoa918Q5Ob41T/ZFDCOz8xWKV/aMAbBPQyGK0PygUdQu9lWVCe6eYinlucbES+qMzSeCThY4PpLx5hmUwKrw37TEaF7dE7w9Z5m6hJd93XxFirE4YT0jq92PU3f1iipiaVEtCnnjnJFj7g+729iqnqoOtWGY4s+NtXSmHIgATTs2ihvBix/7Jy/IrmnycGpZXIKypgGoIUVpPmyDKN7aTEjsmCQ0zWq1d6VaGF4kc3OsfSBP2WJ472Kx0oPrO+ZOpN295uCKg6die+QmgQGZzHGfiJjudda+BXEJ1KXrqLvutHVli8BXG/JKNmf+WeGqxYO+Q3ihQRYQbYUyRDnlISZS3ZXott48KwWbYNnctghxGS198B0F50mYkSrErfvH1xAnSaegqrwC13UMUSAQumJf9BkfKL+75ZYEz6xYPKWkr+Xl79sVsyw955s5oOsOvtSZ0QCWxXJdVN9Azv4+O7CdkEpprek7rYU3gJlbA5TBKZAtIgXscmVp90T4yWcJBosJ0EveYJ0U6Knexr5B2qf9wboT1eVRlJjzqaHgczXC3Iy9fwSvjlAg7C/SUjdYQSdw36lQlxYAHRZbYYUwCnSGO1FF96uL5m5n3su78BI/CsY9M/tZV7BTNefL2VFXpx3TQtc1PQBN1IplNHcVTfXMayLGH2/oN37JGc+1ElfJQZ086eU/WbvaQ6Z0e5LNtUNZqIj8IHnMgMHD+iw7vrEfK6T8M+T/HbFn1/VdWzzFMyHvpEhNIkPRbShYzMDYBSLj6GdsSNaCyt2+sWNUec0ETYNewsV6MoEPobl/xmb+tYVEBQqyDGwFs51hjW1ENFueJZKMHYihtjYp3DA/a7diw8HO9FWNDFJnV/JWVDklJrP0VNAxX","layer_level":1},{"id":"0a27017c-40ed-49f8-a178-576a1e2e8585","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"上下文切换机制","description":"context-switching","prompt":"创建Fiber上下文切换机制的全面文档。深入解析execFiber方法如何实现Fiber之间的上下文切换，包括currentFiber的保存与恢复。详细说明FiberFrame栈结构如何维护协程的调用堆栈，以及execFrame方法如何执行单个帧的逻辑并处理异常。解释Fiber的暂停（SUSPEND）与恢复（resume）机制，包括resumePoint的保存与调用。文档化Fiber在不同状态（运行、就绪、阻塞、完成）之间的转换过程，以及Dispatcher如何通过ready标志位管理这些状态。提供上下文切换的性能开销分析和优化建议。","parent_id":"26e5eba7-e2ae-48e6-9a21-9fc2c11eab37","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/Dispatcher.java,server/src/main/java/com/github/dtprj/dongting/fiber/Fiber.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:28.553202+08:00","gmt_modified":"2025-09-19T20:24:24.589867+08:00","raw_data":"WikiEncrypted:qiOE1k1TA+YNTXi1/8EeGoIXEJAa6GyuHZUwxC8drpiyYrbXwzQWUHFPqx+SB0KQgoD8fBzPmg+vRVYDb3YlCNHFsUXt9HAK3m3ml+MHktytBRmCLh5Li+QEEHzW1Ng4dUTIPvKfgKa2qW9EXmjI1pWKUtcge9g9DVm2CJ9Pch603S3Yt8eQo8/JeO/DqhCeKxDuTYF5RqIIcSjAvgPwg8JtXdFCh5dueU8WYMrbTsWPT7g4gaA1OqOYJTDyFjsmT1Tb2gWENbuIsqxpxzBbnQYF+wEZUCwWSI/vgOn695b2D6aHD7yf7y37L8XB+od98fJvzFPD2e+h2RfKtYp02ymm1i8hb2VkaCuPQgaV7HAulwRVEySIdRsE5pHMNaXgRbZ1ngbNsyCSr3tKg9do7yLM6xXUhP4+Cn/UVg28iD3+obIej1Ce7GpDEVc27cqiXdOetISl9oQq2rpWRA/gu1XCrD6DxtiAVQHDO0bf3DWw1z55g/THx/Nhj8y1hNuwaBa3yVgbSz+zbxbKuStpRmVtvrN8HBuMr10RUbqDQvD/IspJFH3NAobdJC67g+h8yr9RSO6yt+4lJcQBnos8Or+/bmEDNr4lqHVrqhvw+MuTQS9BbUaSDgH9MAqNGlfJsx5W0qL+hRyF6EN3Sd6u5yi4JhWWSWdNrbyxdB/pmGt3lDHsAXhdM5SGI+/d0q7RH2UrAxeHHJBCFNudzIY1okowIOZs+OA04GDLy5MWYJVgucE+piHSjVZJ+enWXrVN8qUOn9p9bj95YP8k+Uf1OprrLMy6KWcXGnn16UPtg/5z63YDOXxmo/fjwAbMBaBlHFVbUMgtQFaEBvxxpmv8yZmGkgG2U2BfSz2wJLlMCEQFjVKhkWf7ioFF4aLzZwNSRRy0g2NM3syIYuZfxFjcDCjWhoShoIWCpiWdk/CJB8WDOoo2Iw7xf4DAsH/3aEyQSEWIgRQlMrBqKDyq9XShKE4fq/M3FpK3NQTh0ToPPu79y6kBwnh9S2M1CYo4ORYiwTyGY8VBuUjO1g0KqBnR/SgHMbg045648IlmzYPEtiQ85ApSmYpk61CuWr4k6nj6efVAhYgT48dziATClSfaPXNWofJn8iA4KNP3j4qRgWxm7JRhOsRTO8Pu6AgjWuUYd0/fAmVSPk0Vr26DVY9bs0nGCcCAdUgAno9/Q4D7o2Hoc0OaQCNjm93/i3SL13FHHZONmMQPEbIdilKeY2PH2ViAUaRctv5vRjA1HxIhhxQhT/EjD5GmI7EAsN81CxqlQoVzs6h+sYRQYwZ7Qr4slqYnfGD3+RlYjo82nBInZ3glZmuJLNPunqQGQ2evoELg/90XyXUFjxNpaG9F32QfpiHYvsJab7pOAzc8G4bfYsY=","layer_level":2},{"id":"c8a1e407-2e3a-4fea-878b-d5bd9f310059","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"配置变更示例","description":"examples-configchange","prompt":"深入解析动态配置变更示例。说明如何通过ChangeTo123Client和ChangeTo234Client实现集群成员的在线增删，展示从三节点到四节点再回退的完整配置演进过程。解释每个ConfigChangeDemoServer的启动顺序和角色转换机制。提供配置变更过程中的状态监控方法和一致性验证手段。通过此示例帮助用户理解RAFT算法中成员变更的复杂性及其实现细节。","parent_id":"7a2e7732-d457-4418-a948-36e0a2983324","order":2,"progress_status":"completed","dependent_files":"demos/configchange/ConfigChangeDemoServer1.java,demos/configchange/ConfigChangeDemoServer2.java,demos/configchange/ConfigChangeDemoServer3.java,demos/configchange/ConfigChangeDemoServer4.java,demos/configchange/ChangeTo123Client.java,demos/configchange/ChangeTo234Client.java,demos/configchange/GroupId.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:31.036959+08:00","gmt_modified":"2025-09-19T20:11:43.595581+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbYnO7DPAE6SufDHnYomnjxHjhRHOSZIvki/+GNHr6HPobch2pGIqurN9NUWDo6qg/NZLzo/36iqWrDN/WRKEqDs/nofjSDMo7abKuy4IPBgsHIj60M+S/N3tDruIegsG55+gMcgZJvGW4zooeRVex9WiBboIzAjyT53MhtsQxiJRjtISrmkwY9Gg6RZJ+C4AvnlDLvw8ZtElRm2f9z2oF/Wx2CXSHCw/4w6f0J3U6tUAykVOIXiR3D6h4FlaC82icmLdZVWpbCJXoIxptowTLzvkTTwZqyeJpSGxdH+jb0YB0AEaHIM/XQZEMXGgWxWWD5AekfjBVpBY9PCw4oJLxa47xjEtPImZuvShAMq2y8GspDeHQje3K9AiV8NRnqcrJ/spe7tayWdMbLXfkGjEKqJ0AZZSNpqooG84axASg2WcCayrPJoVf+Kzjh1f31IMZuq/e98tB/cr+uajEAsscn4HTAHvCTQKQEQxLVul03D+4mTqeimuBAEzmMbAZkooCWuq0gy6+jNN9HYitoQMdwAgsSDvGh21K+PFkUTVKy+cR6cNewKU1x90CkUtBnRDOTbqOKCU0TWdm6zJXoSSLpSn7Wa+UX2M86MzKVN2G1XoRsWgQIUsW702JvPSqvBXWnRBni9h4BDJSgfMe8oziC3do5mjMw3B4G/0ZG78PE3WH42QpZAVai5CieijxhMW+adrsSfXOlDlKk12hL97A7vqumoOpbMREJAzBeTd1wY+vTljJaPbWzk4AnM/vW7U40nW9VG0wtKMsrsPekoMmBpms84sCbeLR5/Y4edNEpPMfh7s5Pdi1+ada4keZsWyDY8HviIYWl/f2SMiz5PqbKYDlUZMiMgwNZmAHQVWc0o+TcLPctiU31uzTMqwtklLsyEJE5tigLGWM9w9qyWqOoNXF5yS+r9CSZI7Qu22rOBDRdSVbbktocIC9wHVnBO09vL9Fia+aQraZ4728m+/cXrRt/27WyElE1OxcQwrYRBFghmSvGwmIUibVRDlQvuF/h8eS/yUKlZ7v5oYtdcG+f1hfEZkoU0e1vdfh1SNJl5O+kNU8UGTJYeffDM2yW0KOLp6X+jdoxKFsKuCgT4ie31I0856YrRZ7FBz39ArOAYbwwNxgHozAFgnaEdEzyPSEaIIlCHvx4CNHGwgLeNQiC0LeqmUdNjTYx2C4gYZfh+M35btmaJmQu5xP1ewL5At7PbdKBzStPh+9QWuSQiHsMofP0KDZtqKKZ/gTo3If0r83rb6yojsOaBReoVJE3PLUy0Azh5MVsfDwtQzxC+Os/3qLXTHO/dauN83fNj6G7Z8ky5Rv4X23G7cYe/flUpKvA==","layer_level":1},{"id":"209ed30e-b6b1-49f0-9d61-f5d0e73a2d5f","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"条件变量","description":"fiber-condition","prompt":"创建FiberCondition条件变量的权威文档。系统性地解释条件变量在Fiber协程同步中的作用，特别是其与锁配合实现线程间通信的模式。详细说明await、signal、signalAll等核心方法的语义和实现机制，包括与Dispatcher的协作和等待队列的管理。文档化多条件变量等待（await with another condition）的高级特性及其使用场景。深入探讨signal与signalLater的区别及其对调度顺序的影响。提供生产者-消费者模式、屏障同步等经典并发模式的实现示例。强调使用条件变量时必须遵循的编程规范，如必须在锁保护下检查条件谓词，避免虚假唤醒等。","parent_id":"71615119-fda6-4b59-a7e0-ebd58e14bef0","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/FiberCondition.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:45.352477+08:00","gmt_modified":"2025-09-19T20:25:45.061372+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIlu0ECCO1oORVingqS80Yvu+0xateToZ4vlIIFKCJYeeY++NiGU2sGeidUSEFSKEVfFobdTg8NAnJM53Vhv3m4eNwFagk7zpxMVN2dp4YokAYMAQaUoJLpviJvz1YazpLDaJdGF4y3zBJFyQXpS4dByFQFX2CqKLCVEmmLJeO+g1P5LzwHn436AXj874KijwJjwSpUwtyWeBQkf1tTO7d4JybtcqEvduNmhWoPd1N5CzKKbpIfNX+nbhwXWTuZrqckQeqiearZIVJ8s+Ea5xK1hXdU7UbDLgkdhd8XbeUkDqG+QyYCzheEZbFT/WZzaCgbbfsqmGS8NA/8feiVHTgqmSv3obplfwFUpd4FFfH3Fs+uvzFntj8R+Qq9IOvEM1A9wCt0CXqoAIAxOQW4N5SGBOH6taSXWxTrs9+cY4ztwH8HPuEMLAOi8mUemU+quqSBj0gmxX1PMIGx2a81htm4c370k7c4po6BYkQHUYuQqseqQ+GqReMVr391bUdAzSGt5ASO8wOvW3PqGo90up+lp5rpMCutVj2qw50h8lUIPT3udrY9E2QZiZ3PWK6im+lb8GPAXGpCe6TsoaaDlpiUTZaeO2UqqLGygNZZMCM2T7RLLvEbf9V2vr8uhyZ5iqswG0JXr0cKuUJeNKXpOIyVQ90ibwTAedJsc3fNyJfdc1iWNaCdh3vfYn6X8XaoV4qU10P6f7g1YRvjDoZiQN/uH/WM0uv5/kVBazmthr8ic2r/5riPJ/psCan1hb4nU0NmCR9IFV1d89WqlN3wmTHc+Qmw440grZBSgxeQtEpa50foZNXcr6/z6DNMBJ1sNtokBDjvRPawZeMYCNwojvKay/YigsqJspf/vlPKHkkjmWyxGto7oilVdZxqTiiWbtydF+L4H5WH3d9P1tx/3OWQ7G5do62VHsBjnJluzU3lTw/7w1AHcHmLPGtrI6Wd32YUkvdUxbE8HYvZvCcKhqDF5M2CCddnEUbdISC/mUu13qx0pc+lWNzqt+GWyst52p8iTj6KxR4UNDhkXhxS0crA5EaMvzoKh1tMK/atNJN6KNb7pf9rlNqIcHLJaU1N32ZNwrgPlvknIEOWXSeVAanNxrMAZqnzKY5Wu1ltdw2VzOdbKUxn6nksw4zdz6RbH6kYB7q99uVhkh8bn4IR9ruI2aybSlTL4ydXL0nwgYOG1xIGye0tw/RQyXj/5GbjwvwdGzhxL2kND9dBQc8wEMepSg7Lc9dObAdhjcnY7w/HgqOgjZbgtzTHDTRbUTCnd+uoVhnXTZSOxiZ0b8ZVS9+8A=","layer_level":2},{"id":"4f24c983-2fbc-420b-a4c1-ee366efd7916","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"过期处理与任务调度","description":"ttl-expiration-processing","prompt":"全面阐述TTL过期处理的核心机制，重点分析TtlTask内部类的execute方法实现。解释时间轮算法的变体设计，包括ttlQueue和pendingQueue的双队列协作模式。说明MAX_EXPIRE_BATCH和MAX_RETRY_BATCH批处理限制的作用，以及如何通过nanoTime比较判断过期。描述过期回调的执行流程、异常处理机制和失败重试策略。解释shouldPause方法如何根据Raft角色控制任务执行，确保仅由领导者处理过期任务。","parent_id":"8053381a-eb74-45a9-9c28-32af4c030767","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:52.987556+08:00","gmt_modified":"2025-09-19T20:25:30.347921+08:00","raw_data":"WikiEncrypted:OhxIaTgOxq4pnMd67gKjbM5VNwN81NrMy8a6Yjkk6KjjOB0/YJp3OzqY3p+KFeTQt+wDfhxFkkLg0HspijRhTe7w3vSiOKHU+uoL+mCLqmBaPnAnQ+Zk6tX6C4k0sxNWwvQcejfADvl5OzmEmOURmoah9vpLm/0ickuW6VlTmz7RpT2WjBaRgTnScGTLqqfzvwvEZ9Z1mNjT1V5s1SrHr+jxluHKIPgUN5EoKdMD7/bzLTCjfgnTCpyU15fHoeuSJwvhu4XogPHsaX1U37Un4SmyMvfbaS4o1tC8mAxr7HIYNAXc1JE84/SiuAzRy2vozya7FkG2W7Ajy21P7tzV6DsDQD98Y+R0BDEranQV9b3tW2GLMoIKP2aJ2YvQ/edigHivjjcCFvHZm7q4Mj4I28DeRIUVE+HclcWfqnb8ei+AjUbIJvXCEe/oMBhCZKTR6dxMfaQ/UdN1q+YGnDSat1TATTqXifSLPy+qh/F51vzGG5BrOiR9gFCgjrdxq8Mz0H9DDZXQ2VyRJ4NIzmgJVJnbKq/qIeu/qto4RBLfZPi3kwBRSnmFBp/XG0FSscwMqY9a6cCY9mC49HVjnLmeRtp+PskXvOmXobZajrpklozqQn6PaddHqVog16fo392WEml6YODvEejc8GdIzHl8l8Xtve247j21TQ3id9k5ugkcxJT43mOz4iTuuhOeanaev/aQEFnLtL3ol8N+/xkRGLD/av+d88E0WpwgueOpCsha0l9hm/KkXDRD4M0YYEyGMDHpfQbxQ4qQtmAxd2KAsz07IU9xZcXUDH3WKf3Za8Docdv0+SZKR5Hj8wZxY6vv2k58IRVH9T5qsv0g2l82WW5BdomP6LCMIThUL+oDKJvjOGAKxoV1PvUoBTvZdjkAA1YgPjZLIMOKgfY7BqFnvzdyQ7Z9Z7MVyBlY1zhu5MAGXJPK/IIQoOU9IdnO1G3SnPNodO/l3spySzBiIoM7J5k1CO8+d/IZjZzIcYTzLsINW5JL2SPU2oDLKpffB4xX1vIEFjfvpTj+uTrsKoMoUEArnXLrqmzHqoIDpWNLZKXvdpqtR4W9+UGnq2wrlJLy0kWfM57rxV0UGvKNnsRqRA6SVwAu+N8vdxMzK0fIgnE=","layer_level":2},{"id":"460cf4e3-68d2-4d95-8975-3b666c6afc59","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"失败重试策略","description":"ttl-failure-retry","prompt":"全面阐述TTL回调失败后的重试机制，重点分析pendingQueue与ttlQueue的协作模式。说明retryDelayNanos参数如何控制重试间隔，以及MAX_RETRY_BATCH批处理限制的作用。解释execute方法中对pendingQueue的迭代处理逻辑：仅重试超过retryDelayNanos的失败项，并限制单次处理数量以避免长时间阻塞。描述retry方法如何更新lastFailNanos和expireFailed状态，以及roleChange方法在角色切换时如何将pending任务重新加入ttlQueue以确保不丢失过期处理。","parent_id":"4f24c983-2fbc-420b-a4c1-ee366efd7916","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:11.809789+08:00","gmt_modified":"2025-09-19T20:35:38.536441+08:00","raw_data":"WikiEncrypted:mCNYMbEeW0iU03nJIt9zXRlJzYzQibYa+WgZVr7xS8OWopGGpFOvpmyWPuTi++bKv846oeBdB1mmUUtq2HFaeHoWJi9g1E2bOqlL8D7hpONIFgAUpwi0n4y4SfbNnbrefKznx+dr9tE3PM+8kj3S162gEPZwjSUr1Y8eFL7018YvAgz/IdxbJXqmUzLzRFsIEEWJKkNWOfgWpq9E7gObsP8LBJayntzmMFfkD1n00tzzQHUvFwSHF1ihCTWxzIO8IwqCa8zgNztsWK5nxbc84kebaKVkaMW8kqVg+CqOvb23atxvdVBjTEvSKH2mqnO8o9KQoYBEIV3T5rCKIA8ZDx/PTDQMVpyPb5f4eSNFP6fkL7tWXzq0qycLgZVkEW73HtUsn/nB/teHtB1oICX+loMLhgeuDGLeJrThY7jv0ZA67Ot2lp/r4VRUQQq63SnsFCYD6ik8PXBx6tI1TZYVCTgakWeGSJaqwSJyMpo8o3kFJRbNpUzCPFuwnCtNSr0VsyXO8d6o3Kjc8Xg8UyrkGkUxSd9WGVvLaYHJI+igPUDQQwyv/jMSNrkfnNkxBIZvKos1VPsnSpq3te/8dSw0mKreDoH1viy+N48a2KuudK7lGANgtbAtPYvRABlQa1DL6v1S8ZcwoYxzkRYEdNc/Yyt2s0RU7N6PNOAhQX4sGNSa4THtofOb7GUDWgZ/5TdKGzh06AhcqdjX1pAg2T48STZtT9goxqOdrDL74v+1+YNM5bUfE94GX3srK32Br+eNPl/JrGnOvAlGYDbi5MOmhJwjaOgyhMsV9cjWxameo7h4z8Ofp+C54NswCtrfg+UgxOLQdDWmAjLGVJsP3/Tp7yCkiA614N3ZJp7zPlxMiz99Apyk5ZVt6WJKC1ZCHYV+nWogfkBiWwwd0cCzZRzco7kOGS1B5jp3PPJnIRViaKWJgXSxK9qdEZkqU0vE6IYnxp2FiTRpOsvVZ91FhJ2rA9fpUZfHjvOVSrLCpYsmxpU79IKxjaxgoiD0RmsO9ZP/brkekmonsTLTWAxPxA5f4V7wj67y2dpK3R0wgAdGH6TapTVn8SCA9ZNjGAGZ8bXp2EFLRZVD/20uwfiYDW44ntj4YNAFaC1MBAihJW7J8q3GsjdmWwMUdWbVlQ8rzoWzLASzNYpToeexbRmmwwuNFA==","layer_level":3},{"id":"6addb4e2-d8f7-49c3-ae08-c0871142993c","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"通知推送流程","description":"watch-notification-flow","prompt":"创建通知推送流程的技术文档。深入分析pushNotify()方法如何构建通知消息、控制单次推送的数据量（watchMaxReqBytes）、处理网络异常时的降级策略。解释createNotify()如何根据节点状态生成STATE_VALUE_EXISTS、STATE_DIRECTORY_EXISTS或STATE_NOT_EXISTS等不同事件类型，并说明notifiedIndex版本号机制如何避免重复通知。","parent_id":"19ed560e-f4af-496b-a7b6-d4ebbf134e73","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:15.799235+08:00","gmt_modified":"2025-09-19T20:26:48.748494+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OVuM4J5EhWPzMgauxtbi9U3ZMF8LERLNKMx16SgwCliug8G+csNHVD8TgjM++MUOf6Kp0rC/tovC5t+3JAA7Mrw7r0UTozAI8PMQf2spLwJWF4fPDvON+DeVIiFRhjA7TYq9TYnELOmfcE2OBsH6z6Cbf1FyHjQa0uY1VMfzgaMNt6ncGnp7UibWzAwng8z7WeR9G8c6dxix7A8cSPfGPs0be9Z5wn24mNDe51VOI4gpk2a769MjZCh3sNcU1ICqb7ipkXDA7worzhQMuogFni/Hj8boO4Fws94B4z7l8vtpcOQVg/tlA2QK3IflTV3kdWUZ5pB9i0mPFLYlfPiCstcRRTmCC2vMM8NZmGehHb0c5q3yT6CTfj1QyxxUjOLWlAxaTzMd+xxFE4qismnFNAP5DxCajWPQMw1koVYtyuOZYQMqyjp9SAkbNPoYTAkHre7hro7wNDgD5NXQLqRJBIOzl15d7HypIBn9/QOs7z3OGzzW+uO8rgdjlIL4HA8lBxV5pGvqYbrzkz06RVNyfL6s7eYiggSweefQ4qnuDXKTrjjGQUjRvCc/eu/pGu381vRBoWJJDsx7yFHrn9EbyaBBVD46bv5ePZxpD1go2V17j8zMD7L3H26qeqiGVrdSvSue6PGA7LD5wko7tn4UZ3HgOeR7EK6njtUbL4MKKPi0YR2KCxFpa7DpFRkYWuahPiVP72pKCH84MB+C0uATaBU+sDa3Fn5SgIV97ylXhP+TnxMynynGPbKRRD/D2SiBLVvhhpuZ8pFKBUiwG4gMlKW7YY+rnpYicC0vDnpTLxe1grzbW05QKo1YvP1MSbPh+cT6kYUIpCcM0yd1XcHJPVVPDbyHbtusq7f2aS2nXWQfjiagUQLTr56LBb6Nx6N9mmFAyih5EsqnKJN9gdiyuzoJs63B/6ntlq0sQ0W6prTLmzolLKkuwHV9p/depqptfg==","layer_level":2},{"id":"c302cc0b-bb46-48cb-b1c9-13283bb2145c","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"状态同步机制","description":"state-synchronization","prompt":"深入解析sync()方法在客户端重连或首次订阅时的全量状态同步实现。说明syncAll标志位的作用，以及keys和knownRaftIndexes数组如何用于增量同步判断。描述ChannelInfo的创建与更新过程，以及needRemoveAfterSyncAll标记在清理过期监听器中的用途。结合代码说明当客户端无有效监听时自动清理ChannelInfo的资源回收机制。","parent_id":"8d04548a-2c0a-4275-9eeb-abb529ec1fec","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:39.17327+08:00","gmt_modified":"2025-09-19T20:36:18.093404+08:00","raw_data":"WikiEncrypted:29DQGcj0Xkj5ar8OataJBOvaI3a5+Ax4fY8uwBjIKqODn51KuZI7LJLQuyYFI+FW+riSZln/+vNTZ8pp5EqejQh8sdPGYulSPPp6Wnme3GltqyJAVDefISG/qhFVDR9RtiN0JtePXkw3NHtL7/ZksazbNJ1hm8sRluTMXMxmsHxHdczFfjyTu69PTPtbmKVtKBPZGBxlYa41rZkJmM1zALWKjtCj83jG/ch3uBO5DFecbpk2eQ7CLYC4vCmxdnHRjoxmkoAxtqqoIgLcaV+By26v/oz5sQ7A+VLjbKaUQGWoI1gOsJpZNaugT6KxAk7ofCaJuoAudoaBPZtcVWPh+I0bMGO6/zdzgi+hv+Y8Gn3PzWTIMEVqXjkqKQYUB94u/Flu/rYtwj1idK9FB6Ffg18yCJ1aQOTM86RoUoNQT1nNnAErXMkBWtaDT9zYqs38rMgB1SEhT2bYMbFLVmosLzdelinlLWmKtCjSjqjiIvXG5c4irZddOjfJ5MpzJti0h87USB2XJfL8xQ1O11sk1L0C48jEp0bVTNc6NGmzxB9UUBrsy+jw8F+dsfJm0XX3BH49z4KX95QA4G42EWr2BBZaPk5Dxp2Ii+Giki81dPWp0tX4w7LP4UxzDk2R+m7OD/c4vQrJ5K2687YvlBsT4aTQfFoopEald3FnTy+CpAiFt5Cc9o+9OLIZiCZb2dU9L8+nAe9NcuW1x+Ky8h13wNci+v2n+82DVtE7ofoVwEnobNLsJ3VnhBiOAzX2e4mLD+n8geoNrnKfH3q5GFOwpMbbP/lwlvXsYL51YPqIsNlMAczgEVKRlxwhDzkqZojCOKU2Kp5KiNUFQIozadwdXDytdTQm0aj6U26SE+Yp7RZ5kpKSfZ+mXMouHNiNWfenahhBPsMtuoIdtO2OXrId21oqVNd3hpDE9mbEPkOF/AI+IzyocAZpsa1o0i80gGsh","layer_level":3},{"id":"25e5a5a4-e8d5-4d00-b18a-04e3d6fc6465","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"通知重试机制","description":"watch-manager-retry-mechanism","prompt":"全面阐述ServerWatchManager的可靠通知保障机制，重点解析retryQueue优先级队列的设计原理。详细说明retryByChannel方法如何根据失败次数(failCount)应用指数退避算法计算下次重试时间(retryNanos)，并分析retryIntervalNanos数组的默认配置策略。解释PriorityQueue的compareTo方法如何确保最早需重试的连接排在队首。结合processNotifyResult中的异常处理逻辑，说明网络异常、业务错误码等不同场景下的重试触发条件，并提供监控failCount以实现熔断的潜在扩展思路。","parent_id":"4ead71be-05f1-47f0-a734-04860e9c962c","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:39.926182+08:00","gmt_modified":"2025-09-19T20:37:01.318058+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OSAEYFcrSoJIJaDBDiociv7RJZJ/5ssoNBCzyJ5rOxmm2eYpRdxx48GSl39n46m70bzGn9svb+xhDImLLsn4AMccFsR1SY6SbSTUAXtS00fTYCTjblyidjVwXurfh7pMsll6XA3PHy8xrVd+dNtEuqeoo9y+Gg+xPAWijFAe41OUAJpcji9yVK7Nl90EphRum7OwqHaiJc6gQgdG7/NImgd+TQvwEZuQ2rjFozdvC15B1D6sxqKnHBE0O/5WK68fb1suLXYEdvR0J7jPAEDqSXyOEOFCxVUWf4+VSFEy7FH2j3RMhK8z22Vh2UqH6PBBSDUplkW9Dh/0UXicGBN/NUQ8V5HnNkCbIF8rWKAlwcNI3qBDAM2z8jJKrna2PoaLpPmHKBAiDa53ynBk1KXH5MveW2HrpKCk0w27zNGpa9Pj1E5FnPwR+4knAwUe2Koi0ZVuz72p/8ylpF2x0fvrflTv+0vBbPE8I2oH5pDoRDXKsDmKbJNy+L7wUWWxLQQsya2SOl2grqvEhDgIQrqgqjP/CH4b1OgZGVfBLi9ynfg0lK1NaJciNc6zfjpBcFF+icbDxDOkH8yyL/4humGpRsZo1wDNttAjHev++E1Lj+cczo6vEnJKf9q5ZI1ARC94ZIs5ok9dPHjQmZsANMsFhayEQs1xguhLgc+drHO8A182AUtCrxzN3eWWynlvNrutdfmFWuvBWV3Xg8zp9Q1B53lAG1SwrutJ2Ah7Gy+8yOrha7kowyYqRGbO7pE7v+Smy3mbEgjsTceSS9YCJ+NZoWLcYouaU99VCjizStPE2LT3K/tSgeIRBDN7aA0wrFoGMP9QB2vhmX0lRNJxTkl6P+qDhbg9W6QaJq/m/zx7HUBMmfu2WF01AYbJ6l8K6Wydm48LFl0+tKeI5k4T8YBwhLjljNDVFl2jcb5jVRzk2vs1QAMa6cRCjwmbafoD4BxeWCeb3IjpdA+hqZCt+19wpwSWziB9oyqysceO5yInzfdTXqmZqtwP8GUgMeCFDAfTFBtJnsYUIDL6jDAN3P/fi1YyAPt9/TRLMfPWq+YtHjbqj3CaHXXnYrgn43DBgTci7m9filqZufJsGGipwdIAc3h2thCViEDr/6HuMIAmbuBMG+34OxJizOCEIfl9D55OUYrjiBX6jvGZTJUJUQdVxgOVGIEUcAoONH7nMkR0t9GHxxdGFPHpoMjMjbgz1ZKNUcl52Q/rFxS6ldy+uo/UGw+5gMOHooengiK+21hfADqR7TWs3/vPCdT8xzLtb5/0loIxA9YDdyBgkR9Y38vK+vm9Y8CX1iTTjZRX/Em0mrZOboPjyo20Z+c73jG1N5+j6rng/qu+lkKGQE5LwQPLnPc=","layer_level":3},{"id":"387fddd9-f750-49c7-b825-ec1eabbfbcd6","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"异常处理与降级策略","description":"exception-handling-strategy","prompt":"编写异常处理与降级策略的技术文档。分析pushNotify()方法中try-catch-finally块的设计，重点描述当网络异常或运行时错误发生时，如何通过log.error记录问题、设置ci.pending为false终止当前推送，并调用retryByChannel将未完成的监听任务重新入队。解释finally块中list.clear()的必要性，以及整体机制如何保障通知系统的可靠性和容错能力。","parent_id":"6addb4e2-d8f7-49c3-ae08-c0871142993c","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:53.909481+08:00","gmt_modified":"2025-09-19T20:37:18.207493+08:00","raw_data":"WikiEncrypted:RgZcxlS28ITmDGf4sH7fKdeGGe5hH0vYXFO7/lBxrYoZ5cUFjFSjYJhdBeiWUh9zHH/NGPbL4U8LcZTENK8O8ZzL4xl1SFxS2MzQB+7YGF5wIace68TXqWCnc08EaSCQwkPRzHChybaKfitQSPuYyfgSS1H0cQ0xnNvjiwJ4VB7qsQH+E+yLlgvICZAoeOarzMz6pT7eCA5/d4JYtGmlih+h4WU7pHrsSDjixXl3TnumUAMPdGo7zbo2iUqLIIIDfntu8wbcdcW0BUpp9BojN5STpLmUUk9lcO1p4fAygCuhq1t9st+1n08+mseFYAuR/aOHXu0PIlOyBhK+9u62ES5wtPmhB7Lckg7qaBJHnN9XvtX+0OIIRmoDo/y6fUh7wvfQsTwwufdNXWRMHM4WyUeVs47InCIHR671Sp7sZDA8N6RGyVSMREI0ibiXoubNw19fK/JNAbGu6fSFe++uLMwrAj8U9kV45CTBLANCVUAGJKbLlf8joMg0aOHafwZ1L5qE2WmY3bblUal6Tex6vADHMOJZgu+0+UDmwzG4S+l5rdJ2d2B4YUE0sTD721hyEYVoulJRMiJJGls5X8tPEA4IPbqOzpColJ8SYuK831U7DB5V9y1PKAb9tf+RuMj650smk1/cJeEBKcoNCOiO/jnw/cnYqzMyQqOBZ5+qfhnRTD5qobojQtM+52q0fRyndEqyIQjYbwhx/qTylTfhjlz6svn5t6Vsy5/12ujjNV3+suP31Gl81Q6snu7SRhsWlYpwrTr3DmJzX+iNDjusw7iOFfWhtivB+Sksg3EJplJAJTe2GornDm7hTlWujbvOdd/aHK6kdglyHJuhlwJh6vwW+a0qeP/UM71Hom3WaJnxTIa8BOYAgF9d525HK8HR7o9Za3ZoW4OXNUhMIssHZrKOvNM4zY1RWOzB8w8f2Y6/TN9/L2VvTjQMspopdC4UL0il5tT5DURRgFXX1qgXPFSq5aqrvkDKVnNLZf4YsBM=","layer_level":3},{"id":"d47b6da0-c827-4a23-bef4-03d7c9700914","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"超时连接清理机制","description":"watch-timeout-cleanup","prompt":"编写超时连接清理机制的文档。详细阐述cleanTimeoutChannel()方法的工作原理，说明其如何遍历activeQueueHead链表，检查每个ChannelInfo的lastActiveNanos时间戳，并与当前时间对比以判断是否超过指定的timeoutNanos阈值。解释该机制如何有效释放长时间未活跃的客户端连接资源，防止内存泄漏，并确保Watch管理器的健康状态。","parent_id":"8db9d374-bf88-411a-a097-7018ce115841","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:54.638577+08:00","gmt_modified":"2025-09-19T20:38:01.422871+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OYu20/k36clTwhPLMPeJFdlyoUkrNI+9vUf/bSB1Yl1DnLdeDd0frC9LLbfL5SdNANTcQtUwAFAt6GU1JevlPQ+NIgnXONI3Nw2RvlnaXoHRj5zdFLrdtfEhAPzOwYtOsYi4VSv/gTWninU4BaQ3yw9Rl25OAva6hZBANx60kCKPWLJIT1oR7tqC9f69pxQHQ3x7HsV4lRbVIE9V5XNRAs/5xEauf+99rWA8KsD+9sm/VP5uJOkNRT+7JlVGd0YPS/1FhsAk0xoR79rKWSSC6deXbsnR47QK2kY2FyaK88FAWNNbuq3GYQcRsNTTN+SI02Bq/w4/BnRbwVY6Y/Trinn/84G5xsGtoDtHP+HMcEp6zRI3aKdzP9Azt9Ev7FoB4p/GR8e3v+WxGrz/QaRw8dCFjLqKADkgZ0slyPXF6EUO1o6W62pOQFdZzbdKFTF5otxher+22K/+6BnEUA3bVMI2zLlc0tSMh6ffuK8NeObRQRlAsTuMV+oTZAy1Zsx/1xNmHfVRFlroiJXN14ijPd2pyAXn8JTOv5qXXa3/jP6nvL4GHSsdyw3sUZrG4pK3gtAmRRD0pMHk3fBDRdHjU67wRwkjrcZQs2kb+tX3uBIWYuOULETBBk3WLd32FbiFFduPV25a06fH6MnaXAr8cWhvP1Ha4tlai1Qm42jX3H6JCGG8fA2eTXUZPW4YGxAP4oeAW4o4ysrGQ6OEzXYB8x+YhdVNKCKRoNTqIqWbOEfPtMv6zGnDcGGOPQLhfcGHfmJ0dAYIp7ByiaU04ixeeL1680lsWcYbXQeocY7PV85g1BQjgPgnX+c8tGE3GFVm9PwX8u4FqGyPUmsdZVkx8XbrpzfNosHP5GbTh6fd3JAkNxe4FJ0VhWNdQnVzIrHg3K8PRzEY4I+pfZPyX/QVMuqNzEYy43Hk8SFumsXuOEtE","layer_level":3},{"id":"2f15d6f4-6615-43a7-875a-cd8a95965980","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"监听器生命周期管理","description":"watch-lifecycle-management","prompt":"创建监听器生命周期管理的文档。重点阐述isNoUse()方法判断监听器节点是否可回收的逻辑，包括无监听者且无子节点的双重条件。说明removeWatchFromKvTree()如何触发级联清理，从叶子节点向上逐层拆除空闲的WatchHolder。结合dispatch()方法中对needDispatch集合的处理，解释事件分发完成后监听器的pending状态管理与资源释放时机。分析Channel断开时removeByChannel()如何触发整个通道相关监听器的批量清理，以及sync()方法在全量同步场景下的特殊生命周期处理。","parent_id":"c486d735-ee74-4b63-b812-f1b40885671f","order":2,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:34:13.824497+08:00","gmt_modified":"2025-09-19T20:38:08.48404+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OTEoTqsGwu4aSiRaNCHoMTeT+5guHNMY8mWWgvRoCOQPateVlfkmU7uhhr9kuF8DuIR1yi8XAzCocg6llXCLPiL/OmK7bOyC+t1QbQzlXdJZAiag2NP7eZHhFySEQSmysUw9fe50NBG43eU1arXQp4OWgbYgVgadIkChLBjH8aa7689pVhJ1zq0iM3HQ1FdKTAfusB3qaF2pFInXGpm3GWdv1xqfR/fSaSfsWuvieQMOtd+2OTxtvYQHBYtMNqxwjIRPDbUIrOypkCdgpPVmQU/A6FaIwAgUlfcY2j5wf0t6QbNMHDfGaaQVeflWcXfq2O5Tw7seSoU15Hd4zJqGWXPnENlKup716hcAqz2/OKm/Zy4ctq8/z5gsqz78s4vTZqh5xk8joM2QR9da5KPdTFsxoy1G8v1hUa6xTc9mjcm22SVYd2bK4BCsbe8L6Z2MwKXn8U+uELHVKGVYB6mTnfzdhuEvB/VQjYtCpw/BTlVLTlA4DhRcC3ElPNfDedF2BZ89Da2WxyeMGwstzEWd56JDLDAt04cqQNA7eAQq+ptrEL7gJvkBw3N7pCnOxpvKMawkUvCysXqQJPSOyZQ5I2H/OMto6wAGDSDuN+QYNsupnhUNIIfvJLCXv/cc15YxOJrYXFxTzSWRB+S5J4/jvq/8fT/QkMgLxaTCf1PliM24YPCq2FiQX9Ze/pc4XXV2UQCbTUHuTg8RnLbvIwmqYmo0MH0SoQCnATQcSu/HRJkikTA+In6eV3FcFqXpmVz3Ovpc4fvj3V3b8ibT7tIcj+hxSiSKbFFyiY4aCYCP73sA3cUSPHtGA3Cz6GFZ8WTXWRq0H6R+jRp3xLAZLfpVhVqFt8GW80z0aAiAC/sloAfH0VyW46uDUiMQsSS7iDc8OXDkVVSXq+GrSTe76yBlpPKfw3hjCT8EZOSmT/KwGDtZKx6As7Y/2CAkCKIlsUS9tzJkR39EMdMILRx3Q56DtsHpc9l+mUFYrtcaDHLtKBbFhch1zaO5bh9qP3dmc0v6YVwkXKJvFDtKesMQLq+7t61hRiUO8ncnjtNgMb+P/ld0tQM0cc2f/nD2Hcp9oWjjysDW++DaqBD541/yOzu3j5VNSVqlL3Qbkkxr4sad+LYhej9k2+SFRsTaNMVYTL88J2m8tgRbzRYKyCdag1/wR33Ghyesx9TJIolpWWrS6SDz7xZDP1ZszKwFYF8Cczdcp4NDUCXJTuHoyHVszkB0zbNV9uQTcI1tu9CggYx5PhuccAl1IXZCVlUM2rsAp2jBdQ==","layer_level":3},{"id":"1156c858-9266-41c7-bd13-442758f625d4","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"安装与配置","description":"installation-configuration","prompt":"编写安装与配置指南。首先说明如何通过Maven将dongting作为依赖引入项目。然后，系统性地文档化所有关键配置项，分为服务器配置（RaftServerConfig）和客户端配置（NioConfig）。对每个配置参数，提供其作用、默认值、取值范围和调优建议。例如，详细解释RAFT心跳间隔、选举超时、日志复制并发数等参数。提供一个完整的配置示例，并解释其在生产环境中的最佳实践。","parent_id":"","order":3,"progress_status":"completed","dependent_files":"pom.xml,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServerConfig.java,client/src/main/java/com/github/dtprj/dongting/net/NioConfig.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.586202+08:00","gmt_modified":"2025-09-19T19:36:43.709201+08:00","raw_data":"WikiEncrypted:6nDTd1wU0hYJuRoAJhne4WtyEnYmhxdVsqDFxARVgcjHHH2m9ve829uQk6AXy2hUn84DrMD3Q/s2aArtBnqEBo+kja5ssFG20l2KO8gyjycQqD8kIMJyGITKmMzLMLkkOOnBMA7x5ScEhmGodTV6gj4Mciyb3o+FEY5UgVs6l7w3C78AkzfnJLSqRcAI832fi3SmIuk6OR+/IMJESoIXoyjZSY6AKh/3Ag0W58nsuKHSZpXtSaveLNMFNl4gTqrXFa+CDPCoC4jKT8GHhs1qjIl4y3CZXvlLyxDXJdw13Gl5Cl2kZq8RsSpeyC5Pf8phqShVnpdYVLhi1yUk+Gm/SuZX2aHy/+kl3/OtObIXKcGMQV7LUfla8x9ZHmLc4H/fcrgyHoF+Ik+CG6rwSx2L1pILwfDxL4lZssJG1OCQc1fjtK8q0QMP1xkh1utiwMj3gO8cijYFS9TCguxFeYqQ4MjUpbeMa4qG15VKa/gUOzHQTK749nKiSV+qqE+19RSaJ50GNEMNoLd6MXK42eSJT031cmgHrWMe5KEterAkak28iqeMYj+5qVfPb/EO2ZW608FJue8XOKlpX6XCLf/04qc7y46oQkitMez152iLJl1n+Qe81f5UbQSMufckpUQKYY7JFDdK2Ji4uyjvJwSR2ZYqAbq4BERU3+aNqVTpcVvWSrG2tD4Go6R4YD9jc67oO6fzEgZVasLI7uUMHnthY4ow3wWB1r+E/OufrI5WfRGCdUjXT2fDqOHtCYRX1619662qRPdb3slDNTD9FrMjSMc8n33HmFk2YJn5iBmDgF5TUMXmI3CaQBSu6uLq6A9P+5AZM3qjIDhkbJ6rVFsmUASXHv9OgzDxvDL/gPUFFXIJLPwKP0/KB0VFC6f0SaKrDuqnZT1t2nACozX4Flj99y7KPKH56tNfZ7sNB3YEd847dzKE7MYiJxUoh74elZa6z+VVvXX92sndPzUrQYd0r+Ig5ItNK8MsWD18RPBuFpJaDzkJ9WTSI75BdwBTOnZm2LMyPwOpWSKUY300coion61pzo4TQyq5mcMjN/RDZgg/ncqOw7DoOP+ADBjHTDA0vBhqIWq7WbC72JVkYs4EHeebTcGxFS3UvLx/iglRN8fO4RxG4xeR/MXSDFlzpwFCCQ8356in+wuhLrQGMKGFgBujsd7gIcCgPuYceItHymFuxd+WImGzhimVqW9GQMdEHPnvrigbEzpaKlfCPi5y7g==","layer_level":0},{"id":"e27d3be0-8d51-4d15-b19b-084f3411958e","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"动态配置变更","description":"raft-config-change","prompt":"开发动态配置变更的详细文档。重点描述通过AdminPrepareConfigChangeReq和AdminCommitOrAbortReq实现安全的成员变更流程，包括联合共识（Joint Consensus）或单步变更的工程实现。解释AdminConfigChangeProcessor如何处理配置变更请求，以及MemberManager如何维护新旧配置的过渡状态。说明变更过程中日志复制、选举和领导者转移的特殊处理逻辑。提供添加/移除节点、转移领导权（TransferLeaderReq）的实际操作示例，并强调变更过程中的风险点和最佳实践。","parent_id":"29a33e01-a4d7-4a7b-ae5b-9e7d7bf2b913","order":3,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/rpc/AdminPrepareConfigChangeReq.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/AdminCommitOrAbortReq.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/AdminConfigChangeProcessor.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/MemberManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:46.571108+08:00","gmt_modified":"2025-09-19T20:12:37.455192+08:00","raw_data":"WikiEncrypted:7ASitzE339gRtnC6am1e30yu50Lesj6ArH+gPnnP7CMeJlKn3/I906A5S5x8o51F/MuXkAQWC3D2MezB6gicd5PFCVplMi9Kd6g9o2t5nqNoC8ZaHBSwfkqlWaOyasLI2QyUIZ7ffhSGwaMovAy2IeUzT5dvNE0PfEdoahpp5ZTyDO6zMhyaoP2t7jwoFvlcROL55dZNuYKU4WD5TGq4FHaAlrWx2MSC+gXk3rOZ7U79RKDVD6YKq6LPgHwQ0kEI38bR1JBm13OQ+AnDq6PY4U8neALJsG5Q3OVV2EJma/IB5D4HuzIrlLq51yGq+K1wSN1V80KNhJpl/CNmmwhqHU6kyiZBFxmAper+ETUkzZXKsQPfmTyYEGulWI0tEiwFznqKLookjBD2iJeTXDwoaoJ25MuR8spkkf9OT8SQu/5RyiHFKeRxZHwZmQ08MRcBWcyicKAAAFq96vKjfytxaHRdTJhifY+7UBfemCmGxXlOLNKe5N0AxFjENeJEtOeqVK/DywStUIgZQo9w2plxcCGGuCjw5PYEG4qI0bZdbNFPPi01pZn3N9ieaba5jtmFr0cehGnDKEyGRV7CExIU0adQSQ76ErkVvPX/Ip99xEf9eunuxPeBf3QTbEK/q2gp/egs4nsuJkb8ihs69rUbOf0IYkXzOn/dcr68DgcHNqXCkJ6mXJwgsR9d+0UDB+DE8zAnGedJ43eMiah3Tj1Xv50TFV8wBD6Bjao73WZOxevxd1Zaxo725FrxWUk97nWiKoyOPx9UvNgopnBU2MQNXgnmrQR0W4fbp20V+4UlW3jiwAI5Wuthtd7xhjssJx4nBAhV/BMHZFZ5ThFeFIvEPuqS9HADauTg6V2jWBnGZ472AcdlfkP5EGU34MqX4nZO4Ps0esjosoBq4UTs8l+qOF3LAutkWgn18AHKdhtmh+vAvjpMHqrwJnjn00oXSYIui3DLzdOB0hHCqtLo9Q47bF0OaodCQiYKGRYMCaP2Z3j/dnb03TBSTIxPO7I719zoQjCPEZP4Rn07OkW26obJJJWfa949wAZhv7iBa0D4sAx14hVozblURQ7ZkYZ8s5mRuBuNw3bNuZMpLHtShNbZV43CfA/b1rBcBqTkiO/ojwkB7XIJTIoPg/H/7rTGPObVtUunI/xxw+wOsoX677mvwtIQYWgx97XLbsSj8hwKCd+C3/F4HIwd/SNKvY6wSwQUTFzljCFfRLk9uAqVSlv5WvT9Bc8CfPkL+GN0Ro+hLpmcUYYMLK7jUmeO5wGsgywj+U3LxXUDU4H9K9fSKj1415B0hEPPNQ+V9ZqVQek4wge8HadJpJLA79BI5WCOcjF9c2o5yNTxKQp1cUMitQ/yqvow7YEv5g5Si5bIculW9Ly6jU7G7qRmV3tpbGpASvgUtpXN0jvJXjevyZF2Bc3zOC15vA9mObpiRj+I9vBsHB/d2/yts9vDrct/OZWH/MW1FMvvK4KDVu5OUhFsJ1xr2WCl3rvCwN7jIcmKGl0qbGbbOnClEhYBv1sxBxqjIudo0wKnxNB2dO/wXVzf/B2f9us3Z56SZJwML3YZkhuqWs4=","layer_level":1},{"id":"71615119-fda6-4b59-a7e0-ebd58e14bef0","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"同步原语","description":"fiber-sync-primitives","prompt":"创建Fiber同步原语的综合文档。详细说明FiberLock作为可重入锁的实现机制，包括lock、tryLock和unlock操作。解释读写锁FiberReadLock的设计和使用场景。文档化FiberCondition条件变量的await和signal机制，以及多条件等待的实现方式。提供锁竞争、死锁预防和条件等待的最佳实践。展示如何组合使用这些同步原语构建复杂的并发控制逻辑。","parent_id":"1b37474b-db6e-453e-9726-e643ca44639c","order":3,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/FiberLock.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberCondition.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberReadLock.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:03.885801+08:00","gmt_modified":"2025-09-19T20:13:17.430377+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIsxwYbPburLH11Ezw6Xd7SqPIpjb9FNG1xm+7Xt2INfTFAgeavsaTJhNkLlz7kMW9kJ5LnP0MwurlTCROK35VxvS7/7reqkdROvcxUWAT4WQITK4pod6bxOefOqS20AXkiMD48eevd8P8sd5XA/v3MohrOQ8evH5P2b5zbZClsmk4Q72KuH+014ugHB6nMEUV/zRx8F2bmPR8MzQlWOS6v8b6M3CrtQWIDJJRuWdMNIhRaf5kg8FQOsa05B8dOJPUpKrxk05YMTxTnxv2LFTCN6NphK1MUZLf+AZh+NTZ6vyEpujpdbEoEhpQP00V+5lvr5kFAatgEPz+hFmWO7x4NpFpJZPRM5j36+dzpxO6Zn+cZecAXWuC3r0Pv5OZ8ITTYwVCO3yxnrJvOXVVszlFgbhYoT5YvG1se69s0l/4FceeNKoQjVhbrhw39F8EIFCx3fUqv8QhT4b+LfXO3026r3FI8eObdQZathOS9MjMRdv+QieD11V3tMBik9bBJJ+eu9peHOXidFTAKw5wSKCgZz7P5DtLEpjycs7BWFvKTf73T5E3aBE1wntaeTTuo9hJSpJMTeWgihK1xzWtjuAwi33RDd/70ccPJIeaZ5RXyi5eArtFQLw2jI2B8aaRg1Ww7w/UNAwy3XIBmPN6X8GCOgVNbKCWlIDTAIGLsbFToqc0DaEazn5fPa6UaRHCxCBiq5T3yGhw6k+KHnN8sSi5SGU2OnrcVvXhAdmw3y8lMpTxIq/vIMXKS07zUMcizkNCcaUhOIvcEE+KtBTD77DFDbLlIs5kxcxWquTlVMSu7iJznc7xk0rEWs91jZZdUUH1Cmaa5FUNXWpkeNRobRc6thVyVK3dP0etOYIw9M8XO9x7c+1fYqJVxkhB7z+tBvhA5tB2Jlozb0Hi6kN8f5a8WCzEN/41xm0muJcMC5x6Uu0lM3An9l/+kIsDlvQqdNQpJ3GrlFYLWWrblYaNO1XB+sB1UKJkaEFjRV1URdqTskxvfhXwfzlIO4tQy6McMb0joGDlG2s9Owti0q+BeYzmMgUm8Qd+am8rUqbre529QGAPPU18X7gOTtyqZ3mwanZazcMXqkeqlSHwBMezCqBahUs7Hzl796nsWf05Cr2WcUmdzSQfxT/6SJN6gpXlwIF4X2VCTcYCN3RQUa7wAbbXss=","layer_level":1},{"id":"19ed560e-f4af-496b-a7b6-d4ebbf134e73","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"Watch机制","description":"watch-mechanism","prompt":"创建Watch机制的详细文档。全面介绍数据变更监听功能的架构设计和实现细节。解释ServerWatchManager如何管理客户端连接、事件分发和重试机制。说明WatchHolder树形结构的构建、事件通知流程以及网络故障时的恢复策略。文档需包含sync、dispatch和pushNotify等核心方法的工作原理，以及如何处理大批量通知和连接超时等情况。","parent_id":"dd3205e3-74da-4d38-a52d-e177f4ce68b6","order":3,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:08.772992+08:00","gmt_modified":"2025-09-19T20:13:59.198331+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4Od0JbuhRHuIR4oiUzyKBReIHYlNurxOA5cZjFyomkzqxEGlDiUBc1BOZypK2frtXw55BiXASlVIv6+nTlmR7O6AnbeC0JUdoT8rXYtVT5JRCcRJhwG4qqfSyATSoWDH0HO3pz9hNsMfBgNnXgN4uoqVC1WWKZRLvNwilvFJJTQApfhFg/xevnQKbgJWwGMT4D9DFLEFhH0rcdOi6xtdrxAxqZAhX91YC+j3hO3orRAe1ZC/+Z4akrHgDdczxw1pF1KbToRFAchLy6Nvq/VL7duo3CVuEw5DXD35zCM+6Nbj5ov0YZTsIkzsIEzJJ2u/n/9rhIf81HFdHwp+40K2dcDrXb4I1XZufXHuOORqI/4/QAIjTv4SZHC9zZtj+zI5zj8W9tzTyDm6CQzdlEwdPmxWyB/R3j7UVs4nn3H3FhLeaONtyzFXJAtjtWJ7fgBTb+EntqeungnGcHYk1JPT2G3pfoI4wVcHCzxoh5TStguz91X2HneG+Seq80UWQM3Y47rd23GpqRQvEgNlWglYf2OJnJjc/+mOCf+sLcvMf+OFOE8T6H8rUq/1wj5OW26hN2LCYw7jucPaoZDAD33J+2RTesrEyr6paXAmUi5+qkjAYKeZ42wDAOtLtSVOfdzxIrpAbRBvknGHdWXcyNL3BsIXRKopVxhfIdTkgIy+M2KVEvmkGmTVJYeTxtMndKhcRo1wz3ov8kWub3MB3B0cnh0H2YIWPWpktXkB+ceBc5zzERxRv5BfFzezx0b1YLo+vg7Rwze/Ea+/QCBe9yywNG6a2bTOIfzbw2IGdUiWahpYk7ei3lPgDo/aO1o6pKHtJmwaAoNRpxMo5QhwNdx6c2LVlTNCbQ2mC2g6u+r8eRdfC7SSQCVjtwhmKYHlocYxrmYtq1pA28KUZs/XgUXhaPwbDDz14w3SLe71wa+bldPQlrMNzfKCridFnxre9NT5XRW3s/TqAk5QpdTE5Xd9A0viwcmp0na2lpl1po+utm+YdPtSCLHeB0BQv61Dum6FfyKXbsyg3xzZsYJz4xggngQ0ARm5rDDVPlhDibsvT34ve8zXuZ+8sFaoCFhuLTKM1vQ==","layer_level":1},{"id":"c48b7c86-aaf2-4ab1-9f29-fe5aa505d4cf","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"监控指标","description":"monitoring-metrics","prompt":"制定监控系统的关键指标文档。定义必须监控的核心指标：RAFT状态（leader/follower/candidate）、任期号、提交索引；Fiber系统指标（活跃协程数、调度延迟、队列长度）；网络性能（吞吐量、延迟、错误率）；KV存储指标（读写QPS、CAS成功率、TTL过期速率）。说明如何通过PerfCallback接口集成Prometheus等监控系统，利用PrometheusPerfCallback实现指标暴露。强调线性一致性读的延迟监控重要性。","parent_id":"91d17db4-e20d-4dc5-b6de-47fc7ef0e1fe","order":3,"progress_status":"completed","dependent_files":"devlogs/2023_07_25_再论线性一致性.md,client/src/main/java/com/github/dtprj/dongting/common/PerfCallback.java,benchmark/src/main/java/com/github/dtprj/dongting/bench/common/PrometheusPerfCallback.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:02.040593+08:00","gmt_modified":"2025-09-19T20:14:25.689947+08:00","raw_data":"WikiEncrypted:HL3VqGjXq8A3aGeLxAjVPvdg4t9A50QcolJhttBbXmwglVhFkuWHGZrIOeLTiMNn8CaSnLJTtEJwdfv/tx3hrbjGKFitBMowRjLIbLMVLRupNS4kzUWto/Hjhc4XEGZ08OcQM/EHOpSPsZfiV27PWDdCF4Y+R7kRwLCowwx+9CeHmWzFzNdAp9fympsJnjI8nA5cTvfK9Cd6IYfW77r+uIRCtM6zEP1XeI+6TyH0hg6qe5MueJKMyO0If4Ibmao+cqNKZsQcOGpp5qPFwc7OeUFlqDL5zGnghyOfySJoeJXX6Teq+n4bCdfpQxVqePfHY3900fZlHMnTOGR8vXhi581j0C9oPWULkE5VIGlciwPLZ7NUzmb/iPsVCpJqkkAlD1sAMEOLVamWV6vnmEiihLR/jyONszQ8SlrLD6F2qprRtR6FHCHuhB8PubfMFCpgGSjBY05gu6Wp+E/bNHZfGy7Wk60sxU3jd883+PTeECnfvkdKK+yg5pLT8psW7w/3mrkHAmyBf3j1sNEq759LFrPbx/EOEICxEPa2/MC0J3yDTglCVjPzioGiNgjaCmrwylg5rQouKGC1GQN7z4Z+lxArVqUYguIgifm+gajCvF1AqC/1cBWJClJjEin5kPFFxhv+foesJ9cTtX8E7Ee/fWuZ72cuRDLpzkceS7fPmpl/XWb9P4XF7oOWwkAy7BzvXElrBVf/zuIwJgOKUBw5Te9b/ml47JSHIJqM+/38EtNqtIpIt2tw7GqRlZrBn+uK2ARnpPLNcFUL+N7YH+SVS8F0fP8ac2bQutnx1k2xuqTpwucqIIzF4OCWUHJK8eY+5GP6T5ji94opa2wp6VVY6+bBQRB8sK9xrfzCBIO845yGu5TPpnzRHHOu7TtuOkdOYj6G5ISXA476BwLzaO+vHXa6KOw0loso0YGr7fMS4JrT4kzxObCfvRoLAKMovZHeJ3bSqNu3LqqGa118PQlAahtXHS59bspiLCPQGg2xjIgXKcB7wJdlfjoGzb3C3u5ozk+9QuOtX93ArabpdYv8gg8VCsB8a6rRJcuYyYe7gLZnC8EwaWbHbZyKdnaOWrlt4/+6EO/sqkTkLmxnssTgieclMcICnpUNiiHiUeAEzJKGlre3/wXHgQ8tgrgy+VhOeRPX+m6LxghkJGJWm1t0ksgwbg1hfVRBIwuSDIIObN19Qw5Y47ls/VMCZQDbfne/r2JhK3C5EIcp9k8KEgnbVgI99kTk0RnVqKFRWbGA94E2+Kdga7dgfOKwxDeq+9OeM03g5x/I2wq9FQJvR++B3w==","layer_level":1},{"id":"ca1e7bf8-d36a-40d1-8bfc-ddd80009f57a","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"多RAFT组示例","description":"examples-multiraft","prompt":"全面文档化多RAFT组示例的架构与操作。解释MultiRaftDemoServer如何同时管理多个独立的RAFT组，实现资源隔离与并行处理。说明AddGroup103Demo和RemoveGroup103Demo如何动态创建和销毁RAFT组。分析PeriodPutClient对不同组进行并发写入的压力测试场景。提供多组环境下的性能监控指标和故障隔离策略，帮助用户理解大规模分布式系统的扩展能力。","parent_id":"7a2e7732-d457-4418-a948-36e0a2983324","order":3,"progress_status":"completed","dependent_files":"demos/multiraft/MultiRaftDemoServer1.java,demos/multiraft/MultiRaftDemoServer2.java,demos/multiraft/MultiRaftDemoServer3.java,demos/multiraft/AddGroup103Demo.java,demos/multiraft/RemoveGroup103Demo.java,demos/multiraft/PeriodPutClient.java,demos/multiraft/GroupId.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:31.039086+08:00","gmt_modified":"2025-09-19T20:15:19.483856+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbY7dJNCczZbtcxkoyzmplg9/60uZajGGJWnSKtfEfvobYaCbeNjFVAm4X5zWpmbfU3HILFbi7i3ePV/O/IVWAijwrhsYk2Ny5122XDlpiopsdPdkp+1AUtVkSVaw0JJl/QR5uWQ1Mz+UZucWJoX3ljvipZaemWWL0s/LWBfo/oPUpYkdaz8dqQjkao9HRjKHs/9W/lUFh/DRmXRdsCxaVCNEcrlWEL/Y5Cy0YfCVEIUOsjTbVaYPRi1pD253cDFK1b8q0MKqJ4ZZN14Ys2dt9ecuuzEcRvLSOnZwQrEgjTUbTzSHPthx/a3Mx2TPXMrMnw4aYVEmK0XEjNYmSgzWw/Jk8J4+rsIsNIxFKjF3jHledSXdgZsrCHBnF0NGXK84nXwVPvVxgtOGktxRzb82myQZFZlEGCprt9sL/ovqxFYKP25Q+tygJce1Oo++zwsAQQzMFMy4oLQYbBtCNL2tx+juBrRp9ouStGlzRwRwS752th2LkSDeFPaZC6SZXeFm5irvy0J3wh4OBrDBGFrBGbV9NMDnGhbuejCnCcMb1k94GmFWrTH6aExzCv/L1u7JjohJP69AP3k1p871NChNu7rHWvNa3HkeLB5O+4lVXKPaV1anLMNh8FC76d4LpYi9QkVq3JDElXT/KXys0QzRnN4FgoaqaK/9CtwpL3YRjbyNN+rhGQ0E4sqqijQEw25GZY+yUuimPugR++u4IX+VheuC9wkFk3heHXWiycfw1pBE/2ovn7cqH//dB2iMmCYaHoQdepc8UQBrBgMZgMrNvTC573K/o62lILsIP3YAMAAT3/o0223jMzu3sIp4PRDj7+QHWQBAoFxJJfZWoKAQFs2hyE8hhYo25mtcZCbp09btD0jlS9GBLFfzg1MwjTOGwj75r/evjyUYytDgHyIhfMcoz+k0itwGpwkw0mEUu+KQiLYNEtzV5EbBWxwRlRPRlM8Mt5GsPKKJJijmVfIAfuL/r5objO8Ikj9U1NGbWSjKHeKLPYSl01WZBUWWOl3m1S8eS00B2I2NpGrmlyjoBjUs4CBXooiyv29pPQyQ76EuHhHDSE5pKlRCKCw7rlQGYN49xZfwvJqCptO2dSRNoNpYuzU3s1lNVPc2SL2bSVv+baoxz3LR3jspPCXOe8B4udYQQ26X+fdHLytZ+UEP41jjOM+f5MxQ+o/dvKn6zY2p8r2G0tzLBotbQHUdK9xe6lYwrOHGWB3spVQHmvHsK4gfmijRhH9m+Bcu6GldKjW5LBxgPpJgPd9lIDNyaM6mhF34tckvnvNTM/bf9m+kx+zTSANSxplL0dxFuHvxm3lW","layer_level":1},{"id":"c5f70f0e-1268-4784-b6ec-ac9ea06bdc94","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"TTL移除策略","description":"ttl-removal-strategy","prompt":"详细说明TTL条目的移除机制，重点分析remove和doRemove方法的实现。解释当KV条目被删除或更新时，如何从ttlQueue或pendingQueue中安全地移除对应的TtlInfo对象。阐述空指针检查和双重队列清理的必要性，以及如何避免因重复移除导致的数据结构不一致问题。通过具体代码路径展示在KvImpl执行删除操作时的完整移除流程。","parent_id":"8053381a-eb74-45a9-9c28-32af4c030767","order":3,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:52.988221+08:00","gmt_modified":"2025-09-19T20:26:46.693442+08:00","raw_data":"WikiEncrypted:RAaE97wuZBkggJeJWIQrmnUvueXHTuxyUBQ5I1x7qB7pmb0raeKSQ4TLv4Rr/ULIzucPYgIbOWf5+nQCN1WEmzZjGcEobXn03Ujyv9FaQ/hOjjq99seLjv9u0SVHTe9JIGj/5tIBRlNgTVVRfsqMc+DWm0A4oSF86kL6/ns9+jiNOwlK9EP7Z3q0qiMpawAwlyFGDkbwQ85hOnqGsJza3n9RJ10JCJDjp8VdWh/UXzHO3/ueznwxj/KlQ0H5CDA88v/oaYMYDoqML+4Leg3quGIvhCG8znRV9UM/sM/btAHGonQ5uZTKuuD1eymQKz4pWPBY8IR3ERJjmxchSacwfVsJeCevwkmCyrmUCGmtMD1HAuDmsEbrVTA8gcwA8lDVhhtkJ4CDOkou9LVy+D52lLiGZeR08xdv2loWr+cL/V89jpqmFW4eLPtR87/TErY8dcaIXHZWkWv1Vkkg9tdSTCFVDdMKfkDUx+LZu4rNylhDVTT+mwWt7F3l+4ufl+LtsVqR5UqmuIIHVHnwD1FogJo22HxXvT9UUSAJoCAxp1iN6pRJWYWkxi4zl2G+w4lELj4x7KEhMbBJASPr5zLyosfGu5sc26YMZ+2zo8qXCIfG7SnlqeyTpVFC4f0SooWC/selA5xlVgMereC3khFoA5F31YYs77vKRgpKQz7ELs5X0KT34pzp9B28icxQhvvpsfkYquvtUHP7cy0jJRFrVj5ap93eY8cMiLbsbiLD91ZGGerBcJp2ndCSl8xXViPPDFO4v7RB7RzcTmZT7U/3qdfOiO7l3xleyzQ1mdXXfYiVqvjB+mmKNuUHdGcY46/8IaFKf2HX/5GogLFpIumkfV/yWgE9FOytc+VBEcTmbeHcGIBQzr+oJQ/xxMKzpqmeqlglfvOhekjDBAsb1jN5g/JP7rpaNwxxmpZtmJlRK+KdnMnZ+C9yZdSeNCnBUqUq","layer_level":2},{"id":"8db9d374-bf88-411a-a097-7018ce115841","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"故障恢复机制","description":"watch-failure-recovery","prompt":"编写故障恢复机制的文档。详细描述processNotifyResult()如何处理客户端响应，包括成功确认、业务错误码（REMOVE_WATCH/REMOVE_ALL_WATCH）和网络异常的分类处理。说明retryByChannel()实现的指数退避重试策略，以及cleanTimeoutChannel()如何清理长时间未活跃的连接。解释failCount与retryIntervalNanos数组的关联机制。","parent_id":"19ed560e-f4af-496b-a7b6-d4ebbf134e73","order":3,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:15.800046+08:00","gmt_modified":"2025-09-19T20:27:59.424871+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OeuMXXLrKDTOfky4CZ8w7QvnPHV61XCk5f6dwWjb9c1kju3Ijddp6SEX69i7l6iXGChN0WdWHXd4xFgFh2UmJEjMe4AH7gtZ75tMZSPRtfsfCpkwhkPGQCwJY/XQmjpcOig1H7SvbAfo/gf112QbJ8twpknTfupy0HL/mGZP9kG0++yL1LKxAeHaHgWCpzSiu8S0v+xmPwu0uIsTWvFIndkBFpdQuhZDxbGMuZgj8o0Duz95H98BfsY5Dh/05TzhWpO3LbuV2WfeiUDV61nUnUkgH1L2tZ/7isZuDcsmfUtkbsJKijyuhRZMSwTAEx0qEZg3tNmnDxC0PXVJqJ+z+ImHpDsqv5MAJ6RDYYwSgAqOp+II2hpG4Hog5trcQPHDT+VXV7aDd+g1O6kfeiu6SwgXGFPk2XSgcI0MtjRGqc9V1wsqIUV7nV0EQ9ud3Uh0fUnRRMGZj2K7trt8F79Zj8sLnignVOD1KSMX4r5eeX+yyu22tWaJdO2FReLmH9WVR9FCZ9rP6oZPcS26tDdCX/d78l7iM3UO3X7H431dxVBtZLj3fYO8OdXH3bFiSiHq7viIwx21r1Ph7lEdE7kAx4NSkfD9Hl0ujzGRWgYBBgO5xEu3S4YFjg4SkA4cA+CoW42ClOFJ8Xqv/dCxUSWOqpvnhDretX2tVH1EADHOPG/pVhHMTU7+O7t/l9N6jW6bOLn8dg74VjnMwUtKz9H+QvqEtHHGqOkzo65CHzetKlnWheekru/mhLdXMp3JGxXhPkGFg8+GtHqc7vYh6o9h5LOdjCcs0SncDnmxDSplX0/4+Jkgmq61JSdbUtQlYfzurCiVgOhBJvC3fQbUrKIrfeJ56CE4ifELyb/WJSippNNHL64OmK2ePVPwQKivaCWaBXPru4RKameNCV7+lKl8jgCOx1HgAhU8YgZCe3grZNLh","layer_level":2},{"id":"8c9c0cc6-b556-481c-9060-20990908aa4b","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"监听器迁移逻辑","description":"watch-migration","prompt":"详细阐述mountWatchToParent和mountWatchToChild方法在KV树结构调整时的监听器迁移机制。说明当节点被删除时，其关联的WatchHolder如何通过mountWatchToParent挂载到父节点以持续接收事件；反之，当子节点恢复时，mountWatchToChild如何将其监听器从父节点取回并重新绑定。解释lastRemoveIndex字段在避免重复通知中的作用，以及节点迁移过程中parentWatchHolder与nodeHolder引用的更新策略。","parent_id":"8d04548a-2c0a-4275-9eeb-abb529ec1fec","order":3,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:39.175403+08:00","gmt_modified":"2025-09-19T20:39:03.583824+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OYCz/jjHYE/VRq9Ohcpe5uCx8uNalASLDHws3btSIerOiM4Ac8h8MC1F5vNVu06ybaB+L5XxE1GWwunpxZ7Cz2h7+wRe1p/FUpXSLRjZRwia8mjo5hZZbJIT8LXqyddDBCDCq8RlRcAaRSbCHMJjPbs8ULTdNUqg6r6paYQEXAX2i0O/L+XIl2eY/BuiUeW292sP5fOnhxR1EQfPOv+XCPunHU3hvfU3ofkzv9GixgW8JPlsN1rrHu7+frP1mnfFkRPpH0tHRxHJxO1FwH1QNDIznGlGatWaJDQ4SSuII+Lrt584sWWQJKn8InbfQF+hJowBvH44Ro0L0AJJmBeUoEYm70XMg/vHbFYGaGXMCaA/0hL2+1MFChrO5PES1jFCHA4F6ZZgq2JUOOXAV0Mr/4t72ij6HB7dzcUJCPFQBQ1DFnUA2JiASVFIImqG74Z4/bjZDaemIcyNU2bsIBj3ZNDWbFHLvPXThnGWeyq1gxJuQMl1KJLnhqr3pQ8CE5YUppXq/zRwAKU5moHRSA9kZJcFYG2Y+Cx/ixsDki3K0AjuXri29lN5OgTmAQ5TppQRekH/3fTgLUiqhedoMI4HjSwdkMnJXuBL9Rpe2o14ITz667QM7qAPLXMvjgOxXbQZ+1yDp1zGrib5GGOcTNmBMFRWLmmGAibvtkqPNI/TrLY4ea4RAM/a+Jq6iS8o/V+evlbeUXfpAJFqxXIxNxrftb9gpJrZ0BO1gSB+6fb0sv1O37dHXYsq/8qK1R4MEiLUizSrb3r51eupHGAFFA2J/IQePdVWxZi+tKlqJ0sWcB1ZLNRI0+BU0QhU0T2ikO4DiltiTUL3eDmaKfWjIr0RFoI4LIM6GY1scfmb88nfS+NUk3989iDVQ4rjYCjxUqIwjI8RWGEpkZBJPJe6L9AqhqN/un6hvYCEmQL03Wivap9UB5NO+R7TPiVaY7WIQuKuNN7xDMgDY5Na1P7Zsa8EXhY8NAA3PMe1cTqlwICUoyLfJeQ/Q0nHKym74WN7ZeiAeaBhkOMNPh/2+NkGOXZLRcU=","layer_level":3},{"id":"a3c16d36-d08c-4123-abeb-c339789651bc","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"时序一致性保障","description":"watch-manager-epoch-consistency","prompt":"深入讲解ServerWatchManager如何通过epoch机制保障跨Fiber调度的时序一致性。说明reset方法在Raft角色变更或配置重置时递增epoch的必要性，分析processNotifyResult中epoch != requestEpoch检查如何防止过期响应造成的状态错乱。结合ChannelWatch的notifiedIndex与notifiedIndexPending字段，解释其如何与epoch协同工作，确保客户端不会收到重复或乱序的变更通知。提供具体场景示例，如网络延迟导致的响应乱序，展示epoch检查如何有效过滤无效响应。","parent_id":"4ead71be-05f1-47f0-a734-04860e9c962c","order":3,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:39.928611+08:00","gmt_modified":"2025-09-19T20:39:32.650151+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4Of1C+Jp+v+nfP1gUE5jCc8LLtB/eEXS26606AlL4wXMVeqHJmXL3xOLlNT10ZuEOcvWid61Ffv0lXYLOxPhDltotl699kWbeLnlA/gw8jPiyC9cDOv1xTeXUFjmwNdrUxuRDNl2I476yHqKAKyCQ070dgU0bUiAq5dkNtnj7qH8SGgAcMHLGRatcGD78UPpSUSs22O5HF20GgBUIwoQqkhQU9b/5MaovoAesVcFwt7x4RqVVxjDVO0hRzom3+CDDcOpjD5TjE5gj8H4Jt/Q+rvz9NKRhrktOXeUvbqh1O9F9HPBL4+t2A73P3xzboidGo/lk2UO2RirZOabh4o0D69rftBaKVNED3sejiTFG/nclTNf3s1VJuTnzc27FMKKSJj6EPyUVRHdtlIaY2e/0j1b94Ab8NYEpbCjYxCOvTEkq6Qc/6GkNiLWTchfr6suEAv9PznfoukNtxh/XvZp+tNE1fuI7BuyOPk+GkXdu6hTRix7LFEDWvO7jku4W+JOVjJGgTGYSUJjM9RKgG1ofqHQurff74ibQUMs6lXnxsaQYV9DhUwcv6v1+2Q2BcdYaIKf8kob7EuRfsbJuytgsDsBiiem4GhHXSzZiJXI4iPG3zT1Q+nlxQOCZBWEf66QH3lPZ/QQBM4Ydwx0+YdQpG0ofzj5+3vZul1B/Cios0nvmbCsQdChB2VUFEu0Gu9tw92yESkaFtB3X2htdfMrhKfxzxLj023pS07a3r0aC2ARn0cRZYANE1AybsybZ0Y9g18rOn5O8gc7YJYgYFJ8wUaNBM2/T330Df/D5y06EFNytxrrOntTvw3xFci6enk2hzfOioVMdnu/2FkjvvwlHuLUBz/14/ge6dUue3kwe8V9rChzszttio9VJO9a0CMKIXX6TZzIA27m4/54Rh8XsRQ0S1wmQx6rvKxrmpOyioaobU0lRX5Womz9LIjEYNr27/tSvpgQ/6n6e07hL66/ZgoEChl5or1vuTVPY4e2Kselz832jnf9nN9X1G9tz7FfhpMbw3VY51OvrWujMaXZ7WGmI5LwpbZxXAy+S/wUWpaYy4EHAw4FRQgBKbQym/yrMwUE3dAK4ZQWJBQy7kaMa1BrkoUtBONTX4lV3jntJ9uVcjyVKfrFuUTBx03Yf/MMPR8GMgH0yumDpm7z59mUlnhxU/dfCDzKg86eUYGuP6/BjuER3T8NdAX46v/P0BV1KTC7hRaw72ryfMzaqADUkQcr0vdgmC6cpmZa1GDhmGDs0JmH6E/tUPS2VKtYp/twcOw==","layer_level":3},{"id":"29a33e01-a4d7-4a7b-ae5b-9e7d7bf2b913","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"RAFT实现详解","description":"raft-implementation","prompt":"创建详细的RAFT实现文档。解释本项目中RAFT算法的具体实现，包括角色（Leader/Follower/Candidate）的转换机制、日志复制（AppendEntries）的流程、选举（RequestVote）的触发条件。重点描述多RAFT组的支持机制和动态配置变更（如添加/移除节点）的工程实现。使用代码中的关键类（如RaftGroupImpl）作为示例，说明其内部状态管理和处理RPC请求的逻辑。为希望深入理解或定制RAFT行为的开发者提供技术参考。","parent_id":"","order":4,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/impl/RaftGroupImpl.java,server/src/main/java/com/github/dtprj/dongting/raft/rpc/AppendReq.java,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftRole.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.586975+08:00","gmt_modified":"2025-09-19T19:37:57.366739+08:00","raw_data":"WikiEncrypted:Y990F5n3///3AB84eF1/LSa16Sb/tk/gSXXDRWkMtvU7W0B+5EPQZSSGtpLCCSJCtpjnawA1QOdHknhrEcSEdZnVVqCKVvW2VEBiMggDErGLijaWVs1yeEdkLXITbfuL8MemWrk39CUYgO2rMNcKmOi4p8elPaFjaVpGuowglwSTn5IigRLmes/lo+f44j0X6Iu952ttdHEotWofkSef93cIZoWCbOIgrXmwc6mZHbrAuTmDF+qjlOV1S6AqHL8b0lqA3s1ZpKjGDb7H46oM5i95+C1WMs48JV0cZkmI1dA6Z4s0qXJog3tN1YWZfgcN37a0479P/X7xvXDX84w/RsHk1Y/1po+coWoFy96sjx0IeGIObCKXKnXR9NYZBvIWagTJ72veVZpN6+iIivU69FtnAkTBH0nAw352grLgvfz7xOynT/VNd+7YpX0vwETTyzJPHQ860X8Vwj1BieFhRaeuffo7lhnu5FK4lKOrYxmTufe1Ztm9CzMDij45lM2HCsrONJeKbiKrGdkUgGU3LWT8yNrNKmYaycDJ9qK152fOlUj4y2AZXO6UkRUrUlgfMSKM7gJcDvxboqoDXRMhcii60nE/BjYXqQCaSPraDu5FFvPXtaXI3SNPG70z16/CzCnq0ZhDJvMNnX9iXlm5D9E8MEEXhNAoSeNLWeXKGEZyiOqYcLgRZghZryPVRxXftUWPGRb05xIU744B1yiCukhREvMfyCQAONRAf8FO/ArwkzBr+5V1aQsBMuqxw5dd4KB7RktWfRHha7jJfOwYM0EHSqB1EkEe3xVl4iRVLIG4EdGj1cOcdURaABDC/AZm1BA1CYKQ70xl3bOtXGBCCOsvV5W2kzy/dsEBleIs+atK9Cy+SIMMZOJTx4pFhhClVbsuz1taNbUwJQKZz3rrn/YW5ipfbE9+dfVZDw8XrTJzeXK0upXfAmct8qqOjwIFKBTty7EffHIAg5u+7n+cxgxEDnjRTMcWhY9d6qsA3Nn2z9V88ezrmkYwIhcNCpBA5g+QWLGdh5BP87TsSLYO65p/bKJ8pGunVQVFqCRWR8piNaZCTjwta7iuoOEcPBdSdY/KpUD9yIH983KePrFX3M8ptzEjcZzaVoucFq94T23dOHUPz6/cA1tMTnjq020Iz0zYsot0Mq+baktVj6nFUTGgy9IkOjLnmZB6SzQYqd1xHriNzYCIUPwA/Ijd4hVPmc6pdB6DQylXy0t/djSA3qfUqbCNeP4UkWMj9USRfNc2OcO+ue2nNNwycTe9G9H5YNX+gmwERfZr4JzDbF2MSoTUCaNSmQuq29e8wxVkj4r3dPu5ZobEZFALEvMFOfgl7mE8pqDmtvXwv4hriTu/QQ==","layer_level":0},{"id":"728bb739-191d-45e4-968c-2297cbc889be","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"多RAFT组支持","description":"raft-multi-group","prompt":"创建多RAFT组支持的详细文档。解释RaftServer如何管理多个独立的RaftGroup实例，实现资源隔离和并行处理。阐述RaftGroup接口及其实现RaftGroupImpl的生命周期管理、配置（RaftGroupConfig）和Fiber调度机制。说明多组架构下的资源分配策略（如线程、内存）和跨组通信模式。提供创建、启动、关闭RAFT组的API使用示例，并讨论多组部署的性能优势和运维复杂性。","parent_id":"29a33e01-a4d7-4a7b-ae5b-9e7d7bf2b913","order":4,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServer.java,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftGroup.java,server/src/main/java/com/github/dtprj/dongting/raft/impl/RaftGroupImpl.java,server/src/main/java/com/github/dtprj/dongting/raft/server/RaftGroupConfig.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:46.572068+08:00","gmt_modified":"2025-09-19T20:15:32.589612+08:00","raw_data":"WikiEncrypted:GOSU+cUNSqpy23ICUoXsf1Po9OX4bnF+ygDnRr7kvK34nTtzAli7viyP4Vyo3ohxRJe2GQNT2LOBSvTzLCvdcAHsqB2KNNRja2wEYW7QQ/hAIoF52bAz7Vg0p/jZUqtxYMr/FZAIl/T8GcoJnhyh4AJeNoavcENG1WbAhWbt8CwJDSFraTxaqidLAak+HvIxlJn3meWs4yCYFuisgi0HoTrvJODg3mJSPcI7ra9jXRFgKkbphm5iGj6+DsGNZpGXN9Yj3nG7VZqDchJ6AXfkEVxZ7Ae4XBcC991M86qVk1z34R5R3ffpSN/Ai9cX1GgtRgCADGXAvGamcXf7XwE12oTJmFnk1NODhm8hsG/3IM2czmS8UaYUW7+iNOiA+JbIQSrZG9ShF7o/t7UEmypnp3K/XLxR6Bpo5LqoT7xYQbesMj9K712YJA3hxXfOnmM3zbiCxdikOdqEYsWBqkHzF8J2WkSMCLowwReX/K+MlqcHBLXGnPE24PS2k/Z2x652Vo9LwQGfLhD5C6Dv1TzGNwwQeBTik2Ddavv2dTQZMSWisMVz1RwIGzArV+ST9EclMUgu85/H6K1BVuRHq5lbdHegx8TbWLzBh9InMmo21jMAET2D8HxNkr+cbRhSuWr/cHezikN1FCRZ9Mmse6tNUZimueOYlWDikXCjMrsWzAGgrFsEwfXWr9br2LRaGOg+lw7/HfBmqoYzU3x0z1iezJKaA4w6IheKP/g7RPXDmx/xLgt6eIsLHpIMYT3o90gUmS2HHf9ecfRoYysxP1g5luuCI8b8OSAqyxVwHamvHNzwz7TVzJ4g5j6EsYiX1WdckzLNHx784n23xIDqIrMAENHiRaV/7R0t1T6MG3Av2G1qWRrEPN+XOTHphF0MNEzA8zcCRPAQCXDb9SfxzoKkEzj8cda5yjWqhbUvS8Qrp4TZiP6vWqlGPuyEb29Sz5Etu6GqFVPOI7t9JoKyvK/askbR2SwT+Y9Gs8af4Cu4jwHQoU9j3lC0U0WEJeFh1lmkXlsZRwxCV3SrWIDyyjgsOR9eMofulua1KGCbypzUyxwkgkkSOkxUMRnbvuQW1z3NeGwBCvKp4tjAv+hXiO97+gN/fN1Iw5vJG1QeLRJubhdZMt2uYUPrG+ALmn3TwNPHIL5YxPHqcg1RPFYByAdi9fC10BcllOb6POH+DiEP6rjpRgJJZ8CEqGGGTGs9vreresZSfsX7C4c3nKraOC2kR8aWT7q4ob4X7Fh4B0sXEuW1GDAiXUiS/7+kqbYrWb5bqr5qjEmfz5jLP/glAncl+CpcK+EEO5SlyncXZ10eCNi1Na0qNIc57Cx4RQKNI9k2LUz0gjoRT54BxIhWt8c1uCjiLV2ndViOt3drDBLwcjw=","layer_level":1},{"id":"08d78f74-46c2-44b2-9b38-0e266c29322a","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"异常处理与生命周期","description":"fiber-exception-handling","prompt":"开发Fiber异常处理和生命周期管理的深度文档。解释Fiber中异常的传播机制，包括handle、finallyCalled等帧级异常处理。说明FiberInterruptException和FiberTimeoutException等特定异常的触发条件和处理方式。文档化Fiber的中断机制和join操作的异常传播。详细描述FiberFrame的虚拟调用栈和异常堆栈追踪的实现。提供异常处理的最佳实践和常见陷阱的规避方法。","parent_id":"1b37474b-db6e-453e-9726-e643ca44639c","order":4,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/Fiber.java,server/src/main/java/com/github/dtprj/dongting/fiber/Dispatcher.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberFrame.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:03.888218+08:00","gmt_modified":"2025-09-19T20:16:56.27773+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIiZvFe8NwoSekg+Ww1wdq1bGEJm8SJtOb1KWUg6L7+O2i+PTiz9bsmNtsSjyHwlXwBX67ojPowNFv1Lmx5GIUcCYohq8ZHDmzmkjLnUordWNUmF1T1SR0zboofqr2dg085GwBiTfqtafWWUO5AlDr/zWL+fgPDjQvbr1BwDeOrArNwnNgLf6FqzMBv8uEt9p2hq1e1cpLj+4UgPU2NJU+ZUgLI8iI7IofnbIi/Fw77WOYV5RN99gzLQsHZasAFRkpJn8sslCncaUJ7k+GUmug3OAkK1WJaRRh/8yul6thOC0ABi+sM0X3WZ61CPt7/88kR/hVSrzNIVLSrZwKrlJjaf1JM2NSKC/lD3aHdguR3l1NNQ3gteTJUN5h61apVj6VRn7K/5THdPDL4pJ4i2HelzBN2AKWqEu3dALWjdBc6vSE7Y+fP28p6PCibEje5IhyMAgaxCdDerY5SiEh4HCnD+7waVK7hq7LyRQUwLdZLs4bArXD/kCZbWjjH7Gr/DTiqSXNzm7GRdYNVhnXxCDQN6xFKSF5ALIgXjsHOJyhnZ3tyjbjnoF49ONxPmuJ3e1WbRPPyNlmvnbBtgRkn+URv3W/ukJIglM6SoDpNXa/LJGhNuHqdZeCD3WkkK+/a0WTsxxoLbn2zlfNE4eGdsh/5K3+raGTLjyn7WVxl36VUCyvH27i5CU+3q6vV0HsIiiyzDyXQ51LujlUQoXVa+iiXKJtHDjQkQhqVOlDuqPeDx2hAdYDcwRzQzgy3X6Qs0GFQVTkllv67frDcHE9DMXQQL3cdJiGSjlTo6Vz+X237DB2lZNZN8tqIjp98fo5AZFwwLVj7fQntzsb4/xdYQMw/gFly/dfmDjH2dQEGTLB+QsOD0I2YX+UdtRdu8h20N88GjBUR66z6uQH+WmReo1UAs1J9vz6x7zqrIRQBmM3EEZqBKN8U/o3cU++0jmzVM0UK4TKPn6AMxdHNjDxDsp0Wdw6BMoOroo7B3ETj/Dg4hAnEUu/V/ZuZ9TYSn9lAU0SYnW2EwYjNBIaP/jSih/AGQmavgB5Elt2y8oObI6WwwYhfGrYue4cPeL71/0mGCi463g0eoMQbn/AsuytgL+GEtZ6VXh4BVw4uUDsysFxPuuKt7fCGU5jJJq3K1iFKB4+cySVDNiOMtajdtp/XHku77AitI8n+P2PEnIaR87vNZudRg6DjKuIczEPTDSPmQKlv1HLD0/xZ4omw1vPYNrIFqQ3XWEV/iFKpTGcYmvkeYF","layer_level":1},{"id":"22ab9316-3651-4ceb-a728-5015a12e48c2","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"TTL支持示例","description":"examples-ttl","prompt":"详细说明TTL（Time-To-Live）功能的演示实现。解释TtlDemoServer如何配置和管理带有过期时间的KV条目，TtlDemoClient如何设置不同生存周期的键值对。描述系统后台如何自动清理过期数据，以及TTL机制对一致性协议的影响。提供验证TTL功能的测试方法和时间精度说明，帮助用户掌握自动过期功能在分布式环境下的正确使用方式。","parent_id":"7a2e7732-d457-4418-a948-36e0a2983324","order":4,"progress_status":"completed","dependent_files":"demos/ttl/TtlDemoServer.java,demos/ttl/TtlDemoClient.java,demos/ttl/GroupId.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:31.040754+08:00","gmt_modified":"2025-09-19T20:16:53.820624+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbbOHrgz4Zu5ChRAvVuUjUJYhI/TE5ZE1MGK0Q8DGCoaAr5yJCs52KianYUkDk3/jiEstJM3s1e2UziYiZyfpKQcXDauPEVC3B2/Pi0wk3+JtXVGlBStJbXiN2sfpknGICYx4WFzB45YR0QtDiCOAQjKgZdBQATzArT7tbzVQyq2kwHbmlAxWfZLVaDPltc/ih0BmtVhImkwYlBnin/9xJqrA+vUqstDa3aLsi6S+3dVdZ4sTqZsvPodXorzLQqsdCxHIiPFrvsszX4RZYv2GgU2SIKruUyWKsSvDBMRiAgtwYkYI6rrVXY5jio3jOE8FNoJCC7kEp9rfBRR+4xMNBpDg0L/ESXFec83hXt9P9LSAigvaw+YEq1C/YWNZ2rMwvu0nB2UGZnwA6Y99arnkZzkQ5jYbJ66PTmh3OaNKSCBiK55+sJRAks/8GMLDP1JPQxg4yktcvtl43ti67hCtp1JOFDbyK0GqY50fyGCdWfGoVrnRz97mIxrLeYicqD1F901/a5lXxpYYA8kxVp8yZFdM1ChWxpGWOVVFJjcvFMRd/C8jy/97T618SNJASOsicUxX8Qw6+zqfgp3i0B4CjQCuZZ3gx0F/QdJZzNNJtU/lFxo0AKbeKfdfQ/6ZvxPYh4JP/AhJlNdC57u0oGvQXuv1kJFgSE8q+5hZzI/c0+YjCdlQVJpBl6IBTebQmgEFLytu9/B2yHucWF26SIC/VhYWYpXJ4uj7PaTftHybv/lPBDMG8P59YNvR2EISqn0TIpG3y/NMhEeAjsfZdAWu3LY3EHJoSUnQwVkbs9cz4wLZ+jl09xyzyESFFVZbCaINvwN/TzORKnhKWiUujXknevdeOjZsAyU0ilubEEjsqCnEvI5swsqZ/0+MCWslP5weLPzNRiukWMJb4QL9NcRDZhUJ5MF2abpPwJwhwHcp6aZYlAT4f4EYr4r3CT1haCJ+kUhGGN2OgslnNNySWu6uuP8=","layer_level":1},{"id":"48619ace-9c66-4210-bf34-dac09706778b","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"角色变更处理","description":"ttl-role-handling","prompt":"深入解析角色变更时的TTL处理机制，重点描述roleChange方法在Raft角色转换过程中的作用。说明当节点成为领导者时，如何将pendingQueue中的待处理过期任务重新合并到ttlQueue中以恢复处理。解释这一机制如何确保在角色切换期间不会丢失过期任务，并保证过期回调的最终一致性。阐述task.signal()调用如何立即唤醒调度器开始处理积压任务。","parent_id":"8053381a-eb74-45a9-9c28-32af4c030767","order":4,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:52.989156+08:00","gmt_modified":"2025-09-19T20:27:57.09864+08:00","raw_data":"WikiEncrypted:3DZ8Y7bDoeNECWeT8KrLJfcLrJokyzq5sqd+b7z0ErNSMsR4sNPRPxFsR+UwuDrhnYZmo6bYozQPiSB1GaH7D9ROBmfhqJ/AfbGbnpTsDOPvAiZyXyRas3TjwtXdnAN3KFW2MIrhrONGflV2yL3VSZnak7QLKOSuYwwyqB3BXjPH6yqj1jmczE5qqEfGojx7cUtlRqBmuv+8ZBkWOKoZN5LFc7YvJhb/Oc2WPIxX06bzgDYxo3n/l9AaS0nQbc/AMErStG8VgBWQunJIsQ+qz8l3DFIG4VSdgcaDhfWBL4BgihX8q902pQTcYaUBOZG/YKvLcro88dI42S9UrLRpkRlUtnO0FYj5y5RLqnRpJKOEAEXSSFgp/Yq46dybilU+EUDOqwBjtN/0PHR7WbPn+LzxFub/QHeVceiSlXFcJc8W8mz/v8q24PGyYNFycuI9k11RrdVyqvXVJDYNvyyFTDgif9Dp+0x6B1xQ7tQEPsGrfR2f4SAPUm8FRlfEtw87QXaOjLTdgIdilTOvKqAPnKkpbYGreEcTpgg0PgdN3cNCB75DpKe0BAxSEXnU1A6y310DeHZkb+fxQquwmDPqDKJ7DqcxFW+6acOcRg4MNZyuYZOQsfkXX81TaaGzb9BtKzL2PbygzU7DXlmsXySrOaCnFj3BQBiXE8UQZP6askuYUveNbDU8XolMyx+yIMZf7kjD/tdNRAUjzE2VGMLxh/65yp+SmvsBcGaG5ATE97DgrBQNoTyCYY21Y191vpZzxaRcYlwMQ7BInwALpUuBzY+tG8zODjDUO2y4AIe2t/jDAS5MRXZeraVx7aXEbiOL7rgh8VnjHhTxLdUzNFaG2HRPwpgOCLlOOze9lqHJ45SdnNSnWkcpx/pgcImAk85OqeqRif1xEOIR9ef8wWQs/z1lHnSsONsjPMU6IYPUeOg=","layer_level":2},{"id":"c486d735-ee74-4b63-b812-f1b40885671f","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"监听器树形结构","description":"watch-tree-structure","prompt":"创建Watch树形结构的文档。解释WatchHolder如何构建KV键路径的监听树，说明parentWatchHolder与children的父子关系维护机制。阐述ensureWatchHolder()如何确保监听器在KV节点间的正确挂载，以及isNoUse()判断在无监听时自动清理树节点的资源回收策略。结合KvImpl中的watchManager.afterUpdate()调用，说明数据变更如何触发树形结构的事件传播。","parent_id":"19ed560e-f4af-496b-a7b6-d4ebbf134e73","order":4,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:33:15.80082+08:00","gmt_modified":"2025-09-19T20:28:51.343019+08:00","raw_data":"WikiEncrypted:TjRgys+fEvH1v3SLsSI4OdXT8RqWApOs0OefXwsjwJLrmbt1H+Y37/RZvWKxoClSm/L2zvOG0f6Ur5wjejWnjrXP8+p+2MwtVva7Z6fSVbzsr0p45kVt/urU8bpKGOAs2LjKpBNIugklRQvBHaOkYneMHU6u6qXQYQJrpi9WgyBvswZwSb/bC82YUOTirMcUpJYrJCOT/S6KOf9Xguo8IqxBu37HPzFKWi7i1vZphjuZF8+wStW6RNv9bPjzVzoQ+jgu5bzk4ZRRIEpbyH669U0qa6xiwW2ktCVRegIbBTX166iiiG/imcuOfsh395XrteVfWqcnmJvrvVxpZrIhMf7dJo2Gy4I/NdpBKY6vNuJBpe8Hq6uSabg2DJKNjzwpj9w5lP2IGfwc/yWcfMENHEpXR/o0OCxL/K5hIRPhlzOgEjymvlc+Io6EsC9uxBHxNgcGk2Kt+a6k2LaNkpRjxi9HHSeknYVtt27K6SEqcuSTCqacjylwGGrU9/iGh8v9YWY8kvdB59Pz3UsN2+nVh9sSUzh1D342Q4YLP03bhSCYqb3sMokl9wYQ69pTtfNCJk+RLqBvoUdmF+MxzLc/Yd2S9hJNDJZBVTzWXEuTqoMNr7FlhlzOhFmSWyO54BsEL+BPS9xVPrQtxgyCOfrwc2+SdcCE9MSposvLhBquVtWu5xt2taTAYpeZ/6QLfRL7FW3n5rwoUAGu0TsZGkV5aTUer5J/d+QWKI/evAaz4RQUJV3oSdPr5v3s8RgOgwlZ23Jm7IAgnyZidnAD0Hqz/8OcotuGPjurk/3NOoViP+OrD5L683OacYLFFTEo1FWrl/sLlxa7++OL75HbH46KzV7BC5fxrx+3pCLCSdluiWj1Efej9I+I1GZAKn8+4ALNieX/a7yEf2sWlpQXOUMp4VCpEO2+zI7Bx28aUj/boHqFdRojC8v/hIPE8sQB3NK64TB79VAGdDYfIDOj1lddUrMsUiRHBeaeg6/2XGA/5cJp0QFhR+CrYNQNPAruu9wXw0TKNOP428HfHaJUxHRcWsDcyuwwXvmdNrHiwveWGNwg4e5hhGIEVlXIMys2XFqOjXjEj0nGUSsiNG6WanT1/91+vOejzp/kSrybF1GyiTWjv/8XoTs7Y+X9bG0H65Sv","layer_level":2},{"id":"1b37474b-db6e-453e-9726-e643ca44639c","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"Fiber协程系统","description":"fiber-system","prompt":"开发Fiber协程系统的全面文档。详细说明如何创建和启动Fiber，解释FiberGroup的调度机制。文档化Fiber提供的同步原语，包括FiberChannel（用于协程间通信）、FiberLock（协程安全的锁）、FiberCondition（条件变量）。提供使用这些原语的代码示例，展示如何在Fiber中实现复杂的并发控制。解释Fiber的异常处理、超时和取消机制。为使用Fiber进行应用开发的用户提供完整的编程指南。","parent_id":"","order":5,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/Fiber.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberGroup.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberChannel.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberLock.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.58799+08:00","gmt_modified":"2025-09-19T19:38:18.614408+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAIrSC9RfPUjZeS1hXuXsIFvhP8AKlA37k3+TI5PwQFTFOvNH9r9ymiLSbCPafbr7WaGobWxkWhNm2PGNFlIQJ6Rl0D92jqnlOfiv3OsPuMN4D57KVHTvqeuB871FJG9vWH7wf4UZs9fmsKFsqDN+8DPc+oQmMlcpA8k5j8zTMchRzsBm54d7GH2GexPmLGu2ScQD3rRVi9QL7L/ynzFkXCpJeMgJkrN6cAFzL3QuO6zi2u4pY99mva7SRdthySNi2kLb4lkstSdI9yVgucHPsLSqbx5rRyILfO6mHe8Z5DmV6LosX/o7bKiJs68rQrB0EJ5ImJKIO1GY6UK1FhHVBLaTHLmwgeyz5plnVdQa2u7DRxyZvzJl+34PUAfGMVjPJEWrgAtC62rq46q7fk62+9WMu3HSluJhm6SS0+jis2J5ppgG7jLHhb2471qg/TshsLX/V+Ko/wI+GWq3uEeBP8O2ysmuiHCmKjbb3FXR6APPlRgP6MCaF9OjtQPpjnosAw08GL+Bjz1Td1sdYCJlavJUiMWGRVMg0iHS0YdsLG5GeLR1BOapiXp5E29eFhDXQPzdcdG0TgWXJb+GrSEVHTQLoXBi8pwmku6nIOIq3LjJyugV68hDdxs9+VGyeEzMQXpZtKKegptRVrtm9/1NXc+44DBTVM4U8ljU07kHrkShQWqE6N4fyyINE/vMigt5OZ5E8mKQR3iEr1hdJxilAkPZpJ6KPS9l2hhLxDRCP6evkkVUhRY2WXYxu+M2JG0snGt4BhZKBqpKuznhxhRW1tHEnW1jM04e+1ZdjCdkALWLS2ISjpPgFYNR4gD106O7jpzre7RY+acDVlRc4o29XOuOtq3x3QdF1aTyvM/k8H19LiQg6VVaX4u0MhO+DfUF1FuwcyUTVcsWZoCVjQGyl2aAyU8O2QenKYO2D4qJelegtM7kQBbb37rdJGohLRWnDP7rylYFxb+duLP/G2D427OXFsZOGFElQZES2te4mampqaqkgUTzNkC5TQ2XJPpKtV98T4vhSzPZYcf3JlHflxAPbQewmBL9Ov9f93Bw4SlAdINRJLS9PXbPHLG7lwD9wqj5OMUogRf7kytXISrc5CFaw6Q9zu9pwbaNMudCRd6P9UGONnGGvsjS0p22D8O6CawKt7WriDaikaqLXJvilFLDscvycjgSDZFAB5sTCl4Zlwe+/lXZm6CPJTC5jBkRRkBJ9CEKLKtmYuFS9/7+/awi8o3y4qkyaGdDhDbH+i51YOTroSeqznOswEe+yGXfdkDYT8QbCtTbwNJww0bzgLv+v9ymc2EJqHG5B/xKH+BRW3cYSCre/L8/r/enncl9qsw==","layer_level":0},{"id":"528d5941-6af8-4f59-b896-a61bcea34e65","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"FiberFuture异步编程","description":"fiber-future","prompt":"创建FiberFuture异步编程模型的完整文档。详细说明FiberFuture作为异步结果容器的设计原理。解释await方法的协程友好等待机制和超时处理。文档化complete和completeExceptionally的完成状态管理。说明回调注册机制（registerCallback）和函数式组合（compose、convert）的使用方法。提供allOf等组合操作符的实际应用示例，展示如何协调多个异步操作。","parent_id":"1b37474b-db6e-453e-9726-e643ca44639c","order":5,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/fiber/FiberFuture.java,server/src/main/java/com/github/dtprj/dongting/fiber/FiberGroup.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:31:03.890442+08:00","gmt_modified":"2025-09-19T20:18:06.691116+08:00","raw_data":"WikiEncrypted:k2R3NGcp+GW7X6N6nWPAImsQ7TU3Cui1D1m/P1/VcMYfGk23X31gLSMjQ3QgCogra/SkWKyMOSpZE6S+KDmK6ZfSy1bGvL/DeH814YXLIemfP0+WNxUOBVs1U7u0PDo1GH4LTEmlRv/8A4BuG/1FV1f1e7t00q+tfbfJ4VeiZenrAF0w79vb4GIdCfPz4vIqDgyMXjUf97Nn/JGbpnhi9YFALkCYfRX8tETFbXKnqj/Kn3zKq5T1ueMSxp+fE0k9CdZvItvl1yFOo+MUkaAADd2rlPJk/dtk2FiUKYvQtVF70FyeKMviwCLZ1WUE0g+wr3RCFELgIPPA1lU1493jehe4hi2urTiwFYn+mVdufBf/4b9cPR5SGBeQM7LL5L4QO2ulyWtxA4gDmfqpmI2JkegvGVhiza6lYszWmkG6fzUqvdnpPP7bMcAYfQa6uJNE/I4cPkkz6/i6qndqpSOObiv63bdbSQMWF5bzrtQDBwBbNPTRzZkzFPb8zI8+Ahu3nfPdJlO6s/yvQ4DVdYKgkRGLKy3AAY/TC2Rjcw4rjM34kYjc+hPKlZ3+gSBz2/TWjGhak8LN7df9HDB4672ZcJlratCjVwPBLKp0uxhT+X0h6jwXKhQeqOoUU2SMHVzWeHbp4hoUOG0s/vR1GoCrnI0kM/aIpMzw5868Y2FCyQrxEV1aDshMhfkxfgvqFJlvXZYzZ+vK2p+p9OkNwl/iigw1Nil5boc4Ul2pB7tuId8eOsDdxUSLtDXpP1ZMiYaC+rTjk4AZ7i564yUS3ph8Cgv0vJC3qaD/CFl4SUnznsGV+ianIEnh1/7JrPf/5Sqr8SXquYyalhX/kv6DRV+oKQ7ZziZZWWQ1SQuAkKdNj19FQLdfl1ZpZSR7sYOTqPshcFdDMhxDcT/w0huwo5R8AoCQ3lRzU2CSAqxpk3Lx058X3uMXgDtpLpx9/xBWZLztrwDmfFgov80Rzi/klOOLFdlZuRa75MVsanBxcNC/eu130PCl82f1+iq2LI5YmDjXbqreCIF0XCGjfPufnAxOLcv/ANhbarOxytflE0liXylyq94JKhFGGZZlnJx8WLzFrO0lj1iNB3kKLxNjZuFA1Q==","layer_level":1},{"id":"5dde8123-6ce8-401e-ba08-e3838fdf7fc4","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"Watch机制示例","description":"examples-watch","prompt":"系统化文档化Watch（监听）机制的使用示例。解释WatchDemoServer如何实现事件通知功能，WatchDemoClient如何注册监听器并接收数据变更事件。说明事件类型（如PUT、DELETE）的区分方法和回调处理逻辑。提供多客户端并发监听的测试场景和事件顺序保证的验证方法。通过此示例帮助用户理解分布式系统中实时通知机制的实现原理和应用场景。","parent_id":"7a2e7732-d457-4418-a948-36e0a2983324","order":5,"progress_status":"completed","dependent_files":"demos/watch/WatchDemoServer.java,demos/watch/WatchDemoClient.java,demos/watch/GroupId.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:31.043187+08:00","gmt_modified":"2025-09-19T20:18:12.330402+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbZ7nibI5HApp5c8VYquS6IRJEZjgfYeDy7Eb0KNqoUvOsP7g3Wd7kHeQxERISjqwqkspWAPiUtfImZeyFGpn91Sci7Oc1iUMwvbFtDEuej+Wc5x7H9IKIWgmDt8dOhLUSKUXnr/Zhp0IaHkfBXSoCRlprp6LeEGPK+o52nO+h43HIi3YdIgxQ15Ojvb4u4/Sp9/jRP53pazhd7aY41qc2VfAYogvJiME95hMDUzAWnUB25oJQfGj1KO6AQx4hoilQwUX3kzvwoHnz04vqEy23Uc9EOPvpMiG/mKXw9AVFqZK/tLXgyUvfLQ60bwJpq7k4hdhkPqFhYuiCoZLbLmP0S0ndg0Hi5usTSXxg6oFwKx5C3Lwg3D72jftliBRGozKdKlaeNnGfSMMNCcm8q9eT+KdEU22NowKv3b27J2sECbQimcnmLP/5stMTvCpAr9AEOHhtQVdq0HcCTwaqyGQjXR/bkPsJCIUvAKMY1gnMZdKr97iFsVXUCXJc5rgOVC5mNG3dGG+S0G/2n9uDb9RTp/ZUYNjIZ0w9bKMAMMyot6TUYjFAe26KEb6tYAa7bcRDS9wyG7g/9QqIZ4UoZnYAC7uQEneQt3+ZreryyVKORCDOgIPRw6qft3simZe8IdnS1iaw8KsoSt88S3wTzmXEVGy4K60zTkMqFwOuxRIpTrKOvrJuoXktTMDC3lEWOJzcqpBOtBcEAN69L16UOrFPrrraCsymvnCuiHXW/cboxunqEkQ6bgKVMXeirFAo1g28Q1m7aIXYyunWmV8mAiuSP6NLOMJ14MPScSs1BBIYcErq0f3TifPjl6ZoQyuZDeAi7SMVoJ0XGbQEz13XCj0u4CT39n+sgmsGYxqXNmey3kQrMACVCKYaxBzZsGw+3xfpoMRemLwornwsvt3P7QzpJpxMevFsc1uhBwafF94ma5h9+XXG7dPrEq4hzO4/Qkar94LJgGLDJaiIm/Ru/tT2lwmkAV1lJEi6cFS/97b4h9rCB6tOaUovfxUGZIKQPLFVQ==","layer_level":1},{"id":"dd3205e3-74da-4d38-a52d-e177f4ce68b6","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"分布式KV（DtKV）","description":"distributed-kv","prompt":"创建分布式KV存储的详细文档。全面介绍DtKV提供的所有API，包括基本的PUT/GET/REMOVE操作、支持TTL的过期功能、CAS（Compare-And-Swap）原子操作、目录式的层级键管理以及Watch机制（用于监听键的变更）。解释每个API的使用场景、参数含义和返回值。通过代码示例展示如何在客户端使用这些功能。说明TtlManager和WatchManager的内部工作原理，帮助用户理解其性能特征和限制。","parent_id":"","order":6,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/dtkv/server/KvImpl.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/TtlManager.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/ServerWatchManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.589074+08:00","gmt_modified":"2025-09-19T19:39:34.366046+08:00","raw_data":"WikiEncrypted:YDoRcNsKkN0DDXOHAYnH4Eu7MaaBWkZXIODYYrtzAjp/9XmaNsM/8UAmoacYm5kzT8x0MtI400wQmNfPpOHUyBRaGkS2Udp6LzDMZiOkSewb56Fpe6IJYY8DFS55E5kNHo/7eyubDwPH2U7jUZXvK72uvWMi9NG+9beeRfvspgTN1mdpFFh+O9Kh4AiDn0+ocDd8dtFXRPnSlbkKuJIIuFEqjhGRSk8IMsfqUMaF+Y4knpgyrynHTHVbShZuUSRajhfF2Bn7gZjpcJ/yN/P0VVCi42Ebpx4qoaFk+FxSWE4+j6OT5C8+b4gj0hGePMgEa6vp3ZDQkGVH7UFmDLnyTwUqGYQenEy/v0MoFGc/DiGk2OLkQJJeQlyXbFxJEPiF2y82uWFhcuwhkcC4fjenuALj25evJDku9R/V/KbpBP/c/ZVvMdbQeAJxfUevJT+7HDRjEsNTEscYHypnLQtRGGbNPGNDWUYzMZkAMVe2IL2zzn2MKdNNZQvTRzOULJolW2J7l6VYw8zV2HC2qijOkZ1VJodQdkYjS2awACTzMYmO+QUBiZf2ADIaJXikbWPUzb4W+yy48E8BvV4jM9KVQTWQ1r7R6bMWE0CwAvOR8NCrS9lGY2E9RRngCiSZZQlbH6QVxdh561WQnOhlWHt9XmKag2rkgcvNZ7Cjj8zlBigqz4SxfogdPmylXZk9hLQHGRHc07uN/IKUbpSZUtDuPb9bBNaSTekWkacE2hOjyzl6vZo9oIqJCU/fcSgZBQbQVm0vkUHEbFEglyoXLO95xqthK8iazSzK0sDWgL61ZB3Rp9QeBxVMBO0TUnuGoI+cyxSKXl5lsqciyr6+xAq0gFRDZvo9iVtvvs0USa55qda4c6HWjylHapDWEOiprQfuEzcsZiO1/WbgLzGZeJNNPXoUZ9Z62Y8/l4k2IuLX8eRqm6Iy6DLrDj40M8cOWqyVrKmRoXziuFkDS1NcGe4A+HvYeDFJqocT0/ozU5/pkOMTBh9fYDhck563Km86BjWbgEJ5gBXQ4F44+NEDVxR8HvDR2d/5zlWfWwWDG5OlbHGdNYYgXplz0ctYwnZcdZMcSQBIqbVyZvslryfNL1ZcwBWfu376g+Lnp4XDmOmsJpjw+99vRg14GgrfpVqfe7zsM1rw4KOiGA/LThx8XCdLFQzC4sNyK/vrt42vvGwwT98dmnznh0BBEFcM1VR5iFjEJNNczUJ8SMotMTR15YxhZHaN1QnMnTEovovtW2L3KNg1/cBVGQclsQcR8ENqgVWrI/mw8TFwHjeUcObxPivclA==","layer_level":0},{"id":"3673d810-7ff2-4ebc-8149-615c838e5463","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"嵌入式模式示例","description":"examples-embedded","prompt":"详细描述嵌入式模式示例的实现方式。说明EmbeddedDemo如何将Raft服务器直接嵌入到应用程序进程中，实现轻量级集成。解释嵌入式部署与独立服务模式的差异，包括资源占用、启动速度和运维复杂度等方面的对比。提供嵌入式模式下的配置建议和生命周期管理最佳实践，帮助用户评估在自身应用中集成该框架的可行性。","parent_id":"7a2e7732-d457-4418-a948-36e0a2983324","order":6,"progress_status":"completed","dependent_files":"demos/embedded/EmbeddedDemo.java,demos/embedded/GroupId.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:32:31.045178+08:00","gmt_modified":"2025-09-19T20:19:22.954258+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbcjZs0K9u0Q4ueTGDa3cVV5Io4FYtoyCCgNRIqV1VtFqnXjhW+Y4UsOuuLehkFprzPrwpKTyH/RzKfAlUxu1v7wSNlZeYyUzuKpKAWDq+BkSTht2a6fQKf3HPQeg7Dql8osGq47dRpg2maX47zMjaPaqbH2ue84XXIILEVpY6kQEYwvklfnZ3ItcjODCPN+zJWzt5g+Msa361+sW6opgciF9vTZk6WuFCAPQLBgdyXZ/gE52V942zO5QOOs478b+ZumuYatUuTFwy/Xyh+ZNDdg1HUKux44Ho/EzOlWaWx78ufBQ1AB1fjNvzgJ2azGhm2M3H9Tf8of9btywtylQ01ZV34/IvWo1Ngg7Ttlri/+9qLYXQoAhKMzRngkQnIfVXWSCg04o6PO8jVzfKukAm9/xPsA62tr6BbhhAK2iAYIy/sy0uyX7bRI1duQATodnjyydZiTUoMoKcaDU1S3OHAIPZ2m/Yqr314y0+9JLtRWtxl0m2ec2yVh88+Za79Zk5v+Twa05V6VbOXe/C7vKGTfsxWF42XyI7BkAOCHm8fZrdYr/BHGHMIAZlLjGg5pheu43ywz2+8obGiA1ADzdRtylsDvCdX6/zdeooBA8+mG0zfv7x6esHSMzAKzWXyaW0XM614zTrQdX2KplBL4FlN58UfXFAtz0V1gZDiNzvzVECjd62364hi3lypEjDZn0wZCb6ocY15JaUoXEVOY2pilYSggJSzjedQH+bv0k+eJyMqA1J3kujmYS7YO8dVQ+PKzGVe3e2zrEVqwvtK3DgXLPMntCIna5/R/9mB6FpbiQl6IZyY2Gu53aMKUGYxexNToKDWVCFwQDjjE7oYdjbekctge2hpvbflzV+C4WqnqbS44hPMhkKFEF2F5A6CJVT66RH/7CbC5x9vJ4ADQFDy27ky16ND5FPHKTvAx6GSo7tgoIOx7B8U8Hbp5nwBAFhQ==","layer_level":1},{"id":"9a176743-6e3c-46d0-a3df-d292836b2d5f","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"网络通信","description":"network-communication","prompt":"编写网络通信层的文档。解释基于Java NIO的客户端（NioClient）和服务器（NioServer）的实现原理。描述连接的建立、握手过程、数据包（Packet）的编解码和传输机制。说明网络层如何与上层的RAFT和KV逻辑进行交互。文档化连接管理、超时处理和错误恢复策略。为需要理解或定制网络行为的用户提供参考。","parent_id":"","order":7,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/net/NioClient.java,client/src/main/java/com/github/dtprj/dongting/net/NioServer.java,client/src/main/java/com/github/dtprj/dongting/net/Packet.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.590121+08:00","gmt_modified":"2025-09-19T19:39:56.494305+08:00","raw_data":"WikiEncrypted:y/pCTkp4paaDLjkncdknTgWpZ5WdWQTtVsNoCBFiBxqvgIwc5wQDv2qGR/FnwaLJEDp1GR3yYYULgnFjHs2v1JXY5DR2/ppOU4I5udXF6PSoyzzw/qx/q6OPGfs5j3Tns8lWHW8KpewRCtqJatxqUvxVIqGn803UduY4B4cNRzFZ9ZUJUb6KznFWUyiVPfPcdEbY5Sc3uL006G2ydlg1u5c9Oc4iAeN6pQF3ZtyXXy63fGDXqP/vmnG1ujCwCSpHc/+Ev5Wylj1DcpO1fdUiC16NlczD6EudkLY9uwPwI49hJYYyoip6B0WP97YzlBDxHk9dFW1sgNl9LCiIV2JxlvE5OX5/3C6F9a/UsKZPp3WXkqIuGSfhtgj1YEmqwrOdcd2jE0lv9zEs9l2gmCFMxkj2AYWtMPxzV/GkF2OlvmpiAUANyXnoXoaIx2BwXSLkXYfKUdySA/JlaaSIZ1FoQYqC14JtPYmlKwvHZN1/BtVnI97moOX+7sLVuhE0ieJOOAEXTenKTmlUXjN7ZqTMY38KrDodKZNwSBd2U4N49JXzFAVTMEO5ZrGt2adYN/ZnimM9jeTm8yD6dvttwhpQs5BmLLUXDLX8LRJcFN4M9nvKmTwsRMd+P8gq2ht+U2GmtGYnIKiY/kuDn51cdjNt15ByMW3wv6qxiAbeBcagEIQtAUUh/T5ORDummqrFWnJ+ymZF9NKaa6UHErPCcIGboxXjWelCZObpHT1LAfUnd3IfgqHVk2uqT6OlO3JKTzaZ3WUCxshKkAqVX2GCuEwhVhN2y7nlVhN9XaqdfhKZK1TcGKjPdiCY+ysxJnhicov+XyAmrplXvYh5yIX8ixvfJaILpvuLjB//QTwtjwkYudkCyQgw6YWdoGkfKk2xDIgev8VXj0CvjflmoBeTMNUZcHCq4sejolFBocfnyiIW573H+8pD/tZdossphKjTuaBY8cLnZVkur25pZVczpVr8iIgLmZnwDuLxIFX3v8UQBacEg8yNmHy3wXx+qe1zIp/sfc772YB4rTDvI5hWz66DLGpjgus8fu67+58ZvrfHtQJ6MuVCN6xSDSu47O7U+Wnh+uKqnk2Fz/0PZ1N5DjIGYUewBxg9qOiPfHtKXE2JpIc=","layer_level":0},{"id":"c3a3445b-9a96-4deb-b04d-e6dfc0c51c86","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"性能优化","description":"performance-optimization","prompt":"创建性能优化指南。重点介绍对象池（ByteBufferPool）的设计和使用，解释其如何通过复用ByteBuffer来减少GC压力并提升性能。提供配置和调优对象池的建议。介绍项目中使用的其他性能优化技术，如高效的序列化（PbUtil）、无锁数据结构等。指导用户如何使用benchmark模块中的测试用例进行性能基准测试，并解读结果。分享来自devlogs的性能优化经验和最佳实践。","parent_id":"","order":8,"progress_status":"completed","dependent_files":"client/src/main/java/com/github/dtprj/dongting/buf/ByteBufferPool.java,benchmark/src/main/java/com/github/dtprj/dongting/bench/io/IoTest.java,devlogs/2023_07_28_dongting的对象池.txt","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.591265+08:00","gmt_modified":"2025-09-19T19:41:21.487647+08:00","raw_data":"WikiEncrypted:9uOBpMbLX4DyZqW4us3Wm3Q7klXxmeD+JMMoGiSO2oNryWBo1gw9kLkawvxQIW9CASZSiyAjiA/zeT5DwD4S8ByJ6BUBlyZI7+zTFY35YwPeOAtQSlPpztUM7+bkj2nYHW1y/X9xKrx5Jy5jBYgMCOPmc8qmi3P7EnCapKQTslYQyW5FXSxjVOcIjPxIXBgT/LzqAhouclRn6/5VLZsb/jb4kpOdwDeW3oGgFBZHB/64LGZKIWiJkxuAknSaQ2GPSJ+wGquZzc/7HpHU/BT3wryMf6ybfrDiegNbdaIq8/625WCePcL+K4P/4cREZS7id3VJsoN3Up2fqX+GBeKSJz7uyAjiGsQvHjNa+xwIJlIRAo/fLvA+rcB6mWQYsiaPvGThP+SXrOOTcKcrKprTuXm/uz+sqnCLuYq3KWhSs3sm3GFdCvxhuM/CDWw9WGr/uvuWvKwSvmVJMecwgZSZfp31UYHPXBoZrni1ECnA6viIrPyqfM6hU3wKN7Md/mqmdraf5dbXumEinyEsM+CAYcLPKQ+zHiaH1X+7GVAswT7QhUE/VoUK27cx4dDqcmjWIyWNNhLZUhT1cjAaKoW5kfJyaZsIvherWxo0rvOrhxE2hisbz6hULMzB7YXo4R2THg1qIycKI6iQgEPktJh2+uISGTDoQQvfnS0Fw8a4e3VvK8iaEi6Cd/kXWoFRJeoLyBGohH+sTrkT69nzKvjPdQ4qax3IlUWSvvy+Pn+PIyWfysPCbTDZqyQI/UChiPZOAtmx7xAEzgZmr/mOhjQeh+2Cunq2RM1chPLU35EPwiIAGcX1U2BIj1O62UWnIQ7Hacu1K8ZRS9AC2XWx8ERVIsM5z+gRASe68tIwEHixZMc9qBf7CRrUSufxQwmPjbGH+P5lHPhJbiAUBMroN2kViZ6N6+wdZzBTemrHGpUL5KFgMqNGFpJxEEMQAd7aDmBntU1FKwzQfe7g69P2JQ/yZmk2MLWl21WX7irBeS5iCYTIGQqqSYvRir2zC9vMl3ThFTELqk6pHsxfBb1AfVscXFdLzhSZ6aXQer2yoxgbbEVyC2EvUoN3edo532U5M+kQdsX/GmPL52FL4qDp71N4BXGRFlHyHdATLnGPiB48EyDN9Vo/8W47UP+YiX7g8PNC/nW6joQytbF/hWeGSUZbCgP8ME0UknFWmY8N3EKtQYa+IPmPQvjcQyGBgJUz7hvs","layer_level":0},{"id":"06ceb7fe-4daa-40df-bcdd-c4895064c77e","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"高级特性","description":"advanced-features","prompt":"文档化项目的高级特性。详细解释快照（Snapshot）机制的工作原理，包括何时触发、如何生成和安装快照，以及其对日志压缩和系统恢复的影响。说明线性一致性读的实现方式，确保用户理解其在强一致性场景下的重要性。介绍故障恢复的完整流程，从节点重启到日志和状态机的重建。为需要构建高可靠、高性能系统的架构师提供深度技术参考。","parent_id":"","order":9,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/sm/SnapshotManager.java,server/src/main/java/com/github/dtprj/dongting/raft/store/RaftLog.java,devlogs/2023_07_25_再论线性一致性.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.592174+08:00","gmt_modified":"2025-09-19T19:41:05.831935+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGd4e+ZlhOlcU0FTi9snO9I31pFDv5klxFooIMNUPcliqF/M2nmJ8YIAXOaLMHKbF3NsI6lezdH2a+Ju54AyEbE0fHpG146TNTYh7Czy7d9Xd+OQRMpLBpBzW+8f0K6sBfy0ZN3FswIE8w+qORzNKpVM4vnnj/6IWYsZgN8905q3p1UZG0wrYcHxfvl8J1n2P+fwrK3V5qY9bohUOChVfCbzCIeFPLQ+YqcBgA8eeyrI7FECPAGEmXbKkpBOD0nlt5JQyB8+7bsxyCeGOvCIM3eVMKyqToGsAJmAngo5yBqu/e5vrm0QNIti/j/RD+fQc6Brsft5bNNIl8MVdNSJW0Rq7KpxHPOxEh0Z1EPg7Dp5OQmuvZYLkxC3x+vXKKRHSlltEro2/vcj13ET8zG1tDR1HTygdF85kh0e8SqVYVHfLKb7YumaXGW0calHQfcDUpq/nfo9UdGBDpEvLm920VNLSfOfJCYs6a6yuhPj92mMTN6Gb7N5eC2z8p/6UQ8yuLvwttLbQ8tgq63I4KFj0bgkjhAQ2/7US8OXWmCSwJWf278GHEqAu0IdTCNaLgOQg7fB6K5ulf5raj/P5DkoQc3IS+KjhE8tsOX3YAboU6eW3Mgzp/KPLqMq3LAC7oLd5defYIUv+Pq1N8B1SHEJlPoUxWtUnoGF4nm7pqCTRlMDMPM6zqxFmKhg8It84PSJrAJQn+Hu8L2T0zvmwvjBwLzF4gpvFA8mR3BqOKyrlBeUI3+jfMOPnuYW4YXlQ05vwb3dXIJPB7uzjRqrjkGypAdRRThYEcM3WbFE+5lLbYyuuk/pdK9IHl9je4yhEd4b+OjLnyFgKnejNAOX06zAHvyfLfG6WXOC8IvBn9ysOJuI5CuMJTp7JLOxXQ3z20vBaMQHlQ4iCQqURSW8SzquWDkD3BD//rqSwqYkjYy3SFjsFEnGdjETtEa/LLs0GF6OjnSUDiq9ODaY0NPRrWBscmlYy/1VewFpQpHV2ZBvdTOM3aO6OkCWuyMQx1An/2I2fA/qHZRTBE8vSbEpubuyDhQk2DGIxsam57LO/Ity5zo7zbgDTBCKP6R0yVOdRmxsJNpAjp1oQyI2mER/t5AkGt5h6EQT/iTS7hbhIKkSHEvHYa10yo01Vfmzo3PM1CyxgDzMS7dVog6i2Fb6GVPR8HgwCmvcZxDdBGwlnONoIoxPa/","layer_level":0},{"id":"1c49d439-8342-4415-b0f0-a6fd50fd63d6","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"扩展与定制","description":"extensibility","prompt":"编写扩展与定制指南。指导开发者如何通过实现自定义的StateMachine接口来支持除KV之外的其他业务逻辑。说明如何替换默认的RaftLog实现以使用不同的日志存储后端。解释如何定制SnapshotManager以实现特定的快照策略。提供完整的代码示例，展示从接口实现到集成到RaftServer的全过程。为希望将dongting作为基础引擎构建特定应用的用户提供指导。","parent_id":"","order":10,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/server/StateMachine.java,server/src/main/java/com/github/dtprj/dongting/raft/store/RaftLog.java,server/src/main/java/com/github/dtprj/dongting/raft/sm/SnapshotManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.59304+08:00","gmt_modified":"2025-09-19T19:43:10.447014+08:00","raw_data":"WikiEncrypted:9tFZPEMPWdLFkkE2XbXYMiyVoGpbaJs3fBZ+bq5gYQeisZg+4YXff6TdJD7+dMYcf+74o6YGtPVIDQIZPkuQcNWO7GbzgT6o8a36AnEh8N4HAof8aH4sfsHJ/MzpP1R47HGAnhE9rlrwO3bd2d+skJMflP7r7anSsFxnbXedQ/bQsjcKqzHM//Dfx9ljwj5dpzdJKN8quH7pPr8uTBwqXZTadn2UYBtBJtkSKaFgDJc9ndT+I8CMriHQn7OFy2LUfDLeItZgCHR2I/xcbnaa6NpSPnENJeVYh3FkzU+qhLKksBqBwqY8Acat+20ff2oRch5jtDvhQOWv/mHRTURMbQZk2xQdO/g1jtzb0CJTAcTkJ24XrN1eqny8ipNVCHemvDytwJCUPYV+k4ioBHXuTC96qPX5QcugUSyw6FbONreMzF+ZPmpx4qasga17F8A2ngmZAYAYICtedisRDcRd2pGKDzawBBlV6T1hsfqDyPXS19gt25mvD8rYCvcXIJROMYKX0G7YRh3U1cV9Aj30r4wSjFTdfD9bEptfN8dZgw66IZE1KW8It9K8QN4T3lPN/5rLg9FpnHo6RILxr+E7C8LZAqGhPwMMcqREPIxPkuNZr6kbjYEpHEfApRzPTfmTz5ZjG3LlBdtaKhI4c+CddkPgtV27BwKD+ly27fvy6Uy8IwFqiC1w2upBJWKRDJx8OaqR2rCESUZBoR50fnCO3rzdkGlMNQqb9EzTeGo0jUwUYM4+n7YbNfZK+6mGkWTVcHRE7y5RG2DLDmbnLIbDeNgxVNfk0GKhVT1HMr5CsI3FlpXdLFBjyOiqSQ5pnjRc+xlDzB/bpsw+5YrLpy73cHj8SaDF4JtBLOORB7OrsvpMVR6mvE+XZ75EFF3EIIlKFxYoifWhNF1lJ2iXDQ0JbXLzRYeFQUAkoafvcn39yn23c5j75dWay7c4cDp5PBzhZGcKgKJ8Ef2M7fwTv33LHKJ5vBPsCp/fWWe7++dKwMYf29MITNTXINBhXbBvcoUfk2uNc8s0nDLg1yi8t4BDb1mxCJbPo220tmAJNipy3ownQg4n/dVqWQaG4yJG74fEEPlCEI+RfmDXztuTqOh3eEvBRCeAXS8DthPWIku6AfXZKBOlJaxgUbDQH3+5PVRTMknCgVN+ibcAlPRErtJaGC9Ed1x+/C7HtJS7u56bOWgImtK/w99RaST/j4X9W/YYPI1rtaWXJhy0Yijm8xP2DA==","layer_level":0},{"id":"91d17db4-e20d-4dc5-b6de-47fc7ef0e1fe","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"最佳实践","description":"best-practices","prompt":"创建最佳实践文档。结合devlogs中的设计哲学和实际部署经验，提供集群部署的建议，如节点数量、网络拓扑。给出性能调优的综合性指南，涵盖线程模型配置、对象池大小、RAFT参数设置等。提供故障排查的常用方法和日志分析技巧。列出监控系统的关键指标（如RAFT状态、Fiber队列长度、网络延迟）。为生产环境的运维和开发提供权威指导。","parent_id":"","order":11,"progress_status":"completed","dependent_files":"devlogs/2023_07_27_dongting的定位和原则.txt,devlogs/2023_07_26_dongting线程模型.txt,demos/cluster/DemoServer1.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.593916+08:00","gmt_modified":"2025-09-19T19:42:51.185846+08:00","raw_data":"WikiEncrypted:qR01IwWN4h+w0LFr9v0A+/aXDEkkIzwJCzQlNWtKG35OabQBctBfg/rs34wbjAjdtTQM/jnbzWHQnNKGsyDuPmMzBUNpQpcvhS0gza0sZ/oInfhyQyEtzpRhLBu+f8DcZ9NjrIybRMCPRCI+XqHwqb/K/VcXuyhFUQn4jNqcR6cuRZSrJj1N4X3jLBex9okR139efDLEl/ybxYpwXb0818CFnivPBQLjMs03ubUrOLZQSN3eJqYxdA8McTb2xWM7TJ5GNojY5tYuSH3jeMM2vUIhPghqFXjzHQ7FKGAw1ytKEW5DHWOGwDCXlzpSKZJdBrhjY7S/3veBdoioh4ZJeHHRYQWp+lqmcYxSCIsbAgkNbNBSWrkaIJJv93WcKa3y7QPpZNCbGcd7JhJI2jJPNT44rAX0m0x9aSi0EBf5FF1o0NXqOGZ2qb/8M5sUX0sZ4gk9CQR+m4YOpVZuxzsA9r3qtk/c+HRMVwRVjQNa1EiIRUJ6O/PLniqjOXAqaI+uTW4JT217YJI1lNrWFYRdCbLg9Uq0fkH/Nle82I+uORvN0+KwMXJdxPHGkrucRS+WvT+xUVmAv9yMYI6omiXEmKv0jl0eNEtlufAOxnTYrxoiy7POQAoqRb6vyK78t0orXw2JA0/gNQ6ieK30IXJoTVjunp0eH12FP7gFtc4YRIKzYoMuIQwxR7dhmVHLrvzaxjByw1JBuTgsUYd5DUxuVu7z3+9LgbnTxLZmXpNOa7MDMp88GL769tGoCflcPT72sDpmJvFcJvjdRqSmyd1EWSUAw85LFJf2ije1d0RKtu/YvjP7qVSf0fB0B5f2A/cruODTutCmml8f8C2PVh+Gvxa23UVpCqz0cVgGtc+nXNzp1rV2ysF5xGtiscVRmzuWb6l2N1WWUPLlM09CeNF2yhVjpsbRaE63r/rpXNIMoHVPtrwuCcUbxY/pIs2wnZKshA6tLBbp7ZIpMRjjTnRd9EHHem/xkrUiEWaCGFcVgl78AQR8E4iy1osWFrO37A0Mj1Q83IlB1HN2nQNyMUdjBNr9F7EzRnHiq6WrbLlMIakCmJ5DcJVzZcLtCmH7C8V+FWmkIHOXW8gLdd7SBHY3dA==","layer_level":0},{"id":"344457c9-a5dc-4d36-a481-caff6dbe3ee5","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"API参考","description":"api-reference","prompt":"创建全面的API参考文档。针对所有公共API，包括RaftServer、DtKV、NioClient等核心类，提供详细的Javadoc风格的文档。对每个类、方法、参数和返回值进行精确描述。明确指出方法的线程安全性、可能抛出的异常以及使用约束。为每个API提供简洁的使用示例。确保文档与源代码保持同步，成为开发者日常查询的权威手册。","parent_id":"","order":12,"progress_status":"completed","dependent_files":"server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServer.java,server/src/main/java/com/github/dtprj/dongting/dtkv/server/DtKV.java,client/src/main/java/com/github/dtprj/dongting/net/NioClient.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.594818+08:00","gmt_modified":"2025-09-19T19:44:59.426205+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPkUytUlTK+XtmhJqDmkbtEHWAPl4/YHTwqnrUlF30RGTRHB/unFMwSTKJ+oAm84mcuH9Hkjrd0qHk+dnV5LCijlCJcemY7loIHrf5k9lANvkNXLIC5E6ITg7ah5OTpyQHSe9bepDoKXsNtbChtXwasFwFa4SmmIYGIwUjY+9QFLe2Wq/koPoFD2c6+d2a4k3CdCxBXXRkeLJNK3iXyzpLWASVJXppJPV8b+qCnvw/uUyCFcT52wmM3ZXyz1A2G0OPriOrlk9Xi4P1puNRHDoooz4FwbiAvLbNzfmtnW87dvbDsidGkTFIJ5sBihcXd4pj94Un2XteeCj309LguVjjTSAWv/ilc/zswgARdDpuLdDcNW9FTqa+KSEdDHIdVfRCiCd66F5raxbHtJK7NTgA9tv5wLvM1F/FBgcHS+JDme4TUfnnQ5dZfD2JxX4mp6b1uiR6krNuR+O31E6qvE00QyH3RI0leRVgOMlzFCpQ5WJlB2Rz9NShofGHMCjcsyMmpbHoiFVT5BgrIodqkdUVZikGQHF12whJibCO/xGJl9ZpCiDPnWkJVRwHAiTulF6BXI5O0TR/1Lr4YlPwh0MJZSMbUXEMslr8vqTTM406i8UGmVVsCOwTYkzikaJt23r7HY+Zd7SzmNuIevbC5WejmRAOQ5v/y9J7DJorDZ564feYYsJDJfwGb1YrQKGDZMMZla+sm5S+iGfy8XKcFnuznUGDORM8+igjCk4odfvw3jI2Bug8psZVKU0aOkteqJmUM0KH3lsOSfiGUb2bhb19sivHo/GAk3IxJNmzI3QRqHVFSUZ3g3plPRyR/mWvT7elzv2PX8Sjnb632iYm1NDrAW65iXiUfpoyYTVVJBE9zFhAyEp04VT7HkAKULQMj29orxyd/Jlk1OklloPIEgKKJDv93GVCk/uO8mVkgQitLlgtbkx0/4TkVzP9RzohrwPbIC67VasrJ+DhzEblfTtDDc0rgYPyZ9fsGhd7m2r8xdFnH0gV8B9atnmWCDUNcLezvRC96fCXGZTd+csMmnoaxxi79ZlPXi2JH8MEBIQSQiy+gIS2fV1Z/KZY3tOWu/XV5iBQ+ObPXOYqtC7rm3PQUa","layer_level":0},{"id":"7a2e7732-d457-4418-a948-36e0a2983324","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"示例与演示","description":"examples-demos","prompt":"整理和文档化所有示例程序。为demos目录下的每个演示（如单机模式、集群模式、配置变更、多RAFT组、TTL、Watch）提供详细的说明。解释每个示例的业务场景、代码结构和关键配置。提供运行这些示例的步骤和预期输出。将这些示例作为学习特定功能的实践教程，帮助用户通过动手操作来加深理解。","parent_id":"","order":13,"progress_status":"completed","dependent_files":"demos/standalone/StandaloneDemoServer.java,demos/cluster/DemoServer1.java,demos/configchange/ConfigChangeDemoServer1.java,demos/multiraft/MultiRaftDemoServer1.java","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.595437+08:00","gmt_modified":"2025-09-19T19:44:38.365098+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbRisr4JctWhkvIXz3fMcaeZyPjHcPEVw8A0R4wGwfcw54orSt9kROJ7PzlYwq0G9Yk7TANKmLPCs8uaQgqXmm/Qck2krCKqO5Mw1rJNNIhWUR8kDhkpEybE/X3uu6qkWWxLNenpQt8QzzvP2amy7YQChl+W2JZqQkm7rSSpJjcmDnW3TZyXkoUzIsXvNvEnYKoTWVZY6yR3U8V3yRmIzOCnrUGMzwGFyDVMvy8ZpF+ZYLK9SvG25+KP2ofGNd5N6zs/D82mSYnWi7vRYHUvrcqazP5ThBm6Yf/N8SDy3l9IILkvp44HWqbIr6MCO1CWF1kntPQWpGmsDD44CW2LKwYfzOw7vbyiD6F6VFODgc9xVQb8mlZoKpMvfNpgg/CStcqfGaj6eCf87QVEG6x2ZlHEB6tVt7IuTryrO8+nQDQKfrL5+RYiVVvnpFZkeMzNAJi5XP6JJmAQYeMu+0N+DzRwtNJrZdZgB0/FWv+MIytp+wZjKq3s4nMkc9fDrmqfk8vcKtoxGRUyE+ZwkE/fzydA3yXbiS2D07wEqphA8RQAM4DZv/ItZhJhgm+RS1uoPzP4fL2LWuzotJv06ChWeWEIMrbgKeXUSm+tm90T7SCvNV38nZL704gcy7ZrV38edrJVvszfpHsA1fH4hqnBBJ56BUpRine35/OTPP7VOBstE+Ko1sJaoEC2HF/ZSKloqqtRDZARR9MFpkIcv1AGlM2bJDJBVUlrun3yxiu/EJb6BE/aGs2Tse2hvBvDsj0Z77WbCdJcEGeZ2ccqiT50aVr8u2Zzf0YExqpwFZLnWYT5ccAmr/Fsdwv8xrQKW965QNK0PbwiJY72IjnitnadCO5dM2GD1AoVGnxhDlRhTJDEg9wcISGyaQYQR9awgDjfjeE3sUZwJk2aOAat1NoYwu2L/OCVYqKlKr31syBuNDGfiPQ/QgqYnErIVqgVBIN5nNYCFUH8lmhZXgviQCZK/T9gcrWxJSE4PzyY2rNfUzumFDsFjmbbY2dxuLG6WcR4dPnkGdocRdMs5/0ujRWuMUZH8b3cAiRqydq0Qduu06Xz8","layer_level":0},{"id":"ee4cefe5-5d85-4ff6-bc9e-05299a0b068b","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"常见问题解答","description":"troubleshooting","prompt":"编写常见问题解答（FAQ）文档。收集并回答用户在使用过程中最常见的问题，例如：'如何解决节点无法选举Leader？'、'Fiber出现死锁如何排查？'、'对象池耗尽怎么办？'、'网络连接频繁超时如何处理？'。每个问题都应提供清晰的问题描述、可能的原因分析和具体的解决方案或调试步骤。利用devlogs中记录的技术难点和解决方案作为素材，帮助用户快速解决遇到的障碍。","parent_id":"","order":14,"progress_status":"completed","dependent_files":"devlogs/2022_11_21_第一点阶段性进展.md,devlogs/2023_07_28_dongting的对象池.txt","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.596273+08:00","gmt_modified":"2025-09-19T19:46:03.428504+08:00","raw_data":"WikiEncrypted:CaKOW8OSSWs4aEYk06Hu0hGGy7zXJE5t3XZJK+9x87W4yuxZ8whQpo/WJ0sPTcSY4po3J+HJOLDFaReS43c2LAx4EAgolc0ry9hu9j0zAXCxCyQIqQVNgouy62GB2Z9a2UL11196s18XPDXqIOq9A1axxmg+qUQqTwW8/WO1pyedMMgqZFWc7atGMAFyQAJAYwjZUaE1uJ2Rm6OpR3rj0vHJBZarIZF81SSfof55ViboeMa6H8jAEAwmBU5U1juSOLxvAx8YsiwFp5Lygerf7Jr38y+ooJ4UaO81oRnmU53yB5Bs6iFbtmPvNAWcrQsvffkMtMGN/jrw+KxA1Ya6KamfUdjdjqrnAieLVcZOoBBKYDMjnrbNMs/SaYSH+6OT9FS3ywf/t7yR8tOz5FuXd0GwjiJI5v4+hcxo51vIn53UzDR4AYjcmDrjbT2p8pxOXDhlVt01AT1GBgJueLTxW2LJKdmcMfKG/KBTncdZI9SaqUfcJ+QKjEVVs+4RUngkcyz+f25mRH1qVS0UaSz0rG+H95QtKTVtmJcAxxEoK02JRd7F3Jc4eJr7/4VxyLOmy/lF7TWyM3XAg3WjIYJ9zHZgMWYNj5iDcn4aBEBE6FgavtvLoVje5+/EgxsZJql7zkOz0gKsILJ/phNXTn4utgV+FxHbCO/Cn/0IrANrs2n5mi5xr0gS/i3lKZPOQiuvc0c+ljzFUpVd3yrHFJQfLw5gdAEQGM0SZfZXPcQLt64pVObhK8QUpB3pkRf5VO2nOPlOgmJNB1K6Wx5S4C/jP4A0/ziST8WtkVqjapnwg4a156+13CYNDiBdnadV9Yh2Y9FckKCtnjyz4RweqQ9XfFaLhu7tDxCiBcyOnXjcVyTUraiUT+eSnpqwdAOf3uKxpi4fbwEV1oEfCin3Ga6+HU+RzJ6IxHn9D4mJDil0xKIsCkcRVpbgHTDRjUaONNeN/VyNHdNBJgqxV5ShuIGrfz7EOMEhgX4JtT9HJ9lVr/JqpQTMLsio1EYgI+42eJ6jr7tQkUu3QI4lXHPC8zkr43VlictuQkQZuP83/h25YUym8LrNWLeikiFFgjPWtaSo","layer_level":0},{"id":"f3db7cfd-f62e-463d-a865-d19946bd78eb","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","name":"贡献指南","description":"contributing","prompt":"编写贡献指南，欢迎社区贡献。说明代码贡献的流程，包括如何提交Issue、创建Pull Request。概述项目的代码风格和质量要求，如单元测试覆盖率、代码注释规范。提供构建和测试项目的步骤，确保贡献者能顺利搭建开发环境。明确指出哪些部分欢迎改进，如新功能、性能优化、文档完善等。营造一个开放、友好的贡献氛围。","parent_id":"","order":15,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T19:30:09.597258+08:00","gmt_modified":"2025-09-19T19:45:51.03608+08:00","raw_data":"WikiEncrypted:BxDZrTl5aGXx1MaECOB3NYtmPU3Pp7BwtpuTrRxBWuD8HspdM7jFg61GaPsjZVX8UcMLpeYv0pfRVS+Fgf8sWUcqaHyl8hnOITTaf/xX05CQqGFahonGhB/6hW+VUSeZ1vRbPSCeYY8oU5zsri+Zh6hGA6nq/hSZsaY8NdPzBJiSNnewpOexom5GGJZ7SwKpC7j5DaJMdaRMegJUVwEn9UJKZKbZqnQbbg4hKzde2uESj9/B6+3iEoVz4ewsC/z5fqhjQoWqv0Z49OVLZLp0BfZut5Ax52dDWgxt5XbIQSXjT6VpQxybU4PtbWo0J+33kLQePOewBoksRymEE5dumAo2Siueqtq4usP7yj7+dDwhypqBngHK2eGoGksgqasTIJILc9sr85siO152DcIiHSVFjGk0t/I1oVR7/+wNzeKYBJImiWi6UbgSYy8AxsOVQBUC+oO4es71u5dsdGOlyNONJg7+nvs2gfT84hsebWwBwFUZi7V5nOB9pd0U7s9ypWF74mQ/kM3SpUGIb0/yXRznMD9n4tKauBGJ5AiADFyZfsWN6Y0JHwer714vzw33G/ZVjdzYNbBtFdDESgp/L0I1pCq9bnlf2pQRu/t1SHBaPu97lIVbjrxkox+PU2XOFKdrtJ+KLhj3T0uoNORBVInvU1nksq8n0enGIIjJ/JDocHYP+ZAvdr/sh2jYp0YgNTSacpL2QroUz1JG5qaiZ46RYMBcsun3i4/RNUKM+mLCJ4BZSm+vQdqDQt7A8IEpMI4QKmrTXMkdbMFUUCqY2cqqzpTHk7AwaooJDHyhHNM8cedmdJN7365AfcLECImDcakqR5A2TDJ0k6IYtesfklK0QEAWFw+JLtRxaX6p4kQ=","layer_level":0}],"wiki_items":[{"catalog_id":"2c638f39-8d54-4f3d-ab4c-557476031755","content":"","title":"快速入门","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"7103b1ee-5f64-4552-9d65-fe3826247850","gmt_create":"2025-09-19T19:35:28.681861+08:00","gmt_modified":"2025-09-19T19:35:28.686103+08:00"},{"catalog_id":"6ac3cf05-f19a-4a4a-af20-bd319489cd08","content":"","title":"项目概述","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"1d8f2f3a-2fd4-43a9-8870-505aeea800ef","gmt_create":"2025-09-19T19:35:34.969442+08:00","gmt_modified":"2025-09-19T19:35:34.973108+08:00"},{"catalog_id":"05c7a5ec-036b-4e80-af0c-93e07d64e27b","content":"","title":"核心概念","description":"core-concepts","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"4ed8be6d-9613-451d-809d-7f30529223fc","gmt_create":"2025-09-19T19:36:38.329325+08:00","gmt_modified":"2025-09-19T19:36:38.335327+08:00"},{"catalog_id":"1156c858-9266-41c7-bd13-442758f625d4","content":"","title":"安装与配置","description":"installation-configuration","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"80888455-6b46-4649-b5d8-8b0feca613d7","gmt_create":"2025-09-19T19:36:43.704448+08:00","gmt_modified":"2025-09-19T19:36:43.709825+08:00"},{"catalog_id":"29a33e01-a4d7-4a7b-ae5b-9e7d7bf2b913","content":"","title":"RAFT实现详解","description":"raft-implementation","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"796b7bc3-66c0-428a-9087-7b6b8f97f4b8","gmt_create":"2025-09-19T19:37:57.362607+08:00","gmt_modified":"2025-09-19T19:37:57.367149+08:00"},{"catalog_id":"1b37474b-db6e-453e-9726-e643ca44639c","content":"","title":"Fiber协程系统","description":"fiber-system","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"6496ddcb-e54b-44b2-9ec3-d28f5568834c","gmt_create":"2025-09-19T19:38:18.609608+08:00","gmt_modified":"2025-09-19T19:38:18.614931+08:00"},{"catalog_id":"dd3205e3-74da-4d38-a52d-e177f4ce68b6","content":"","title":"分布式KV（DtKV）","description":"distributed-kv","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"ba4cfa52-74cb-4a77-91d9-c00fe206dc39","gmt_create":"2025-09-19T19:39:34.359804+08:00","gmt_modified":"2025-09-19T19:39:34.366802+08:00"},{"catalog_id":"9a176743-6e3c-46d0-a3df-d292836b2d5f","content":"","title":"网络通信","description":"network-communication","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"1f887abc-33da-4733-8bc1-cfd1de15cc5d","gmt_create":"2025-09-19T19:39:56.490745+08:00","gmt_modified":"2025-09-19T19:39:56.494551+08:00"},{"catalog_id":"06ceb7fe-4daa-40df-bcdd-c4895064c77e","content":"","title":"高级特性","description":"advanced-features","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"6ea90305-8e09-497c-aa2a-d49f1e45e195","gmt_create":"2025-09-19T19:41:05.826671+08:00","gmt_modified":"2025-09-19T19:41:05.83302+08:00"},{"catalog_id":"c3a3445b-9a96-4deb-b04d-e6dfc0c51c86","content":"","title":"性能优化","description":"performance-optimization","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"858cd818-3e7c-47ca-9b79-7a97a5996b3a","gmt_create":"2025-09-19T19:41:21.481888+08:00","gmt_modified":"2025-09-19T19:41:21.488112+08:00"},{"catalog_id":"91d17db4-e20d-4dc5-b6de-47fc7ef0e1fe","content":"","title":"最佳实践","description":"best-practices","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"44ccf8f1-6877-4ed6-ba0f-ec56cd6a741e","gmt_create":"2025-09-19T19:42:51.179839+08:00","gmt_modified":"2025-09-19T19:42:51.186718+08:00"},{"catalog_id":"1c49d439-8342-4415-b0f0-a6fd50fd63d6","content":"","title":"扩展与定制","description":"extensibility","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"854fca38-e044-4cc7-92a9-56f5b12d998d","gmt_create":"2025-09-19T19:43:10.441414+08:00","gmt_modified":"2025-09-19T19:43:10.447475+08:00"},{"catalog_id":"7a2e7732-d457-4418-a948-36e0a2983324","content":"","title":"示例与演示","description":"examples-demos","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"3ef03f1d-423a-4b5a-b508-bb6993a28a22","gmt_create":"2025-09-19T19:44:38.359667+08:00","gmt_modified":"2025-09-19T19:44:38.365902+08:00"},{"catalog_id":"344457c9-a5dc-4d36-a481-caff6dbe3ee5","content":"","title":"API参考","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"3da2bcbe-9ae2-4105-bd8f-37ccfb089916","gmt_create":"2025-09-19T19:44:59.420674+08:00","gmt_modified":"2025-09-19T19:44:59.426694+08:00"},{"catalog_id":"f3db7cfd-f62e-463d-a865-d19946bd78eb","content":"","title":"贡献指南","description":"contributing","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"5f73c4b3-ede8-4545-b005-30e79168fe45","gmt_create":"2025-09-19T19:45:51.031261+08:00","gmt_modified":"2025-09-19T19:45:51.037024+08:00"},{"catalog_id":"ee4cefe5-5d85-4ff6-bc9e-05299a0b068b","content":"","title":"常见问题解答","description":"troubleshooting","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"561276b8-2336-4a74-88f1-4b3518ce4572","gmt_create":"2025-09-19T19:46:03.423083+08:00","gmt_modified":"2025-09-19T19:46:03.429345+08:00"},{"catalog_id":"6220b9e9-a38b-4fa7-aafd-9fe9f059bdcd","content":"","title":"服务器配置","description":"server-configuration","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f8011640-e6a2-4b2e-982a-9378904028ea","gmt_create":"2025-09-19T19:46:48.59742+08:00","gmt_modified":"2025-09-19T19:46:48.604094+08:00"},{"catalog_id":"01eb873a-2aea-4183-ada1-8eaccd7c3224","content":"","title":"Fiber协程模型","description":"fiber-coroutine","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"16911f7b-ab46-48d0-b9b1-bba72596c717","gmt_create":"2025-09-19T19:47:41.494941+08:00","gmt_modified":"2025-09-19T19:47:41.501404+08:00"},{"catalog_id":"6beaf0e6-4236-4638-96c1-b593ba30e4b5","content":"","title":"角色管理","description":"raft-roles","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"cd6a80e6-9e8d-4735-973d-e021816d7591","gmt_create":"2025-09-19T19:48:10.230358+08:00","gmt_modified":"2025-09-19T19:48:10.236902+08:00"},{"catalog_id":"5cc082e9-14fe-46d2-b670-1b94e33c3c6f","content":"","title":"Fiber创建与启动","description":"fiber-creation","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f5ee828d-8fae-4dbc-9bbe-d5cc5c5e6f7f","gmt_create":"2025-09-19T19:49:00.09132+08:00","gmt_modified":"2025-09-19T19:49:00.096434+08:00"},{"catalog_id":"97584256-193b-498c-b007-e85ea9efc554","content":"","title":"基础操作","description":"basic-operations","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"3299fbb9-bb5c-4dc4-be7b-62b861e13aec","gmt_create":"2025-09-19T19:49:33.408053+08:00","gmt_modified":"2025-09-19T19:49:33.410102+08:00"},{"catalog_id":"0868e734-f35a-42dd-baa3-e435281ec52e","content":"","title":"客户端实现","description":"network-client","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"3b45686d-3c38-4bc8-9a14-89b4e185c195","gmt_create":"2025-09-19T19:50:19.681796+08:00","gmt_modified":"2025-09-19T19:50:19.686667+08:00"},{"catalog_id":"05b22e16-2092-470a-90e7-3c6e833b7cf4","content":"","title":"内存管理与对象池","description":"memory-management","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"841b74aa-1686-4568-b42b-c178d63cd103","gmt_create":"2025-09-19T19:50:57.083819+08:00","gmt_modified":"2025-09-19T19:50:57.089783+08:00"},{"catalog_id":"d6f9234e-73ec-426c-b35c-a7ece0e483d6","content":"","title":"自定义状态机","description":"custom-state-machine","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"1bc1f663-8c85-4616-bab3-f2ef52c06a4c","gmt_create":"2025-09-19T19:51:53.141019+08:00","gmt_modified":"2025-09-19T19:51:53.146714+08:00"},{"catalog_id":"88c6bb3a-ce58-4d23-a509-4d66fc9d3867","content":"","title":"快照机制","description":"snapshot-mechanism","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"bb970af4-0717-419a-8876-9feae2d3dfe2","gmt_create":"2025-09-19T19:52:16.935492+08:00","gmt_modified":"2025-09-19T19:52:16.941318+08:00"},{"catalog_id":"baec0304-40bd-4d37-9940-07b015bbd204","content":"","title":"部署指南","description":"deployment-guidelines","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"a2a527a7-a87e-4020-a361-6fc32b17544f","gmt_create":"2025-09-19T19:52:59.762631+08:00","gmt_modified":"2025-09-19T19:52:59.769034+08:00"},{"catalog_id":"831c1f00-59a8-45a7-aa56-cd3542c72bec","content":"","title":"RaftServer API","description":"api-reference-raft-server","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"99a321dd-b561-461c-9675-803acaae8e3a","gmt_create":"2025-09-19T19:53:22.756578+08:00","gmt_modified":"2025-09-19T19:53:22.762531+08:00"},{"catalog_id":"320d2300-e2b8-4716-ac22-c0eac56f9064","content":"","title":"单机模式示例","description":"examples-standalone","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"5e6b2283-d032-4f60-b8e0-78491c9b2348","gmt_create":"2025-09-19T19:54:01.937344+08:00","gmt_modified":"2025-09-19T19:54:01.944355+08:00"},{"catalog_id":"41ee53c2-e4ed-4324-9bd1-597ccc4eb1ed","content":"","title":"客户端配置","description":"client-configuration","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f5ddeda7-d4a1-43ad-826c-72df51a34c71","gmt_create":"2025-09-19T19:55:04.444616+08:00","gmt_modified":"2025-09-19T19:55:04.451425+08:00"},{"catalog_id":"bcf3faf2-79ac-4847-8d6b-e8f9eb1a20ce","content":"","title":"RAFT一致性算法","description":"raft-consensus","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f03fbb51-ef23-4ff4-bfdc-f90c7af3fb61","gmt_create":"2025-09-19T19:55:41.601804+08:00","gmt_modified":"2025-09-19T19:55:41.606982+08:00"},{"catalog_id":"502fd2d9-524d-4491-8db1-a2309026049b","content":"","title":"日志复制机制","description":"raft-log-replication","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"c993d699-096a-4293-96d0-90d9d62a3ff5","gmt_create":"2025-09-19T19:56:35.74126+08:00","gmt_modified":"2025-09-19T19:56:35.745724+08:00"},{"catalog_id":"26e5eba7-e2ae-48e6-9a21-9fc2c11eab37","content":"","title":"调度机制","description":"fiber-scheduling","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"6114e677-eff5-493f-8131-f8a18dfabb39","gmt_create":"2025-09-19T19:57:31.660629+08:00","gmt_modified":"2025-09-19T19:57:31.666403+08:00"},{"catalog_id":"47c8695f-7607-4970-9dd3-06b37aeffca3","content":"","title":"CAS操作","description":"cas-operations","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"9dc6051f-6dea-4b78-af8d-9bfe0b9ae27f","gmt_create":"2025-09-19T19:58:08.166631+08:00","gmt_modified":"2025-09-19T19:58:08.171516+08:00"},{"catalog_id":"a92a9b33-fbe5-4904-8b6c-f40844d999bd","content":"","title":"服务器实现","description":"network-server","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"b375d242-b5ec-4f71-8e5f-a9b424db6e77","gmt_create":"2025-09-19T19:59:18.77977+08:00","gmt_modified":"2025-09-19T19:59:18.785379+08:00"},{"catalog_id":"f11df69d-9527-4afe-a2bf-624ba9e789f6","content":"","title":"基准测试方法","description":"benchmark-testing","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"b23c9005-85a1-42ee-a75f-01d8a1459314","gmt_create":"2025-09-19T19:59:25.537713+08:00","gmt_modified":"2025-09-19T19:59:25.542845+08:00"},{"catalog_id":"22749ea0-09a6-40c4-9d62-bbe99f9b1234","content":"","title":"线性一致性读","description":"linear-consistency","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"6f8d38e9-6faa-4189-ac0a-0093c3659369","gmt_create":"2025-09-19T20:00:58.17458+08:00","gmt_modified":"2025-09-19T20:00:58.177524+08:00"},{"catalog_id":"f2062bfe-177a-4c7d-86ef-cea505445225","content":"","title":"自定义日志存储","description":"custom-log-storage","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"120f3557-f866-4c46-9485-a050a678f279","gmt_create":"2025-09-19T20:00:59.6833+08:00","gmt_modified":"2025-09-19T20:00:59.688649+08:00"},{"catalog_id":"be5c41a9-64e5-4e38-a358-994d6186fa63","content":"","title":"性能调优指南","description":"performance-tuning","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"beca57a2-68e5-47e0-b3a4-6fe6d4cbe456","gmt_create":"2025-09-19T20:02:27.420174+08:00","gmt_modified":"2025-09-19T20:02:27.425357+08:00"},{"catalog_id":"02d97c2c-2ca6-4b6c-8551-df28572a909f","content":"","title":"DtKV API","description":"api-reference-dtkv","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"e8878ffc-3c78-4885-907a-6408bf1196d4","gmt_create":"2025-09-19T20:02:33.170698+08:00","gmt_modified":"2025-09-19T20:02:33.173996+08:00"},{"catalog_id":"36ec9573-0a33-4896-8394-b7be2133ae7e","content":"","title":"线性一致性","description":"linear-consistency","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"568543f7-f48c-4fb5-b1f6-6ce7015602b5","gmt_create":"2025-09-19T20:04:04.225896+08:00","gmt_modified":"2025-09-19T20:04:04.227684+08:00"},{"catalog_id":"bde40ddd-de3a-4178-a86a-738b6214f90e","content":"","title":"集群模式示例","description":"examples-cluster","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"08ae8d3b-a308-4db5-8aa8-ee058d5a147d","gmt_create":"2025-09-19T20:04:05.745274+08:00","gmt_modified":"2025-09-19T20:04:05.750036+08:00"},{"catalog_id":"b3f66c93-71f5-4218-8121-064922f97876","content":"","title":"FiberChannel协程通信","description":"fiber-channel","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"6ae1ecdb-4062-4e08-85fa-88476bfa7ec0","gmt_create":"2025-09-19T20:05:31.049047+08:00","gmt_modified":"2025-09-19T20:05:31.05446+08:00"},{"catalog_id":"a17f8787-f6d7-4040-95e2-13dc9dfef6bb","content":"","title":"选举机制","description":"raft-election","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"47de96db-bae8-4766-8919-ea7174d02cae","gmt_create":"2025-09-19T20:05:32.900268+08:00","gmt_modified":"2025-09-19T20:05:32.90578+08:00"},{"catalog_id":"8053381a-eb74-45a9-9c28-32af4c030767","content":"","title":"TTL管理","description":"ttl-management","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"6aaa346e-9438-41eb-a1f3-6cff61f2942d","gmt_create":"2025-09-19T20:06:47.029328+08:00","gmt_modified":"2025-09-19T20:06:47.033086+08:00"},{"catalog_id":"ff15aa37-316d-492e-813b-4ee36952aebc","content":"","title":"通信协议与数据包","description":"network-protocol","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"5b45c55a-a925-4065-8173-d6f98ca0c9ff","gmt_create":"2025-09-19T20:06:49.765248+08:00","gmt_modified":"2025-09-19T20:06:49.771221+08:00"},{"catalog_id":"cf56b85a-5806-48ac-a70f-9936b473251c","content":"","title":"高性能编程模式","description":"performance-patterns","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"0d51fcde-4f1f-429c-aebb-576a95072496","gmt_create":"2025-09-19T20:08:29.914145+08:00","gmt_modified":"2025-09-19T20:08:29.920283+08:00"},{"catalog_id":"7844c4b2-2e6a-4eaa-b114-1f7f7ad1937c","content":"","title":"自定义快照策略","description":"custom-snapshot-strategy","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"aed80be0-faa6-4ebe-b9e1-73f5d8a71ea1","gmt_create":"2025-09-19T20:08:30.137723+08:00","gmt_modified":"2025-09-19T20:08:30.139702+08:00"},{"catalog_id":"3544f683-59e0-45ac-8858-e65721cd5422","content":"","title":"故障恢复","description":"fault-recovery","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"058536fe-1459-45ef-966f-0b4c2581c181","gmt_create":"2025-09-19T20:09:56.540202+08:00","gmt_modified":"2025-09-19T20:09:56.546032+08:00"},{"catalog_id":"679ac238-0b0f-4d08-86e6-c1c5578e3e75","content":"","title":"故障排查","description":"troubleshooting","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"4dac7280-36fc-44cd-880d-14410dd0c486","gmt_create":"2025-09-19T20:10:07.080397+08:00","gmt_modified":"2025-09-19T20:10:07.084554+08:00"},{"catalog_id":"c3420c33-2d81-4c37-be04-26bd77984b40","content":"","title":"NioClient API","description":"api-reference-nio-client","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"3be2763a-9f45-43df-af11-dcffc75314a3","gmt_create":"2025-09-19T20:11:15.430461+08:00","gmt_modified":"2025-09-19T20:11:15.434973+08:00"},{"catalog_id":"c8a1e407-2e3a-4fea-878b-d5bd9f310059","content":"","title":"配置变更示例","description":"examples-configchange","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"35e79f00-97b3-4294-8986-b98e4688c450","gmt_create":"2025-09-19T20:11:43.591759+08:00","gmt_modified":"2025-09-19T20:11:43.596065+08:00"},{"catalog_id":"e27d3be0-8d51-4d15-b19b-084f3411958e","content":"","title":"动态配置变更","description":"raft-config-change","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"6bd6c7f5-4e40-4fdb-926d-d2c88a911f3a","gmt_create":"2025-09-19T20:12:37.45118+08:00","gmt_modified":"2025-09-19T20:12:37.455655+08:00"},{"catalog_id":"71615119-fda6-4b59-a7e0-ebd58e14bef0","content":"","title":"同步原语","description":"fiber-sync-primitives","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"c27a6178-8fc5-4cc4-8f51-7215cc541176","gmt_create":"2025-09-19T20:13:17.426336+08:00","gmt_modified":"2025-09-19T20:13:17.430949+08:00"},{"catalog_id":"19ed560e-f4af-496b-a7b6-d4ebbf134e73","content":"","title":"Watch机制","description":"watch-mechanism","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"8fb9b1e1-5d89-48f9-8951-44f36e9bbaf7","gmt_create":"2025-09-19T20:13:59.194467+08:00","gmt_modified":"2025-09-19T20:13:59.198611+08:00"},{"catalog_id":"c48b7c86-aaf2-4ab1-9f29-fe5aa505d4cf","content":"","title":"监控指标","description":"monitoring-metrics","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"8f4d9049-1d9b-4418-87b8-4e8c3a859414","gmt_create":"2025-09-19T20:14:25.685105+08:00","gmt_modified":"2025-09-19T20:14:25.690649+08:00"},{"catalog_id":"ca1e7bf8-d36a-40d1-8bfc-ddd80009f57a","content":"","title":"多RAFT组示例","description":"examples-multiraft","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"c1830f76-7df2-4da8-aa2d-944a86c8c8c1","gmt_create":"2025-09-19T20:15:19.478944+08:00","gmt_modified":"2025-09-19T20:15:19.484722+08:00"},{"catalog_id":"728bb739-191d-45e4-968c-2297cbc889be","content":"","title":"多RAFT组支持","description":"raft-multi-group","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"a416f08d-c6f3-4bd2-a313-0c84d3ff5178","gmt_create":"2025-09-19T20:15:32.585044+08:00","gmt_modified":"2025-09-19T20:15:32.590091+08:00"},{"catalog_id":"22ab9316-3651-4ceb-a728-5015a12e48c2","content":"","title":"TTL支持示例","description":"examples-ttl","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"a725291b-aa76-4eb5-be1d-a5c38058ef1b","gmt_create":"2025-09-19T20:16:53.81668+08:00","gmt_modified":"2025-09-19T20:16:53.82119+08:00"},{"catalog_id":"08d78f74-46c2-44b2-9b38-0e266c29322a","content":"","title":"异常处理与生命周期","description":"fiber-exception-handling","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"aa2a6ed5-03f7-417d-9604-11e16c38ff6f","gmt_create":"2025-09-19T20:16:56.272575+08:00","gmt_modified":"2025-09-19T20:16:56.278128+08:00"},{"catalog_id":"528d5941-6af8-4f59-b896-a61bcea34e65","content":"","title":"FiberFuture异步编程","description":"fiber-future","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"423d3aab-e042-442e-b06c-538873fdfd73","gmt_create":"2025-09-19T20:18:06.687115+08:00","gmt_modified":"2025-09-19T20:18:06.691589+08:00"},{"catalog_id":"5dde8123-6ce8-401e-ba08-e3838fdf7fc4","content":"","title":"Watch机制示例","description":"examples-watch","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"92ee072e-c841-475f-a4a2-86a50c91392d","gmt_create":"2025-09-19T20:18:12.32654+08:00","gmt_modified":"2025-09-19T20:18:12.330917+08:00"},{"catalog_id":"9cd14e28-86e1-4d62-a281-9fe698c9624d","content":"","title":"核心调度器","description":"dispatcher-core","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"437c27b9-db1c-42a8-8880-64f268185b9f","gmt_create":"2025-09-19T20:19:13.481772+08:00","gmt_modified":"2025-09-19T20:19:13.485549+08:00"},{"catalog_id":"3673d810-7ff2-4ebc-8149-615c838e5463","content":"","title":"嵌入式模式示例","description":"examples-embedded","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"31ee1fab-e394-4993-b24a-e4fcfe2dd873","gmt_create":"2025-09-19T20:19:22.951967+08:00","gmt_modified":"2025-09-19T20:19:22.954446+08:00"},{"catalog_id":"c385caac-8b5c-485f-98ea-02607e6fcc97","content":"","title":"TTL初始化","description":"ttl-initialization","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"b14dd261-7d05-4208-bc86-99e91ff5a8c5","gmt_create":"2025-09-19T20:20:13.335197+08:00","gmt_modified":"2025-09-19T20:20:13.339436+08:00"},{"catalog_id":"54c2c9f8-ad46-4e17-8987-2de4699e2f62","content":"","title":"Fiber锁","description":"fiber-lock","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"ad762cc5-61eb-49bb-8e0a-e5a6ba06308c","gmt_create":"2025-09-19T20:20:27.965372+08:00","gmt_modified":"2025-09-19T20:20:27.972896+08:00"},{"catalog_id":"4ead71be-05f1-47f0-a734-04860e9c962c","content":"","title":"Watch管理器架构","description":"watch-manager-architecture","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f1bd370a-be18-4cb5-b475-1677ad45b14e","gmt_create":"2025-09-19T20:21:46.349462+08:00","gmt_modified":"2025-09-19T20:21:46.352552+08:00"},{"catalog_id":"49e70752-e72e-411c-9ae7-a2d9003e43e3","content":"","title":"Fiber组调度策略","description":"fiber-group-scheduling","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"e8a7d261-97c7-444b-82cd-e76f457750db","gmt_create":"2025-09-19T20:21:48.009304+08:00","gmt_modified":"2025-09-19T20:21:48.014779+08:00"},{"catalog_id":"4be36aa1-8e78-45a7-a7af-b0f36f627e98","content":"","title":"读写锁","description":"fiber-read-write-lock","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"cbd19d44-3418-4db3-85d9-86deff4f7fa2","gmt_create":"2025-09-19T20:22:54.962232+08:00","gmt_modified":"2025-09-19T20:22:54.966515+08:00"},{"catalog_id":"96b82b41-4da3-4dd9-914d-ac71fb4085cc","content":"","title":"TTL更新机制","description":"ttl-update-mechanism","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"58d4476f-2106-42ce-a068-cda3b5718e17","gmt_create":"2025-09-19T20:23:07.166271+08:00","gmt_modified":"2025-09-19T20:23:07.172201+08:00"},{"catalog_id":"0a27017c-40ed-49f8-a178-576a1e2e8585","content":"","title":"上下文切换机制","description":"context-switching","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"673f18ee-cb69-44d6-8f36-b8c549875e73","gmt_create":"2025-09-19T20:24:24.586201+08:00","gmt_modified":"2025-09-19T20:24:24.590175+08:00"},{"catalog_id":"8d04548a-2c0a-4275-9eeb-abb529ec1fec","content":"","title":"事件分发机制","description":"watch-event-dispatch","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"296210ee-810e-4300-8f0c-167beb0d1aaf","gmt_create":"2025-09-19T20:24:32.346126+08:00","gmt_modified":"2025-09-19T20:24:32.351693+08:00"},{"catalog_id":"4f24c983-2fbc-420b-a4c1-ee366efd7916","content":"","title":"过期处理与任务调度","description":"ttl-expiration-processing","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"310a44ba-3a6c-4954-b2a7-c6cd6c5b6908","gmt_create":"2025-09-19T20:25:30.342628+08:00","gmt_modified":"2025-09-19T20:25:30.34862+08:00"},{"catalog_id":"209ed30e-b6b1-49f0-9d61-f5d0e73a2d5f","content":"","title":"条件变量","description":"fiber-condition","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"d1d241f0-f658-4d3c-973a-aa189869e814","gmt_create":"2025-09-19T20:25:45.05584+08:00","gmt_modified":"2025-09-19T20:25:45.061805+08:00"},{"catalog_id":"c5f70f0e-1268-4784-b6ec-ac9ea06bdc94","content":"","title":"TTL移除策略","description":"ttl-removal-strategy","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"cf458c08-d08b-406e-9758-0612c68a2139","gmt_create":"2025-09-19T20:26:46.688177+08:00","gmt_modified":"2025-09-19T20:26:46.694179+08:00"},{"catalog_id":"6addb4e2-d8f7-49c3-ae08-c0871142993c","content":"","title":"通知推送流程","description":"watch-notification-flow","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f9167802-98a9-4467-b3b4-6ac008fda9c5","gmt_create":"2025-09-19T20:26:48.743409+08:00","gmt_modified":"2025-09-19T20:26:48.749185+08:00"},{"catalog_id":"48619ace-9c66-4210-bf34-dac09706778b","content":"","title":"角色变更处理","description":"ttl-role-handling","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"2b7a9341-a9b7-4705-8211-2c2d886d7d8d","gmt_create":"2025-09-19T20:27:57.09359+08:00","gmt_modified":"2025-09-19T20:27:57.099252+08:00"},{"catalog_id":"8db9d374-bf88-411a-a097-7018ce115841","content":"","title":"故障恢复机制","description":"watch-failure-recovery","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"5c4baf27-4507-4b23-b8a6-27fd24fd7b67","gmt_create":"2025-09-19T20:27:59.419354+08:00","gmt_modified":"2025-09-19T20:27:59.42537+08:00"},{"catalog_id":"c486d735-ee74-4b63-b812-f1b40885671f","content":"","title":"监听器树形结构","description":"watch-tree-structure","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"81909eb2-6b4f-48cd-ba7d-24adb88513a3","gmt_create":"2025-09-19T20:28:51.337594+08:00","gmt_modified":"2025-09-19T20:28:51.34351+08:00"},{"catalog_id":"443afa27-5687-47c8-8539-16a2ee750730","content":"","title":"过期检测机制","description":"ttl-expiration-detection","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"5ee5effc-40a5-4c4c-8cab-f5f764b24d77","gmt_create":"2025-09-19T20:28:56.012415+08:00","gmt_modified":"2025-09-19T20:28:56.01822+08:00"},{"catalog_id":"aaf83a5d-df23-48dc-9c02-61e62f3feb75","content":"","title":"连接管理机制","description":"watch-manager-connection-management","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"898a9bab-629f-4fc8-9f79-f250980bece4","gmt_create":"2025-09-19T20:29:49.127457+08:00","gmt_modified":"2025-09-19T20:29:49.133085+08:00"},{"catalog_id":"97acff58-0435-4ac3-9ebb-3c1305b4167c","content":"","title":"分发流程","description":"dispatch-flow","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"3e0c79a2-7b32-49bf-9ebb-86d87e440eaf","gmt_create":"2025-09-19T20:29:57.833329+08:00","gmt_modified":"2025-09-19T20:29:57.838479+08:00"},{"catalog_id":"31d224f5-0c2f-4d85-b909-abcc2bff1b3a","content":"","title":"通知消息构建","description":"notify-message-construction","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"1308ac70-1e3c-4af4-8acc-b5c4e025fbf4","gmt_create":"2025-09-19T20:30:50.556106+08:00","gmt_modified":"2025-09-19T20:30:50.562039+08:00"},{"catalog_id":"f97847a1-adf0-4376-8fdd-652daf47b834","content":"","title":"客户端响应处理","description":"watch-response-handling","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"45dbea21-436b-47c2-ab8b-e269ae7ee809","gmt_create":"2025-09-19T20:31:10.513617+08:00","gmt_modified":"2025-09-19T20:31:10.519249+08:00"},{"catalog_id":"badd793e-448c-4e28-b83d-50cd7cd71376","content":"","title":"监听器树形结构设计","description":"watch-tree-structure-design","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f42bbe3b-211f-4287-94c8-1a5994dea490","gmt_create":"2025-09-19T20:31:52.090271+08:00","gmt_modified":"2025-09-19T20:31:52.094459+08:00"},{"catalog_id":"938b8def-e7a9-4648-a41f-305c3f809c06","content":"","title":"过期回调执行","description":"ttl-callback-execution","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f1ec574d-b0de-44a9-9598-64b75ee2a56f","gmt_create":"2025-09-19T20:32:29.838579+08:00","gmt_modified":"2025-09-19T20:32:29.842765+08:00"},{"catalog_id":"61bcf3d4-0ce8-4802-b502-c3603f73994a","content":"","title":"批量控制","description":"batch-control","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f98d0581-0a22-4ff3-9ed4-5a16d02afcdc","gmt_create":"2025-09-19T20:33:00.883317+08:00","gmt_modified":"2025-09-19T20:33:00.888379+08:00"},{"catalog_id":"e3f00125-eb0e-4174-8954-673cd549ef16","content":"","title":"事件分发与调度","description":"watch-manager-event-dispatch","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"60ed9bd4-bb5a-48de-beb8-5cb0c35beae3","gmt_create":"2025-09-19T20:33:41.609682+08:00","gmt_modified":"2025-09-19T20:33:41.615543+08:00"},{"catalog_id":"feb4ae74-1e6d-4f70-9b3b-1333898dbc76","content":"","title":"流量控制机制","description":"flow-control-mechanism","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"4edfcdc6-9630-4b15-a773-9dc9b6111034","gmt_create":"2025-09-19T20:34:03.836669+08:00","gmt_modified":"2025-09-19T20:34:03.841009+08:00"},{"catalog_id":"9b889cb4-ffe1-4695-8248-271ae4219ec9","content":"","title":"指数退避重试策略","description":"watch-retry-strategy","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"50f0acaf-dedb-4130-af50-1ab5fe1030a6","gmt_create":"2025-09-19T20:34:40.918085+08:00","gmt_modified":"2025-09-19T20:34:40.9208+08:00"},{"catalog_id":"2f5abc7a-13f1-4893-878e-6c2ee5f0d7ed","content":"","title":"监听器挂载机制","description":"watch-mounting-mechanism","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"c064035d-8cee-4c3d-80d5-d24353427805","gmt_create":"2025-09-19T20:35:09.806561+08:00","gmt_modified":"2025-09-19T20:35:09.811753+08:00"},{"catalog_id":"460cf4e3-68d2-4d95-8975-3b666c6afc59","content":"","title":"失败重试策略","description":"ttl-failure-retry","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"763079cc-eb51-459f-89ea-4f1c5bf4fa60","gmt_create":"2025-09-19T20:35:38.53417+08:00","gmt_modified":"2025-09-19T20:35:38.536734+08:00"},{"catalog_id":"c302cc0b-bb46-48cb-b1c9-13283bb2145c","content":"","title":"状态同步机制","description":"state-synchronization","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"7c588b9f-558d-4413-9ad9-e98da2652a3c","gmt_create":"2025-09-19T20:36:18.087847+08:00","gmt_modified":"2025-09-19T20:36:18.093927+08:00"},{"catalog_id":"25e5a5a4-e8d5-4d00-b18a-04e3d6fc6465","content":"","title":"通知重试机制","description":"watch-manager-retry-mechanism","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"dcd9fe3e-40a0-4e42-8e0d-64776b75efb9","gmt_create":"2025-09-19T20:37:01.313779+08:00","gmt_modified":"2025-09-19T20:37:01.318537+08:00"},{"catalog_id":"387fddd9-f750-49c7-b825-ec1eabbfbcd6","content":"","title":"异常处理与降级策略","description":"exception-handling-strategy","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"a6adbbb2-9564-4708-a89b-7c287bb6aafd","gmt_create":"2025-09-19T20:37:18.200015+08:00","gmt_modified":"2025-09-19T20:37:18.20829+08:00"},{"catalog_id":"d47b6da0-c827-4a23-bef4-03d7c9700914","content":"","title":"超时连接清理机制","description":"watch-timeout-cleanup","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"ed5fd62d-2800-4e4a-bc0e-5d3167dd2749","gmt_create":"2025-09-19T20:38:01.418813+08:00","gmt_modified":"2025-09-19T20:38:01.423184+08:00"},{"catalog_id":"2f15d6f4-6615-43a7-875a-cd8a95965980","content":"","title":"监听器生命周期管理","description":"watch-lifecycle-management","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"e626fd0c-18ad-4b6a-be60-a4a856a8747b","gmt_create":"2025-09-19T20:38:08.479941+08:00","gmt_modified":"2025-09-19T20:38:08.484459+08:00"},{"catalog_id":"8c9c0cc6-b556-481c-9060-20990908aa4b","content":"","title":"监听器迁移逻辑","description":"watch-migration","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"f2f4e258-4b77-446e-a69a-92041e3e7a18","gmt_create":"2025-09-19T20:39:03.578153+08:00","gmt_modified":"2025-09-19T20:39:03.58428+08:00"},{"catalog_id":"a3c16d36-d08c-4123-abeb-c339789651bc","content":"","title":"时序一致性保障","description":"watch-manager-epoch-consistency","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"6dd5780b-4809-4980-939d-130696f1bc05","gmt_create":"2025-09-19T20:39:32.644665+08:00","gmt_modified":"2025-09-19T20:39:32.650523+08:00"},{"catalog_id":"173db000-0103-4c35-a697-a913ad897450","content":"","title":"路径查找与递归创建","description":"watch-mounting-path-resolution","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"087f6e82-3e32-4ad2-b5c9-77e4aea0b03a","gmt_create":"2025-09-19T20:39:57.323671+08:00","gmt_modified":"2025-09-19T20:39:57.32944+08:00"},{"catalog_id":"e6042328-495a-4503-95aa-58e72d718fd2","content":"","title":"挂载与解挂载操作","description":"watch-mounting-lifecycle","extend":"{}","progress_status":"completed","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","id":"9c3da1c0-c3c9-465e-92cc-066b593d37e7","gmt_create":"2025-09-19T20:40:41.465071+08:00","gmt_modified":"2025-09-19T20:40:41.470522+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# 东亭（Dongting）项目综合分析报告\n\n## 1. 项目介绍\n\n### 项目概述\n东亭（Dongting）是一个高性能的分布式系统引擎，集成了RAFT一致性算法、分布式配置服务、消息队列和低层RPC通信功能。该项目旨在提供一个零依赖、高性能、可嵌入的分布式协调解决方案，适用于需要线性一致性和高吞吐量的场景。\n\n### 核心目标\n- 实现多RAFT组支持，允许在单个进程中运行多个RAFT组，并支持动态添加、删除和更新\n- 提供低延迟、高吞吐量的分布式KV存储服务（DtKV）\n- 实现零外部依赖，确保极小的部署包体积（客户端和服务器合计小于1MB）\n- 提供卓越的性能表现，在标准硬件上实现百万级TPS\n\n### 目标用户\n- 需要分布式一致性解决方案的系统架构师和开发者\n- 希望避免复杂依赖管理的微服务开发者\n- 对性能有严格要求的分布式系统开发者\n- 需要在资源受限环境（如树莓派）中运行分布式系统的开发者\n\n## 2. 技术架构\n\n### 组件分解\n东亭项目采用模块化设计，主要包含以下核心组件：\n\n```mermaid\nflowchart TD\n    A[Client] --\u003e B[Server]\n    B --\u003e C[Fiber协程]\n    B --\u003e D[RAFT一致性]\n    B --\u003e E[网络通信]\n    B --\u003e F[对象池]\n    C --\u003e G[Dispatcher]\n    C --\u003e H[FiberGroup]\n    D --\u003e I[RaftServer]\n    D --\u003e J[RaftGroupImpl]\n    E --\u003e K[NioServer]\n    E --\u003e L[NioClient]\n```\n\n### 设计模式\n项目采用了多种先进的设计模式和架构原则：\n- **Fiber协程模型**：基于无栈协程实现的轻量级并发模型，避免了传统异步编程的回调地狱问题\n- **单线程事件循环**：每个RAFT组使用独立的FiberGroup，确保线性一致性执行\n- **零依赖设计**：不依赖任何第三方库，仅可选支持SLF4J日志\n- **分层架构**：清晰的客户端、服务器、工具模块分离\n\n### 系统关系\n```mermaid\ngraph TD\n    Client[dongting-client] --\u003e Server[dongting-server]\n    Server --\u003e Fiber[协程模块]\n    Server --\u003e Raft[RAFT模块]\n    Server --\u003e Net[网络模块]\n    Server --\u003e Buf[缓冲区管理]\n    Demos[演示程序] --\u003e Client\n    Demos --\u003e Server\n    Benchmark[性能测试] --\u003e Server\n    TestSupport[测试支持] -.-\u003e 所有模块\n```\n\n### 数据流\n```mermaid\nflowchart TD\n    Client --\u003e|请求| ServiceNioServer[Raft服务端口]\n    ServiceNioServer --\u003e RaftGroup[RAFT组]\n    RaftGroup --\u003e|共识算法| ReplicateNioServer[RAFT复制端口]\n    ReplicateNioServer --\u003e 其他节点\n    RaftGroup --\u003e StateMachine[状态机]\n    StateMachine --\u003e Storage[存储]\n    Storage --\u003e|持久化| RaftLog[RAFT日志]\n```\n\n## 3. 关键实现\n\n### 主要入口点\n- **服务器启动**: `server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServer.java`\n- **客户端接口**: `client/src/main/java/com/github/dtprj/dongting/net/NioClient.java`\n- **演示程序**: `demos/src/main/java/com/github/dtprj/dongting/demos/`\n\n### 核心模块\n- **RAFT实现**: `server/src/main/java/com/github/dtprj/dongting/raft/`\n- **Fiber协程**: `server/src/main/java/com/github/dtprj/dongting/fiber/`\n- **网络通信**: `client/src/main/java/com/github/dtprj/dongting/net/`\n- **缓冲区管理**: `client/src/main/java/com/github/dtprj/dongting/buf/`\n\n### 配置方法\n- **服务器配置**: `server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServerConfig.java`\n- **RAFT组配置**: `server/src/main/java/com/github/dtprj/dongting/raft/server/RaftGroupConfig.java`\n- **网络配置**: `client/src/main/java/com/github/dtprj/dongting/net/NioConfig.java`\n\n### 外部依赖\n- **可选日志**: SLF4J API (通过Maven依赖管理)\n- **测试依赖**: JUnit 5, Protobuf\n- **构建工具**: Maven\n\n### 集成点\n- **状态机自定义**: `server/src/main/java/com/github/dtprj/dongting/raft/sm/StateMachine.java`\n- **存储自定义**: `server/src/main/java/com/github/dtprj/dongting/raft/store/RaftLog.java`\n- **RPC扩展**: `server/src/main/java/com/github/dtprj/dongting/raft/rpc/`\n\n### 组件关系\n```mermaid\ngraph LR\n    RaftServer[RaftServer] --\u003e RaftGroup[RaftGroupImpl]\n    RaftGroup --\u003e FiberGroup[FiberGroup]\n    FiberGroup --\u003e Dispatcher[Dispatcher]\n    RaftGroup --\u003e RaftLog[RaftLog]\n    RaftGroup --\u003e StateMachine[StateMachine]\n    RaftGroup --\u003e SnapshotManager[SnapshotManager]\n    RaftServer --\u003e NioServer[NioServer]\n    RaftServer --\u003e NioClient[NioClient]\n    RaftServer --\u003e NodeManager[NodeManager]\n```\n\n## 4. 关键特性\n\n### 功能概述\n- **多RAFT组支持**: 可在单个进程中运行多个独立的RAFT组\n- **动态配置变更**: 支持运行时动态添加/删除RAFT节点和组\n- **线性一致性**: 通过RAFT算法保证数据的一致性\n- **高性能**: 在普通硬件上实现百万级TPS\n- **零依赖**: 不依赖任何第三方库，可轻松嵌入现有应用\n\n### 实现亮点\n- **Fiber协程系统**: 创新的无栈协程实现，简化异步编程\n- **对象池管理**: 高效的ByteBufferPool减少GC压力\n- **自适应网络模型**: 基于NIO的高性能网络通信\n- **灵活的状态机**: 支持自定义状态机实现\n\n### 特性架构\n```mermaid\nstateDiagram-v2\n    [*] --\u003e 初始化\n    初始化 --\u003e 运行中: 启动成功\n    运行中 --\u003e 领导者: 选举成功\n    运行中 --\u003e 跟随者: 选举失败\n    领导者 --\u003e 运行中: 领导权丢失\n    跟随者 --\u003e 运行中: 重新选举\n    运行中 --\u003e 停止: 显式关闭\n    运行中 --\u003e 停止: 故障\n    停止 --\u003e [*]\n    \n    state 运行中 {\n        [*] --\u003e 接收请求\n        接收请求 --\u003e 共识处理\n        共识处理 --\u003e 状态机应用\n        状态机应用 --\u003e 响应客户端\n    }\n```\n\nSources:\n- [README.md](README.md)\n- [pom.xml](pom.xml)\n- [RaftServer.java](server/src/main/java/com/github/dtprj/dongting/raft/server/RaftServer.java)\n- [RaftGroupImpl.java](server/src/main/java/com/github/dtprj/dongting/raft/impl/RaftGroupImpl.java)\n\u003c/blog\u003e","gmt_create":"2025-09-19T19:27:39.091992+08:00","gmt_modified":"2025-09-19T19:27:39.091992+08:00","id":"21069f43-ca3c-4a47-8e0e-5d69fd882ef7","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-19T19:26:51.501739+08:00","gmt_modified":"2025-09-19T19:26:51.501739+08:00","id":"ead1f342-d7d4-4d77-a2e3-6ec21c1267df","repo_id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":""},"wiki_repo":{"id":"afcee8fd-3346-48e6-8d09-6f6f7e503bd1","workspace_path":"","name":"dongting","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── benchmark\\n│   ├── src/main\\n│   │   ├── java/com/github/dtprj/dongting/bench\\n│   │   │   ├── common\\n│   │   │   │   ├── BenchBase.java\\n│   │   │   │   ├── PrometheusPerfCallback.java\\n│   │   │   │   ├── SimplePerfCallback.java\\n│   │   │   │   └── TestProps.java\\n│   │   │   ├── fiber\\n│   │   │   │   ├── ChannelCrossThreadTest.java\\n│   │   │   │   ├── CreateFiberTest.java\\n│   │   │   │   ├── FiberChannelTest.java\\n│   │   │   │   └── FiberTest.java\\n│   │   │   ├── fixcount\\n│   │   │   │   ├── ConcurrentLinkedQueueCountTest.java\\n│   │   │   │   ├── MpscCountBenchBase.java\\n│   │   │   │   └── MpscQueueCountTest.java\\n│   │   │   ├── io\\n│   │   │   │   ├── IoMode1.java\\n│   │   │   │   ├── IoMode2.java\\n│   │   │   │   ├── IoMode3.java\\n│   │   │   │   ├── IoMode4.java\\n│   │   │   │   ├── IoModeBase.java\\n│   │   │   │   ├── IoTest.java\\n│   │   │   │   ├── SyncTest.java\\n│   │   │   │   └── WriteTask.java\\n│   │   │   ├── map\\n│   │   │   │   └── OrderMapTest.java\\n│   │   │   ├── queue\\n│   │   │   │   ├── ConcurrentLinkedQueueTest.java\\n│   │   │   │   ├── LinkedBlockingQueueTest.java\\n│   │   │   │   └── MpscQueueTest.java\\n│   │   │   ├── raft\\n│   │   │   │   ├── MockExecutors.java\\n│   │   │   │   ├── RaftBenchmark.java\\n│   │   │   │   └── RaftPerfCallback.java\\n│   │   │   └── rpc\\n│   │   │       ├── RpcBenchmark.java\\n│   │   │       └── RpcPerfCallback.java\\n│   │   └── resources\\n│   │       └── logback.xml\\n│   └── pom.xml\\n├── client\\n│   ├── src\\n│   │   ├── main/java\\n│   │   │   ├── com/github/dtprj/dongting\\n│   │   │   │   ├── buf\\n│   │   │   │   │   ├── ByteBufferPool.java\\n│   │   │   │   │   ├── DefaultPoolFactory.java\\n│   │   │   │   │   ├── FixSizeBufferPool.java\\n│   │   │   │   │   ├── PoolFactory.java\\n│   │   │   │   │   ├── RefBuffer.java\\n│   │   │   │   │   ├── RefBufferFactory.java\\n│   │   │   │   │   ├── SimpleByteBufferPool.java\\n│   │   │   │   │   ├── SimpleByteBufferPoolConfig.java\\n│   │   │   │   │   └── TwoLevelPool.java\\n│   │   │   │   ├── codec\\n│   │   │   │   │   ├── AbstractCodecCallback.java\\n│   │   │   │   │   ├── BytesDecoderCallback.java\\n│   │   │   │   │   ├── CodecException.java\\n│   │   │   │   │   ├── CopyDecoderCallback.java\\n│   │   │   │   │   ├── DecodeContext.java\\n│   │   │   │   │   ├── Decoder.java\\n│   │   │   │   │   ├── DecoderCallback.java\\n│   │   │   │   │   ├── DecoderCallbackCreator.java\\n│   │   │   │   │   ├── Encodable.java\\n│   │   │   │   │   ├── EncodeContext.java\\n│   │   │   │   │   ├── EncodeUtil.java\\n│   │   │   │   │   ├── PbBytesCallback.java\\n│   │   │   │   │   ├── PbCallback.java\\n│   │   │   │   │   ├── PbException.java\\n│   │   │   │   │   ├── PbIntCallback.java\\n│   │   │   │   │   ├── PbLongCallback.java\\n│   │   │   │   │   ├── PbNoCopyDecoderCallback.java\\n│   │   │   │   │   ├── PbParser.java\\n│   │   │   │   │   ├── PbStrCallback.java\\n│   │   │   │   │   ├── PbUtil.java\\n│   │   │   │   │   ├── RefBufferDecoderCallback.java\\n│   │   │   │   │   ├── SimpleEncodable.java\\n│   │   │   │   │   ├── StrDecoderCallback.java\\n│   │   │   │   │   └── StrEncoder.java\\n│   │   │   │   ├── common\\n│   │   │   │   │   ├── AbstractLifeCircle.java\\n│   │   │   │   │   ├── AbstractRefCountUpdater.java\\n│   │   │   │   │   ├── BitUtil.java\\n│   │   │   │   │   ├── ByteArray.java\\n│   │   │   │   │   ├── ConsumerEx.java\\n│   │   │   │   │   ├── DtBugException.java\\n│   │   │   │   │   ├── DtException.java\\n│   │   │   │   │   ├── DtThreadFactory.java\\n│   │   │   │   │   ├── DtTime.java\\n│   │   │   │   │   ├── DtUtil.java\\n│   │   │   │   │   ├── FlowControlException.java\\n│   │   │   │   │   ├── FutureCallback.java\\n│   │   │   │   │   ├── IndexedQueue.java\\n│   │   │   │   │   ├── IntMapNode.java\\n│   │   │   │   │   ├── IntObjMap.java\\n│   │   │   │   │   ├── LifeCircle.java\\n│   │   │   │   │   ├── LongMapNode.java\\n│   │   │   │   │   ├── LongObjMap.java\\n│   │   │   │   │   ├── NoopPerfCallback.java\\n│   │   │   │   │   ├── Pair.java\\n│   │   │   │   │   ├── PerfCallback.java\\n│   │   │   │   │   ├── PerfConsts.java\\n│   │   │   │   │   ├── RefCount.java\\n│   │   │   │   │   ├── RefCountUpdater.java\\n│   │   │   │   │   ├── RunnableEx.java\\n│   │   │   │   │   ├── SupplierEx.java\\n│   │   │   │   │   ├── Timestamp.java\\n│   │   │   │   │   └── VersionFactory.java\\n│   │   │   │   ├── dtkv\\n│   │   │   │   │   ├── KvClient.java\\n│   │   │   │   │   ├── KvCodes.java\\n│   │   │   │   │   ├── KvException.java\\n│   │   │   │   │   ├── KvListener.java\\n│   │   │   │   │   ├── KvNode.java\\n│   │   │   │   │   ├── KvReq.java\\n│   │   │   │   │   ├── KvResp.java\\n│   │   │   │   │   ├── KvResult.java\\n│   │   │   │   │   ├── KvStatusResp.java\\n│   │   │   │   │   ├── WatchEvent.java\\n│   │   │   │   │   ├── WatchManager.java\\n│   │   │   │   │   ├── WatchNotify.java\\n│   │   │   │   │   ├── WatchNotifyReq.java\\n│   │   │   │   │   ├── WatchNotifyResp.java\\n│   │   │   │   │   ├── WatchProcessor.java\\n│   │   │   │   │   └── WatchReq.java\\n│   │   │   │   ├── java11\\n│   │   │   │   │   ├── Java11Factory.java\\n│   │   │   │   │   ├── Java11LinkedNode.java\\n│   │   │   │   │   ├── Java11MpscLinkedQueue.java\\n│   │   │   │   │   ├── PlainRefCountUpdater.java\\n│   │   │   │   │   └── VarHandleRefCount.java\\n│   │   │   │   ├── java8\\n│   │   │   │   │   ├── Java8Factory.java\\n│   │   │   │   │   ├── Java8LinkedNode.java\\n│   │   │   │   │   ├── Java8MpscLinkedQueue.java\\n│   │   │   │   │   ├── Java8RefCountUpdater.java\\n│   │   │   │   │   └── PlainRefCountUpdater.java\\n│   │   │   │   ├── log\\n│   │   │   │   │   ├── BugLog.java\\n│   │   │   │   │   ├── DtLog.java\\n│   │   │   │   │   ├── DtLogFactory.java\\n│   │   │   │   │   ├── DtLogs.java\\n│   │   │   │   │   ├── FormattingTuple.java\\n│   │   │   │   │   ├── JdkFactory.java\\n│   │   │   │   │   ├── JdkLog.java\\n│   │   │   │   │   ├── MessageFormatter.java\\n│   │   │   │   │   ├── Slf4jFactory.java\\n│   │   │   │   │   └── Slf4jLog.java\\n│   │   │   │   ├── net\\n│   │   │   │   │   ├── ByteBufferWritePacket.java\\n│   │   │   │   │   ├── ChannelListener.java\\n│   │   │   │   │   ├── CmdCodes.java\\n│   │   │   │   │   ├── Commands.java\\n│   │   │   │   │   ├── CopyWritePacket.java\\n│   │   │   │   │   ├── DtChannel.java\\n│   │   │   │   │   ├── DtChannelImpl.java\\n│   │   │   │   │   ├── EmptyBodyReqPacket.java\\n│   │   │   │   │   ├── EmptyBodyRespPacket.java\\n│   │   │   │   │   ├── EncodableBodyWritePacket.java\\n│   │   │   │   │   ├── HandshakeBody.java\\n│   │   │   │   │   ├── HandshakeProcessor.java\\n│   │   │   │   │   ├── HostPort.java\\n│   │   │   │   │   ├── IoChannelQueue.java\\n│   │   │   │   │   ├── IoWorkerQueue.java\\n│   │   │   │   │   ├── MultiParser.java\\n│   │   │   │   │   ├── NetCodeException.java\\n│   │   │   │   │   ├── NetException.java\\n│   │   │   │   │   ├── NetTimeoutException.java\\n│   │   │   │   │   ├── NioClient.java\\n│   │   │   │   │   ├── NioClientConfig.java\\n│   │   │   │   │   ├── NioConfig.java\\n│   │   │   │   │   ├── NioNet.java\\n│   │   │   │   │   ├── NioServer.java\\n│   │   │   │   │   ├── NioServerConfig.java\\n│   │   │   │   │   ├── NioStatus.java\\n│   │   │   │   │   ├── NioWorker.java\\n│   │   │   │   │   ├── Packet.java\\n│   │   │   │   │   ├── PacketInfo.java\\n│   │   │   │   │   ├── PacketType.java\\n│   │   │   │   │   ├── PbBytesWritePacket.java\\n│   │   │   │   │   ├── PbIntWritePacket.java\\n│   │   │   │   │   ├── PbLongWritePacket.java\\n│   │   │   │   │   ├── PbStrWritePacket.java\\n│   │   │   │   │   ├── Peer.java\\n│   │   │   │   │   ├── PeerStatus.java\\n│   │   │   │   │   ├── ReadPacket.java\\n│   │   │   │   │   ├── RefBufWritePacket.java\\n│   │   │   │   │   ├── ReqContext.java\\n│   │   │   │   │   ├── ReqProcessor.java\\n│   │   │   │   │   ├── RetryableWritePacket.java\\n│   │   │   │   │   ├── RpcCallback.java\\n│   │   │   │   │   ├── SimpleWritePacket.java\\n│   │   │   │   │   ├── SmallNoCopyWritePacket.java\\n│   │   │   │   │   ├── WorkerStatus.java\\n│   │   │   │   │   ├── WorkerThread.java\\n│   │   │   │   │   └── WritePacket.java\\n│   │   │   │   ├── queue\\n│   │   │   │   │   ├── LinkedNode.java\\n│   │   │   │   │   └── MpscLinkedQueue.java\\n│   │   │   │   ├── raft\\n│   │   │   │   │   ├── GroupInfo.java\\n│   │   │   │   │   ├── NoSuchGroupException.java\\n│   │   │   │   │   ├── QueryStatusResp.java\\n│   │   │   │   │   ├── RaftClient.java\\n│   │   │   │   │   ├── RaftConfigRpcData.java\\n│   │   │   │   │   ├── RaftException.java\\n│   │   │   │   │   ├── RaftNode.java\\n│   │   │   │   │   ├── RaftRpcData.java\\n│   │   │   │   │   └── RaftTimeoutException.java\\n│   │   │   │   └── unsafe\\n│   │   │   │       └── DtUnsafe.java\\n│   │   │   └── module-info.java\\n│   │   └── test\\n│   │       ├── java/com/github/dtprj/dongting\\n│   │       │   ├── buf\\n│   │       │   │   ├── RefBufferTest.java\\n│   │       │   │   ├── SimpleByteBufferPoolTest.java\\n│   │       │   │   └── TwoLevelPoolTest.java\\n│   │       │   ├── codec\\n│   │       │   │   ├── CodecTestUtil.java\\n│   │       │   │   ├── EncodeUtilTest.java\\n│   │       │   │   ├── PbNoCopyDecoderCallbackTest.java\\n│   │       │   │   ├── PbParserExTest.java\\n│   │       │   │   ├── PbParserTest.java\\n│   │       │   │   ├── PbUtilTest.java\\n│   │       │   │   ├── StrDecoderCallbackTest.java\\n│   │       │   │   └── StrEncoderTest.java\\n│   │       │   ├── common\\n│   │       │   │   ├── BitUtilTest.java\\n│   │       │   │   ├── IndexedQueueTest.java\\n│   │       │   │   ├── IntObjMapTest.java\\n│   │       │   │   ├── JavaVersionTest.java\\n│   │       │   │   ├── LongObjMapTest.java\\n│   │       │   │   ├── MockDtTime.java\\n│   │       │   │   ├── MockRuntimeException.java\\n│   │       │   │   ├── MutableInt.java\\n│   │       │   │   ├── MutableLong.java\\n│   │       │   │   └── TestUtil.java\\n│   │       │   ├── java11\\n│   │       │   │   ├── AbstractMultiThreadRefCountTest.java\\n│   │       │   │   ├── AbstractRefCountTest.java\\n│   │       │   │   ├── Java11PlainRefCountTest.java\\n│   │       │   │   ├── Java11RefCountTest.java\\n│   │       │   │   └── MpscLinkedQueueTest.java\\n│   │       │   ├── java8\\n│   │       │   │   ├── Java8FactoryTest.java\\n│   │       │   │   ├── Java8MpscLinkedQueueTest.java\\n│   │       │   │   ├── Java8PlainRefCountTest.java\\n│   │       │   │   └── Java8RefCountTest.java\\n│   │       │   ├── log\\n│   │       │   │   ├── DtLogsTest.java\\n│   │       │   │   ├── JdkLogTest.java\\n│   │       │   │   ├── MessageFormatterTest.java\\n│   │       │   │   └── Slf4jLogTest.java\\n│   │       │   └── net\\n│   │       │       ├── CloseTest.java\\n│   │       │       ├── ConfigBodyTest.java\\n│   │       │       ├── ConnectTest.java\\n│   │       │       ├── HandshakeBodyTest.java\\n│   │       │       ├── MultiParserTest.java\\n│   │       │       ├── NioClientTest.java\\n│   │       │       ├── NioServerClientTest.java\\n│   │       │       ├── NioServerTest.java\\n│   │       │       ├── PacketPbTest.java\\n│   │       │       ├── TestDecoder.java\\n│   │       │       └── TimeoutTest.java\\n│   │       ├── proto\\n│   │       │   ├── dt_packet.proto\\n│   │       │   └── dt_pb_test.proto\\n│   │       └── resources\\n│   │           └── logback-test.xml\\n│   └── pom.xml\\n├── demos\\n│   ├── src/main\\n│   │   ├── java/com/github/dtprj/dongting/demos\\n│   │   │   ├── base\\n│   │   │   │   ├── DemoClientBase.java\\n│   │   │   │   └── DemoKvServerBase.java\\n│   │   │   ├── cluster\\n│   │   │   │   ├── ChangeLeader.java\\n│   │   │   │   ├── DemoClient.java\\n│   │   │   │   ├── DemoServer1.java\\n│   │   │   │   ├── DemoServer2.java\\n│   │   │   │   ├── DemoServer3.java\\n│   │   │   │   ├── GroupId.java\\n│   │   │   │   └── PeriodPutClient.java\\n│   │   │   ├── configchange\\n│   │   │   │   ├── ChangeTo123Client.java\\n│   │   │   │   ├── ChangeTo234Client.java\\n│   │   │   │   ├── ConfigChangeDemoServer1.java\\n│   │   │   │   ├── ConfigChangeDemoServer2.java\\n│   │   │   │   ├── ConfigChangeDemoServer3.java\\n│   │   │   │   ├── ConfigChangeDemoServer4.java\\n│   │   │   │   └── GroupId.java\\n│   │   │   ├── embedded\\n│   │   │   │   ├── EmbeddedDemo.java\\n│   │   │   │   └── GroupId.java\\n│   │   │   ├── multiraft\\n│   │   │   │   ├── AddGroup103Demo.java\\n│   │   │   │   ├── GroupId.java\\n│   │   │   │   ├── MultiRaftDemoServer1.java\\n│   │   │   │   ├── MultiRaftDemoServer2.java\\n│   │   │   │   ├── MultiRaftDemoServer3.java\\n│   │   │   │   ├── PeriodPutClient.java\\n│   │   │   │   └── RemoveGroup103Demo.java\\n│   │   │   ├── standalone\\n│   │   │   │   ├── GroupId.java\\n│   │   │   │   ├── StandaloneDemoClient.java\\n│   │   │   │   └── StandaloneDemoServer.java\\n│   │   │   ├── ttl\\n│   │   │   │   ├── GroupId.java\\n│   │   │   │   ├── TtlDemoClient.java\\n│   │   │   │   └── TtlDemoServer.java\\n│   │   │   └── watch\\n│   │   │       ├── GroupId.java\\n│   │   │       ├── WatchDemoClient.java\\n│   │   │       └── WatchDemoServer.java\\n│   │   └── resources\\n│   │       └── logback.xml\\n│   └── pom.xml\\n├── devlogs\\n│   ├── 2022_07_25_快手毕业感言.md\\n│   ├── 2022_11_21_第一点阶段性进展.md\\n│   ├── 2022_11_22_Java5、Java9内存模型.md\\n│   ├── 2022_11_23_Java5、Java9内存模型（补充）.md\\n│   ├── 2022_11_25_构建高性能的内存队列.md\\n│   ├── 2022_11_28_我的性能优化笔记（三）.md\\n│   ├── 2023_07_17_再论mmap.txt\\n│   ├── 2023_07_20_现代硬件下的IO程序开发.txt\\n│   ├── 2023_07_21_dongting的时间度量.txt\\n│   ├── 2023_07_25_再论线性一致性.md\\n│   ├── 2023_07_26_dongting线程模型.txt\\n│   ├── 2023_07_27_dongting的定位和原则.txt\\n│   ├── 2023_07_28_dongting的对象池.txt\\n│   ├── 2024_07_09_第二点阶段性进展.md\\n│   ├── 2024_07_16_3000行代码实现fiber.md\\n│   ├── 2024_07_26_raft算法的工程实现秘笈.md\\n│   └── 2025_03_21_关于getter和setter.md\\n├── report\\n│   └── pom.xml\\n├── server\\n│   ├── src\\n│   │   ├── main/java\\n│   │   │   ├── com/github/dtprj/dongting\\n│   │   │   │   ├── dtkv/server\\n│   │   │   │   │   ├── DtKV.java\\n│   │   │   │   │   ├── DtKVExecutor.java\\n│   │   │   │   │   ├── EncodeStatus.java\\n│   │   │   │   │   ├── KvConfig.java\\n│   │   │   │   │   ├── KvImpl.java\\n│   │   │   │   │   ├── KvNodeEx.java\\n│   │   │   │   │   ├── KvNodeHolder.java\\n│   │   │   │   │   ├── KvProcessor.java\\n│   │   │   │   │   ├── KvReqCallback.java\\n│   │   │   │   │   ├── KvServerUtil.java\\n│   │   │   │   │   ├── KvSnapshot.java\\n│   │   │   │   │   ├── KvStatus.java\\n│   │   │   │   │   ├── KvStatusProcessor.java\\n│   │   │   │   │   ├── ServerWatchManager.java\\n│   │   │   │   │   ├── TtlManager.java\\n│   │   │   │   │   ├── WatchProcessor.java\\n│   │   │   │   │   └── WatchReqCallback.java\\n│   │   │   │   ├── fiber\\n│   │   │   │   │   ├── Dispatcher.java\\n│   │   │   │   │   ├── DispatcherThread.java\\n│   │   │   │   │   ├── DoInLockFrame.java\\n│   │   │   │   │   ├── Fiber.java\\n│   │   │   │   │   ├── FiberCancelException.java\\n│   │   │   │   │   ├── FiberChannel.java\\n│   │   │   │   │   ├── FiberCondition.java\\n│   │   │   │   │   ├── FiberException.java\\n│   │   │   │   │   ├── FiberFrame.java\\n│   │   │   │   │   ├── FiberFuture.java\\n│   │   │   │   │   ├── FiberGroup.java\\n│   │   │   │   │   ├── FiberInterruptException.java\\n│   │   │   │   │   ├── FiberLock.java\\n│   │   │   │   │   ├── FiberQueue.java\\n│   │   │   │   │   ├── FiberQueueTask.java\\n│   │   │   │   │   ├── FiberReadLock.java\\n│   │   │   │   │   ├── FiberTimeoutException.java\\n│   │   │   │   │   ├── FrameCall.java\\n│   │   │   │   │   ├── FrameCallResult.java\\n│   │   │   │   │   ├── GroupExecutor.java\\n│   │   │   │   │   ├── HandlerFrame.java\\n│   │   │   │   │   ├── Lock.java\\n│   │   │   │   │   ├── PostFiberFrame.java\\n│   │   │   │   │   └── WaitSource.java\\n│   │   │   │   └── raft\\n│   │   │   │       ├── admin\\n│   │   │   │       │   └── AdminRaftClient.java\\n│   │   │   │       ├── impl\\n│   │   │   │       │   ├── ApplyManager.java\\n│   │   │   │       │   ├── CommitManager.java\\n│   │   │   │       │   ├── DecodeContextEx.java\\n│   │   │   │       │   ├── FileUtil.java\\n│   │   │   │       │   ├── GroupComponents.java\\n│   │   │   │       │   ├── InitFiberFrame.java\\n│   │   │   │       │   ├── LinearTaskRunner.java\\n│   │   │   │       │   ├── MemberManager.java\\n│   │   │   │       │   ├── NodeManager.java\\n│   │   │   │       │   ├── NodeStatus.java\\n│   │   │   │       │   ├── PendingStat.java\\n│   │   │   │       │   ├── RaftCancelException.java\\n│   │   │   │       │   ├── RaftGroupImpl.java\\n│   │   │   │       │   ├── RaftMember.java\\n│   │   │   │       │   ├── RaftNodeEx.java\\n│   │   │   │       │   ├── RaftRole.java\\n│   │   │   │       │   ├── RaftStatusImpl.java\\n│   │   │   │       │   ├── RaftTask.java\\n│   │   │   │       │   ├── RaftUtil.java\\n│   │   │   │       │   ├── ReplicateManager.java\\n│   │   │   │       │   ├── ShareStatus.java\\n│   │   │   │       │   ├── SnapshotReader.java\\n│   │   │   │       │   ├── TailCache.java\\n│   │   │   │       │   └── VoteManager.java\\n│   │   │   │       ├── rpc\\n│   │   │   │       │   ├── AdminAddGroupReq.java\\n│   │   │   │       │   ├── AdminAddNodeReq.java\\n│   │   │   │       │   ├── AdminCommitOrAbortReq.java\\n│   │   │   │       │   ├── AdminConfigChangeProcessor.java\\n│   │   │   │       │   ├── AdminGroupAndNodeProcessor.java\\n│   │   │   │       │   ├── AdminPrepareConfigChangeReq.java\\n│   │   │   │       │   ├── AdminTransferLeaderProcessor.java\\n│   │   │   │       │   ├── AppendProcessor.java\\n│   │   │   │       │   ├── AppendReq.java\\n│   │   │   │       │   ├── AppendReqWritePacket.java\\n│   │   │   │       │   ├── AppendResp.java\\n│   │   │   │       │   ├── InstallSnapshotReq.java\\n│   │   │   │       │   ├── LogItemCallback.java\\n│   │   │   │       │   ├── NodePing.java\\n│   │   │   │       │   ├── NodePingProcessor.java\\n│   │   │   │       │   ├── QueryStatusProcessor.java\\n│   │   │   │       │   ├── RaftPing.java\\n│   │   │   │       │   ├── RaftPingProcessor.java\\n│   │   │   │       │   ├── RaftSequenceProcessor.java\\n│   │   │   │       │   ├── ReqInfoEx.java\\n│   │   │   │       │   ├── TransferLeaderProcessor.java\\n│   │   │   │       │   ├── TransferLeaderReq.java\\n│   │   │   │       │   ├── VoteProcessor.java\\n│   │   │   │       │   ├── VoteReq.java\\n│   │   │   │       │   └── VoteResp.java\\n│   │   │   │       ├── server\\n│   │   │   │       │   ├── ChecksumException.java\\n│   │   │   │       │   ├── DefaultRaftFactory.java\\n│   │   │   │       │   ├── LogItem.java\\n│   │   │   │       │   ├── NotLeaderException.java\\n│   │   │   │       │   ├── RaftCallback.java\\n│   │   │   │       │   ├── RaftFactory.java\\n│   │   │   │       │   ├── RaftGroup.java\\n│   │   │   │       │   ├── RaftGroupConfig.java\\n│   │   │   │       │   ├── RaftGroupConfigEx.java\\n│   │   │   │       │   ├── RaftInput.java\\n│   │   │   │       │   ├── RaftProcessor.java\\n│   │   │   │       │   ├── RaftServer.java\\n│   │   │   │       │   ├── RaftServerConfig.java\\n│   │   │   │       │   ├── RaftStatus.java\\n│   │   │   │       │   └── ReqInfo.java\\n│   │   │   │       ├── sm\\n│   │   │   │       │   ├── DefaultSnapshotManager.java\\n│   │   │   │       │   ├── FileSnapshot.java\\n│   │   │   │       │   ├── RaftCodecFactory.java\\n│   │   │   │       │   ├── Snapshot.java\\n│   │   │   │       │   ├── SnapshotInfo.java\\n│   │   │   │       │   ├── SnapshotManager.java\\n│   │   │   │       │   └── StateMachine.java\\n│   │   │   │       └── store\\n│   │   │   │           ├── AsyncIoTask.java\\n│   │   │   │           ├── ChainWriter.java\\n│   │   │   │           ├── DefaultRaftLog.java\\n│   │   │   │           ├── DtFile.java\\n│   │   │   │           ├── FileLogLoader.java\\n│   │   │   │           ├── FileQueue.java\\n│   │   │   │           ├── ForceFrame.java\\n│   │   │   │           ├── IdxFileQueue.java\\n│   │   │   │           ├── IdxOps.java\\n│   │   │   │           ├── LogAppender.java\\n│   │   │   │           ├── LogFile.java\\n│   │   │   │           ├── LogFileQueue.java\\n│   │   │   │           ├── LogHeader.java\\n│   │   │   │           ├── LongLongSeqMap.java\\n│   │   │   │           ├── MatchPosFinder.java\\n│   │   │   │           ├── RaftLog.java\\n│   │   │   │           ├── Restorer.java\\n│   │   │   │           ├── RetryFrame.java\\n│   │   │   │           ├── StatusFile.java\\n│   │   │   │           ├── StatusManager.java\\n│   │   │   │           └── StoreUtil.java\\n│   │   │   └── module-info.java\\n│   │   └── test\\n│   │       ├── java/com/github/dtprj/dongting\\n│   │       │   ├── dtkv/server\\n│   │       │   │   ├── DtKVTest.java\\n│   │       │   │   ├── KvCheckTest.java\\n│   │       │   │   ├── KvImplTest.java\\n│   │       │   │   ├── KvNodeTest.java\\n│   │       │   │   ├── KvReqTest.java\\n│   │       │   │   ├── KvRespTest.java\\n│   │       │   │   ├── KvResultTest.java\\n│   │       │   │   ├── ServerWatchManagerTest.java\\n│   │       │   │   ├── TtlManagerTest.java\\n│   │       │   │   ├── WatchManagerTest.java\\n│   │       │   │   ├── WatchNotifyReqTest.java\\n│   │       │   │   ├── WatchNotifyRespTest.java\\n│   │       │   │   ├── WatchNotifyTest.java\\n│   │       │   │   └── WatchReqTest.java\\n│   │       │   ├── fiber\\n│   │       │   │   ├── AbstractFiberTest.java\\n│   │       │   │   ├── BaseFiberTest.java\\n│   │       │   │   ├── CallTest.java\\n│   │       │   │   ├── CatchTest.java\\n│   │       │   │   ├── ChannelTest.java\\n│   │       │   │   ├── ConditionTest.java\\n│   │       │   │   ├── EmptyFiberFrame.java\\n│   │       │   │   ├── FiberLifeCycleTest.java\\n│   │       │   │   ├── FiberQueueTest.java\\n│   │       │   │   ├── FiberTestUtil.java\\n│   │       │   │   ├── FinallyTest.java\\n│   │       │   │   ├── FutureTest.java\\n│   │       │   │   ├── GroupExecutorTest.java\\n│   │       │   │   ├── JoinTest.java\\n│   │       │   │   ├── LockTest.java\\n│   │       │   │   ├── SleepTest.java\\n│   │       │   │   ├── VirtualExceptionTest.java\\n│   │       │   │   └── YieldTest.java\\n│   │       │   ├── raft\\n│   │       │   │   ├── impl\\n│   │       │   │   │   ├── ImplAccessor.java\\n│   │       │   │   │   ├── NodeManagerTest.java\\n│   │       │   │   │   └── RaftUtilTest.java\\n│   │       │   │   ├── rpc\\n│   │       │   │   │   └── AppendReqWritePacketTest.java\\n│   │       │   │   ├── server\\n│   │       │   │   │   ├── ConfigChangeTest.java\\n│   │       │   │   │   ├── DtKVServerTest.java\\n│   │       │   │   │   ├── InstallTest.java\\n│   │       │   │   │   ├── MultiRaftTest.java\\n│   │       │   │   │   ├── ReplicateTest.java\\n│   │       │   │   │   ├── ServerTestBase.java\\n│   │       │   │   │   ├── TransferLeaderTest.java\\n│   │       │   │   │   └── VoteTest.java\\n│   │       │   │   ├── sm\\n│   │       │   │   │   └── DefaultSnapshotManagerTest.java\\n│   │       │   │   ├── store\\n│   │       │   │   │   └── ... 11 files, 0 dirs not shown\\n│   │       │   │   └── test\\n│   │       │   │       └── ... 2 files, 0 dirs not shown\\n│   │       │   └── util\\n│   │       │       ├── CodecTestUtil.java\\n│   │       │       └── MockRuntimeException.java\\n│   │       ├── proto\\n│   │       │   ├── dt_kv.proto\\n│   │       │   └── dt_raft_server.proto\\n│   │       └── resources\\n│   │           ├── junit-platform.properties\\n│   │           └── logback-test.xml\\n│   └── pom.xml\\n├── test-support\\n│   ├── src/main/java/com/github/dtprj/dongting/test\\n│   │   ├── DtJunitListener.java\\n│   │   ├── Tick.java\\n│   │   └── WaitUtil.java\\n│   └── pom.xml\\n├── README.md\\n└── pom.xml\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"18f86ca8cc90ef225efd543f69f47bd69a1005c8","last_commit_update":"2025-09-18T14:58:15+08:00","gmt_create":"2025-09-19T19:26:49.826009+08:00","gmt_modified":"2025-09-19T20:40:41.569372+08:00","extend_info":"{\"language\":\"zh\",\"active\":true,\"branch\":\"master\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}